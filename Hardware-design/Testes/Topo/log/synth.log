Qflow synthesis logfile created on qui jan 18 22:45:22 -02 2018
Running yosys for verilog parsing and synthesis
yosys  -s NRISC_UP.ys

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)


-- Executing script file `NRISC_UP.ys' --

1. Executing Liberty frontend.
Imported 31 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v' to AST representation.
Generating RTLIL representation for module `\NRISC_UP'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend.
Parsing Verilog input from `NRISC_ULA.v' to AST representation.
Generating RTLIL representation for module `\NRISC_ULA'.
Generating RTLIL representation for module `\somaUla'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend.
Parsing Verilog input from `NRISC_REGs.v' to AST representation.
Generating RTLIL representation for module `\NRISC_REGs'.
Warning: Blocking assignment to memory in line NRISC_REGs.v:63 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:64 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:65 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:66 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:67 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:68 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:69 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:70 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:71 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:72 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:73 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:74 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:75 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:76 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:80 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:83 is handled like a non-blocking assignment.
Warning: Blocking assignment to memory in line NRISC_REGs.v:84 is handled like a non-blocking assignment.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend.
Parsing Verilog input from `NRISC_InstructionDecoder.v' to AST representation.
Generating RTLIL representation for module `\NRISC_InstructionDecoder'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend.
Parsing Verilog input from `NRISC_PC_ctrl.v' to AST representation.
Generating RTLIL representation for module `\NRISC_PC_ctrl'.
Warning: Replacing memory \PC_STACK with list of registers. See NRISC_PC_ctrl.v:83, NRISC_PC_ctrl.v:63
Warning: Replacing memory \ADDR_stack with list of registers. See NRISC_PC_ctrl.v:75, NRISC_PC_ctrl.v:61
Successfully finished Verilog frontend.

7. Executing SYNTH pass.

7.1. Executing HIERARCHY pass (managing design hierarchy).

7.1.1. Analyzing design hierarchy..
Top module:  \NRISC_UP
Used module:     \NRISC_ULA
Used module:         \somaUla
Used module:     \NRISC_REGs
Used module:     \NRISC_InstructionDecoder
Used module:     \NRISC_PC_ctrl

7.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\somaUla'.
Parameter \TAM = 32
Generating RTLIL representation for module `$paramod\somaUla\TAM=32'.

7.1.3. Analyzing design hierarchy..
Top module:  \NRISC_UP
Used module:     \NRISC_ULA
Used module:         $paramod\somaUla\TAM=32
Used module:     \NRISC_REGs
Used module:     \NRISC_InstructionDecoder
Used module:     \NRISC_PC_ctrl

7.1.4. Analyzing design hierarchy..
Top module:  \NRISC_UP
Used module:     \NRISC_ULA
Used module:         $paramod\somaUla\TAM=32
Used module:     \NRISC_REGs
Used module:     \NRISC_InstructionDecoder
Used module:     \NRISC_PC_ctrl
Removing unused module `\somaUla'.
Removed 1 unused modules.

7.2. Executing PROC pass (convert processes to netlists).

7.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$NRISC_PC_ctrl.v:3$509 in module NRISC_PC_ctrl.
Removed 4 dead cases from process $proc$NRISC_PC_ctrl.v:57$477 in module NRISC_PC_ctrl.
Removed 6 dead cases from process $proc$NRISC_InstructionDecoder.v:82$440 in module NRISC_InstructionDecoder.
Removed 1 dead cases from process $proc$NRISC_REGs.v:5$412 in module NRISC_REGs.
Removed 1 dead cases from process $proc$NRISC_REGs.v:5$409 in module NRISC_REGs.
Removed 1 dead cases from process $proc$NRISC_REGs.v:61$302 in module NRISC_REGs.
Removed 1 dead cases from process $proc$NRISC_ULA.v:20$111 in module NRISC_ULA.
Removed a total of 15 dead cases.

7.2.3. Executing PROC_INIT pass (extract init attributes).

7.2.4. Executing PROC_ARST pass (detect async resets in processes).

7.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:3$509'.
     1/2: $1$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:54$463_DATA[7:0]$511
     2/2: $0$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:54$463_DATA[7:0]$510
Creating decoders for process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
     1/59: $5\PC_STACK[0][7:0]
     2/59: $5\PC_STACK[3][7:0]
     3/59: $5\PC_STACK[2][7:0]
     4/59: $5\PC_STACK[1][7:0]
     5/59: $4\PC_STACK[0][7:0]
     6/59: $4\PC_STACK[3][7:0]
     7/59: $4\PC_STACK[2][7:0]
     8/59: $4\PC_STACK[1][7:0]
     9/59: $3\PC_STACK[0][7:0]
    10/59: $3\PC_STACK[3][7:0]
    11/59: $3\PC_STACK[2][7:0]
    12/59: $3\PC_STACK[1][7:0]
    13/59: $3$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:83$465_DATA[7:0]$507
    14/59: $2\PC_STACK[3][7:0]
    15/59: $2\PC_STACK[2][7:0]
    16/59: $2\PC_STACK[1][7:0]
    17/59: $2\PC_STACK[0][7:0]
    18/59: $2$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:83$464_ADDR[1:0]$499
    19/59: $2$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:83$464_DATA[7:0]$500
    20/59: $2$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:83$465_DATA[7:0]$502
    21/59: $2$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:83$465_ADDR[1:0]$501
    22/59: $2$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:85$467_DATA[7:0]$506
    23/59: $2$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:85$467_ADDR[1:0]$505
    24/59: $2$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:84$466_DATA[7:0]$504
    25/59: $2$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:84$466_ADDR[1:0]$503
    26/59: $2\PC_pointer[3:0]
    27/59: $1\delay[1:0] [1]
    28/59: $1\delay[1:0] [0]
    29/59: $1\ADDR_stack[1][7:0]
    30/59: $1\ADDR_stack[0][7:0]
    31/59: $1\PC_pointer[3:0]
    32/59: $1\PC_STACK[0][7:0]
    33/59: $1$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:85$467_DATA[7:0]$493
    34/59: $1$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:85$467_ADDR[1:0]$492
    35/59: $1$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:84$466_DATA[7:0]$491
    36/59: $1$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:84$466_ADDR[1:0]$490
    37/59: $1$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:83$465_DATA[7:0]$489
    38/59: $1$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:83$465_ADDR[1:0]$488
    39/59: $1$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:83$464_DATA[7:0]$487
    40/59: $1$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:83$464_ADDR[1:0]$486
    41/59: $1\PC_STACK[3][7:0]
    42/59: $1\PC_STACK[2][7:0]
    43/59: $1\PC_STACK[1][7:0]
    44/59: $0$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:85$467_DATA[7:0]$485
    45/59: $0$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:85$467_ADDR[1:0]$484
    46/59: $0$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:84$466_DATA[7:0]$483
    47/59: $0$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:84$466_ADDR[1:0]$482
    48/59: $0$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:83$465_DATA[7:0]$481
    49/59: $0$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:83$465_ADDR[1:0]$480
    50/59: $0$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:83$464_DATA[7:0]$479
    51/59: $0$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:83$464_ADDR[1:0]$478
    52/59: $0\PC_STACK[3][7:0]
    53/59: $0\PC_STACK[2][7:0]
    54/59: $0\PC_STACK[1][7:0]
    55/59: $0\PC_STACK[0][7:0]
    56/59: $0\ADDR_stack[1][7:0]
    57/59: $0\ADDR_stack[0][7:0]
    58/59: $0\PC_pointer[3:0]
    59/59: $0\delay[1:0]
Creating decoders for process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:448$460'.
     1/2: $1\old_rd[3:0]
     2/2: $0\old_rd[3:0]
Creating decoders for process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
     1/112: $6\CORE_ULA_ctrl[3:0]
     2/112: $5\CORE_DATA_ctrl[2:0]
     3/112: $5\CORE_DATA_REGMux[0:0]
     4/112: $5\CORE_DATA_load[0:0]
     5/112: $4\CORE_DATA_ctrl[2:0]
     6/112: $8\CORE_PC_ctrl[1:0]
     7/112: $7\CORE_PC_ctrl[1:0]
     8/112: $6\CORE_PC_ctrl[1:0]
     9/112: $6\CORE_InstructionToULAMux[1:0]
    10/112: $6\CORE_REG_RF1[3:0]
    11/112: $5\CORE_PC_ctrl[1:0]
    12/112: $5\CORE_STACK_ctrl[1:0]
    13/112: $5\CORE_ULA_ctrl[3:0]
    14/112: $5\CORE_InstructionToULAMux[1:0]
    15/112: $5\CORE_REG_write[0:0]
    16/112: $5\CORE_REG_RF2[3:0]
    17/112: $5\CORE_REG_RF1[3:0]
    18/112: $8\CORE_Status_ctrl[3:3]
    19/112: $5\CORE_Status_ctrl[2:0] [2:1]
    20/112: $6\CORE_Status_ctrl[2:1]
    21/112: $5\CORE_Status_ctrl[2:0] [0]
    22/112: $5\CORE_INT_ctrl[1:0]
    23/112: $5\CORE_INT_CHA[7:0]
    24/112: $7\CORE_Status_ctrl[0:0]
    25/112: $4\CORE_PC_ctrl[1:0]
    26/112: $4\CORE_STACK_ctrl[1:0]
    27/112: $4\CORE_DATA_ADDR_mux[0:0]
    28/112: $4\CORE_DATA_REGMux[0:0]
    29/112: $4\CORE_DATA_write[0:0]
    30/112: $4\CORE_DATA_load[0:0]
    31/112: $4\CORE_REG_write[0:0]
    32/112: $4\CORE_INT_ctrl[1:0]
    33/112: $4\CORE_INT_CHA[7:0]
    34/112: $4\CORE_Status_ctrl[3:0] [2:0]
    35/112: $4\CORE_ULA_ctrl[3:0]
    36/112: $4\CORE_REG_RF2[3:0]
    37/112: $4\CORE_REG_RF1[3:0]
    38/112: $4\CORE_InstructionToULAMux[1:0]
    39/112: $4\CORE_Status_ctrl[3:0] [3]
    40/112: $3\CORE_DATA_load[0:0]
    41/112: $3\CORE_DATA_write[0:0]
    42/112: $3\CORE_DATA_REGMux[0:0]
    43/112: $3\CORE_DATA_ADDR_mux[0:0]
    44/112: $3\CORE_INT_ctrl[1:0]
    45/112: $3\CORE_INT_CHA[7:0]
    46/112: $3\CORE_PC_ctrl[1:0]
    47/112: $3\CORE_STACK_ctrl[1:0]
    48/112: $3\CORE_ULA_ctrl[3:0]
    49/112: $3\CORE_REG_RF2[3:0]
    50/112: $3\CORE_REG_RF1[3:0]
    51/112: $3\CORE_REG_write[0:0]
    52/112: $3\CORE_InstructionToULAMux[1:0]
    53/112: $3\CORE_Status_ctrl[3:0]
    54/112: $3\CORE_DATA_ctrl[2:0]
    55/112: $3\CORE_REG_RD[3:0]
    56/112: $2\CORE_DATA_ctrl[2:0]
    57/112: $2\CORE_DATA_load[0:0]
    58/112: $2\CORE_DATA_write[0:0]
    59/112: $2\CORE_REG_RD[3:0]
    60/112: $2\CORE_DATA_REGMux[0:0]
    61/112: $2\CORE_DATA_ADDR_mux[0:0]
    62/112: $2\CORE_INT_ctrl[1:0]
    63/112: $2\CORE_INT_CHA[7:0]
    64/112: $2\CORE_PC_ctrl[1:0]
    65/112: $2\CORE_STACK_ctrl[1:0]
    66/112: $2\CORE_ULA_ctrl[3:0]
    67/112: $2\CORE_REG_RF2[3:0]
    68/112: $2\CORE_REG_RF1[3:0]
    69/112: $2\CORE_REG_write[0:0]
    70/112: $2\CORE_InstructionToULAMux[1:0]
    71/112: $2\CORE_Status_ctrl[3:0]
    72/112: $1\CORE_Status_ctrl[4:0] [4]
    73/112: $1\CORE_Status_ctrl[4:0] [3:0]
    74/112: $1\old_rd1[3:0]
    75/112: $1\CORE_INT_ctrl[1:0]
    76/112: $1\CORE_INT_CHA[7:0]
    77/112: $1\CORE_PC_ctrl[1:0]
    78/112: $1\CORE_STACK_ctrl[1:0]
    79/112: $1\CORE_DATA_REGMux[0:0]
    80/112: $1\CORE_DATA_ctrl[2:0]
    81/112: $1\CORE_DATA_ADDR_mux[0:0]
    82/112: $1\CORE_DATA_load[0:0]
    83/112: $1\CORE_DATA_write[0:0]
    84/112: $1\CORE_REG_write[0:0]
    85/112: $1\CORE_REG_RF2[3:0]
    86/112: $1\CORE_REG_RF1[3:0]
    87/112: $1\CORE_REG_RD[3:0]
    88/112: $1\CORE_ULA_REGB_Stall[0:0]
    89/112: $1\CORE_ULA_REGA_Stall[0:0]
    90/112: $1\CORE_ULA_ctrl[3:0]
    91/112: $1\CORE_InstructionToULAMux[1:0]
    92/112: $1\rd_old_write[0:0]
    93/112: $0\rd_old_write[0:0]
    94/112: $0\old_rd1[3:0]
    95/112: $0\CORE_DATA_ctrl[2:0]
    96/112: $0\CORE_DATA_load[0:0]
    97/112: $0\CORE_DATA_write[0:0]
    98/112: $0\CORE_REG_RD[3:0]
    99/112: $0\CORE_DATA_REGMux[0:0]
   100/112: $0\CORE_DATA_ADDR_mux[0:0]
   101/112: $0\CORE_INT_ctrl[1:0]
   102/112: $0\CORE_INT_CHA[7:0]
   103/112: $0\CORE_PC_ctrl[1:0]
   104/112: $0\CORE_STACK_ctrl[1:0]
   105/112: $0\CORE_ULA_REGB_Stall[0:0]
   106/112: $0\CORE_ULA_REGA_Stall[0:0]
   107/112: $0\CORE_ULA_ctrl[3:0]
   108/112: $0\CORE_REG_RF2[3:0]
   109/112: $0\CORE_REG_RF1[3:0]
   110/112: $0\CORE_REG_write[0:0]
   111/112: $0\CORE_InstructionToULAMux[1:0]
   112/112: $0\CORE_Status_ctrl[4:0]
Creating decoders for process `\NRISC_REGs.$proc$NRISC_REGs.v:5$412'.
     1/2: $1$mem2reg_rd$\REGS$NRISC_REGs.v:59$276_DATA[31:0]$414
     2/2: $0$mem2reg_rd$\REGS$NRISC_REGs.v:59$276_DATA[31:0]$413
Creating decoders for process `\NRISC_REGs.$proc$NRISC_REGs.v:5$409'.
     1/2: $1$mem2reg_rd$\REGS$NRISC_REGs.v:58$275_DATA[31:0]$411
     2/2: $0$mem2reg_rd$\REGS$NRISC_REGs.v:58$275_DATA[31:0]$410
Creating decoders for process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
     1/16: $0\REGS[15][31:0]
     2/16: $0\REGS[14][31:0]
     3/16: $0\REGS[13][31:0]
     4/16: $0\REGS[12][31:0]
     5/16: $0\REGS[11][31:0]
     6/16: $0\REGS[10][31:0]
     7/16: $0\REGS[9][31:0]
     8/16: $0\REGS[8][31:0]
     9/16: $0\REGS[7][31:0]
    10/16: $0\REGS[6][31:0]
    11/16: $0\REGS[5][31:0]
    12/16: $0\REGS[4][31:0]
    13/16: $0\REGS[3][31:0]
    14/16: $0\REGS[2][31:0]
    15/16: $0\REGS[1][31:0]
    16/16: $0\REGS[0][31:0]
Creating decoders for process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
     1/75: $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305
     2/75: $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
     3/75: $0$memwr$\global_REGS$NRISC_REGs.v:63$277_ADDR[31:0]$303
     4/75: $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308
     5/75: $0$memwr$\global_REGS$NRISC_REGs.v:64$278_DATA[31:0]$307
     6/75: $0$memwr$\global_REGS$NRISC_REGs.v:64$278_ADDR[31:0]$306
     7/75: $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311
     8/75: $0$memwr$\global_REGS$NRISC_REGs.v:65$279_DATA[31:0]$310
     9/75: $0$memwr$\global_REGS$NRISC_REGs.v:65$279_ADDR[31:0]$309
    10/75: $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314
    11/75: $0$memwr$\global_REGS$NRISC_REGs.v:66$280_DATA[31:0]$313
    12/75: $0$memwr$\global_REGS$NRISC_REGs.v:66$280_ADDR[31:0]$312
    13/75: $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317
    14/75: $0$memwr$\global_REGS$NRISC_REGs.v:67$281_DATA[31:0]$316
    15/75: $0$memwr$\global_REGS$NRISC_REGs.v:67$281_ADDR[31:0]$315
    16/75: $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320
    17/75: $0$memwr$\global_REGS$NRISC_REGs.v:68$282_DATA[31:0]$319
    18/75: $0$memwr$\global_REGS$NRISC_REGs.v:68$282_ADDR[31:0]$318
    19/75: $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323
    20/75: $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_DATA[31:0]$322
    21/75: $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_ADDR[31:0]$321
    22/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326
    23/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_DATA[31:0]$325
    24/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_ADDR[31:0]$324
    25/75: $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329
    26/75: $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_DATA[31:0]$328
    27/75: $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_ADDR[31:0]$327
    28/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332
    29/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_DATA[31:0]$331
    30/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_ADDR[31:0]$330
    31/75: $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335
    32/75: $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_DATA[31:0]$334
    33/75: $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_ADDR[31:0]$333
    34/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338
    35/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_DATA[31:0]$337
    36/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_ADDR[31:0]$336
    37/75: $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341
    38/75: $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_DATA[31:0]$340
    39/75: $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_ADDR[31:0]$339
    40/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344
    41/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_DATA[31:0]$343
    42/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_ADDR[31:0]$342
    43/75: $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347
    44/75: $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_DATA[31:0]$346
    45/75: $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_ADDR[31:0]$345
    46/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350
    47/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_DATA[31:0]$349
    48/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_ADDR[31:0]$348
    49/75: $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353
    50/75: $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_DATA[31:0]$352
    51/75: $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_ADDR[31:0]$351
    52/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356
    53/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_DATA[31:0]$355
    54/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_ADDR[31:0]$354
    55/75: $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359
    56/75: $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_DATA[31:0]$358
    57/75: $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_ADDR[31:0]$357
    58/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362
    59/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_DATA[31:0]$361
    60/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_ADDR[31:0]$360
    61/75: $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365
    62/75: $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_DATA[31:0]$364
    63/75: $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_ADDR[31:0]$363
    64/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368
    65/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_DATA[31:0]$367
    66/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_ADDR[31:0]$366
    67/75: $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371
    68/75: $0$memwr$\global_REGS$NRISC_REGs.v:80$299_DATA[31:0]$370
    69/75: $0$memwr$\global_REGS$NRISC_REGs.v:80$299_ADDR[3:0]$369
    70/75: $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374
    71/75: $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_DATA[31:0]$373
    72/75: $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_ADDR[2:0]$372
    73/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377
    74/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_DATA[31:0]$376
    75/75: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_ADDR[2:0]$375
Creating decoders for process `\NRISC_ULA.$proc$NRISC_ULA.v:20$111'.
     1/2: $1$mem2reg_rd$\OUT$NRISC_ULA.v:98$15_DATA[31:0]$113
     2/2: $0$mem2reg_rd$\OUT$NRISC_ULA.v:98$15_DATA[31:0]$112
Creating decoders for process `\NRISC_ULA.$proc$NRISC_ULA.v:20$99'.
     1/7: $0\OUT[7][31:0]
     2/7: $0\OUT[6][31:0]
     3/7: $0\OUT[5][31:0]
     4/7: $0\OUT[4][31:0]
     5/7: $0\OUT[3][31:0]
     6/7: $0\OUT[2][31:0]
     7/7: $0\OUT[1][31:0]
Creating decoders for process `\NRISC_ULA.$proc$NRISC_ULA.v:106$97'.
     1/1: $0$mem2bits$\OUT$NRISC_ULA.v:106$14[31:0]$98
Creating decoders for process `\NRISC_ULA.$proc$NRISC_ULA.v:106$95'.
     1/1: $0$mem2bits$\OUT$NRISC_ULA.v:106$13[31:0]$96
Creating decoders for process `\NRISC_ULA.$proc$NRISC_ULA.v:105$93'.
     1/1: $0$mem2bits$\OUT$NRISC_ULA.v:105$12[31:0]$94
Creating decoders for process `\NRISC_ULA.$proc$NRISC_ULA.v:105$91'.
     1/1: $0$mem2bits$\OUT$NRISC_ULA.v:105$11[31:0]$92
Creating decoders for process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
     1/10: $0\InstructionIN[7:0]
     2/10: $0\ULA_out_exec_pipe[31:0]
     3/10: $0\CORE_DATA_REGMux_exec_pipe[0:0]
     4/10: $0\CORE_DATA_ADDR_mux_exec_pipe[0:0]
     5/10: $0\CORE_DATA_ctrl_exec_pipe[2:0]
     6/10: $0\CORE_DATA_load_exec_pipe[0:0]
     7/10: $0\CORE_DATA_write_exec_pipe[0:0]
     8/10: $0\REG_Write_exec_pipe[0:0]
     9/10: $0\REG_RFD_exec_pipe[3:0]
    10/10: $0\REG_RFD_wb_pipe[3:0]
Creating decoders for process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:122$2'.
     1/1: $0\REG_Write_wb_pipe[0:0]

7.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\NRISC_PC_ctrl.$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:54$463_DATA' from process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:3$509'.
No latch inferred for signal `\NRISC_REGs.$mem2reg_rd$\REGS$NRISC_REGs.v:59$276_DATA' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$412'.
No latch inferred for signal `\NRISC_REGs.$mem2reg_rd$\REGS$NRISC_REGs.v:58$275_DATA' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$409'.
No latch inferred for signal `\NRISC_REGs.\REGS[0]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[1]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[2]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[3]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[4]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[5]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[6]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[7]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[8]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[9]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[10]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[11]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[12]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[13]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[14]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_REGs.\REGS[15]' from process `\NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
No latch inferred for signal `\NRISC_ULA.$mem2reg_rd$\OUT$NRISC_ULA.v:98$15_DATA' from process `\NRISC_ULA.$proc$NRISC_ULA.v:20$111'.
No latch inferred for signal `\NRISC_ULA.\OUT[1]' from process `\NRISC_ULA.$proc$NRISC_ULA.v:20$99'.
No latch inferred for signal `\NRISC_ULA.\OUT[2]' from process `\NRISC_ULA.$proc$NRISC_ULA.v:20$99'.
No latch inferred for signal `\NRISC_ULA.\OUT[3]' from process `\NRISC_ULA.$proc$NRISC_ULA.v:20$99'.
No latch inferred for signal `\NRISC_ULA.\OUT[4]' from process `\NRISC_ULA.$proc$NRISC_ULA.v:20$99'.
No latch inferred for signal `\NRISC_ULA.\OUT[5]' from process `\NRISC_ULA.$proc$NRISC_ULA.v:20$99'.
No latch inferred for signal `\NRISC_ULA.\OUT[6]' from process `\NRISC_ULA.$proc$NRISC_ULA.v:20$99'.
No latch inferred for signal `\NRISC_ULA.\OUT[7]' from process `\NRISC_ULA.$proc$NRISC_ULA.v:20$99'.
No latch inferred for signal `\NRISC_ULA.$mem2bits$\OUT$NRISC_ULA.v:106$14' from process `\NRISC_ULA.$proc$NRISC_ULA.v:106$97'.
No latch inferred for signal `\NRISC_ULA.$mem2bits$\OUT$NRISC_ULA.v:106$13' from process `\NRISC_ULA.$proc$NRISC_ULA.v:106$95'.
No latch inferred for signal `\NRISC_ULA.$mem2bits$\OUT$NRISC_ULA.v:105$12' from process `\NRISC_ULA.$proc$NRISC_ULA.v:105$93'.
No latch inferred for signal `\NRISC_ULA.$mem2bits$\OUT$NRISC_ULA.v:105$11' from process `\NRISC_ULA.$proc$NRISC_ULA.v:105$91'.

7.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\NRISC_PC_ctrl.\delay' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2362' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.\PC_pointer' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2363' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.\ADDR_stack[0]' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2364' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.\ADDR_stack[1]' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2365' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.\PC_STACK[0]' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2366' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.\PC_STACK[1]' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2367' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.\PC_STACK[2]' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2368' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.\PC_STACK[3]' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2369' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:83$464_ADDR' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2370' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:83$464_DATA' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2371' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:83$465_ADDR' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2372' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.$mem2reg_rd$\PC_STACK$NRISC_PC_ctrl.v:83$465_DATA' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2373' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:84$466_ADDR' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2374' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:84$466_DATA' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2375' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:85$467_ADDR' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2376' with positive edge clock.
Creating register for signal `\NRISC_PC_ctrl.$mem2reg_wr$\PC_STACK$NRISC_PC_ctrl.v:85$467_DATA' using process `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
  created $dff cell `$procdff$2377' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\old_rd' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:448$460'.
  created $dff cell `$procdff$2378' with negative edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_Status_ctrl' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2379' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_InstructionToULAMux' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2380' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_REG_write' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2381' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_REG_RF1' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2382' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_REG_RF2' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2383' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_ULA_ctrl' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2384' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_ULA_REGA_Stall' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2385' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_ULA_REGB_Stall' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2386' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_STACK_ctrl' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2387' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_PC_ctrl' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2388' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_INT_CHA' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2389' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_INT_ctrl' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2390' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_DATA_ADDR_mux' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2391' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_DATA_REGMux' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2392' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_REG_RD' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2393' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_DATA_write' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2394' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_DATA_load' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2395' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\CORE_DATA_ctrl' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2396' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\old_rd1' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2397' with positive edge clock.
Creating register for signal `\NRISC_InstructionDecoder.\rd_old_write' using process `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
  created $dff cell `$procdff$2398' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:63$277_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2399' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2400' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:63$277_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2401' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:64$278_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2402' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:64$278_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2403' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:64$278_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2404' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:65$279_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2405' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:65$279_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2406' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:65$279_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2407' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:66$280_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2408' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:66$280_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2409' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:66$280_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2410' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:67$281_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2411' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:67$281_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2412' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:67$281_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2413' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:68$282_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2414' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:68$282_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2415' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:68$282_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2416' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:69$283_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2417' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:69$283_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2418' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2419' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2420' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2421' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2422' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:70$285_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2423' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:70$285_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2424' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2425' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2426' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2427' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2428' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:71$287_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2429' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:71$287_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2430' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2431' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2432' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2433' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2434' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:72$289_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2435' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:72$289_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2436' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2437' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2438' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2439' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2440' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:73$291_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2441' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:73$291_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2442' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2443' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2444' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2445' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2446' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:74$293_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2447' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:74$293_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2448' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2449' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2450' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2451' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2452' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:75$295_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2453' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:75$295_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2454' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2455' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2456' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2457' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2458' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:76$297_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2459' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:76$297_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2460' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2461' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2462' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2463' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2464' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:80$299_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2465' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:80$299_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2466' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:80$299_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2467' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:83$300_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2468' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:83$300_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2469' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2470' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_ADDR' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2471' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_DATA' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2472' with positive edge clock.
Creating register for signal `\NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN' using process `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
  created $dff cell `$procdff$2473' with positive edge clock.
Creating register for signal `\NRISC_UP.\InstructionIN' using process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
  created $dff cell `$procdff$2474' with positive edge clock.
Creating register for signal `\NRISC_UP.\REG_RFD_exec_pipe' using process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
  created $dff cell `$procdff$2475' with positive edge clock.
Creating register for signal `\NRISC_UP.\REG_Write_exec_pipe' using process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
  created $dff cell `$procdff$2476' with positive edge clock.
Creating register for signal `\NRISC_UP.\CORE_DATA_write_exec_pipe' using process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
  created $dff cell `$procdff$2477' with positive edge clock.
Creating register for signal `\NRISC_UP.\CORE_DATA_load_exec_pipe' using process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
  created $dff cell `$procdff$2478' with positive edge clock.
Creating register for signal `\NRISC_UP.\CORE_DATA_ctrl_exec_pipe' using process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
  created $dff cell `$procdff$2479' with positive edge clock.
Creating register for signal `\NRISC_UP.\CORE_DATA_ADDR_mux_exec_pipe' using process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
  created $dff cell `$procdff$2480' with positive edge clock.
Creating register for signal `\NRISC_UP.\CORE_DATA_REGMux_exec_pipe' using process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
  created $dff cell `$procdff$2481' with positive edge clock.
Creating register for signal `\NRISC_UP.\ULA_out_exec_pipe' using process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
  created $dff cell `$procdff$2482' with positive edge clock.
Creating register for signal `\NRISC_UP.\REG_RFD_wb_pipe' using process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
  created $dff cell `$procdff$2483' with positive edge clock.
Creating register for signal `\NRISC_UP.\REG_Write_wb_pipe' using process `\NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:122$2'.
  created $dff cell `$procdff$2484' with negative edge clock.

7.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:3$509'.
Removing empty process `NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:3$509'.
Found and cleaned up 7 empty switches in `\NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
Removing empty process `NRISC_PC_ctrl.$proc$NRISC_PC_ctrl.v:57$477'.
Found and cleaned up 1 empty switch in `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:448$460'.
Removing empty process `NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:448$460'.
Found and cleaned up 14 empty switches in `\NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
Removing empty process `NRISC_InstructionDecoder.$proc$NRISC_InstructionDecoder.v:82$440'.
Found and cleaned up 1 empty switch in `\NRISC_REGs.$proc$NRISC_REGs.v:5$412'.
Removing empty process `NRISC_REGs.$proc$NRISC_REGs.v:5$412'.
Found and cleaned up 1 empty switch in `\NRISC_REGs.$proc$NRISC_REGs.v:5$409'.
Removing empty process `NRISC_REGs.$proc$NRISC_REGs.v:5$409'.
Removing empty process `NRISC_REGs.$proc$NRISC_REGs.v:5$378'.
Found and cleaned up 4 empty switches in `\NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
Removing empty process `NRISC_REGs.$proc$NRISC_REGs.v:61$302'.
Found and cleaned up 1 empty switch in `\NRISC_ULA.$proc$NRISC_ULA.v:20$111'.
Removing empty process `NRISC_ULA.$proc$NRISC_ULA.v:20$111'.
Removing empty process `NRISC_ULA.$proc$NRISC_ULA.v:20$99'.
Removing empty process `NRISC_ULA.$proc$NRISC_ULA.v:106$97'.
Removing empty process `NRISC_ULA.$proc$NRISC_ULA.v:106$95'.
Removing empty process `NRISC_ULA.$proc$NRISC_ULA.v:105$93'.
Removing empty process `NRISC_ULA.$proc$NRISC_ULA.v:105$91'.
Removing empty process `NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:125$3'.
Removing empty process `NRISC_UP.$proc$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:122$2'.
Cleaned up 30 empty switches.

7.3. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$procmux$779_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$777_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$831_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$829_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$764_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$895_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$887_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$752_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$879_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$871_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$863_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$728_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$683_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$740_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$855_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$716_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$818_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$816_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$847_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$705_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$805_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$803_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$839_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$694_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$792_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$790_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$677_CMP0' in module `NRISC_PC_ctrl' with $logic_not.
Replacing $eq cell `$procmux$1264_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1268_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1270_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1632_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1634_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1636_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1811_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1813_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1958_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $ne cell `$ne$NRISC_InstructionDecoder.v:441$450' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1152_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1156_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1283_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1287_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1289_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1648_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1650_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1652_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1824_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1826_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1964_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $ne cell `$ne$NRISC_InstructionDecoder.v:442$453' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$eq$NRISC_InstructionDecoder.v:445$456' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1886_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1910_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$994_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1007_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1011_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1026_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1030_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1045_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1049_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1067_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1081_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1087_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1102_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1104_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1108_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1120_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1124_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1136_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1140_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1169_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1173_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1175_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1188_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1192_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1194_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1207_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1211_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1213_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1226_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1230_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1232_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1245_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1249_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1251_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1305_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1307_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1323_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1350_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1352_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1354_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1356_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1325_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1327_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1329_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1436_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1440_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1442_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1444_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1373_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1375_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1377_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1393_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1395_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1397_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1399_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1415_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1417_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1419_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1456_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1458_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1460_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1472_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1474_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1476_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1488_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1490_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1492_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1504_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1506_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1508_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1520_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1522_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1524_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1536_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1538_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1540_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1552_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1554_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1556_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1568_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1570_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1572_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1584_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1586_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1588_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1600_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1602_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1604_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1616_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1618_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1620_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1664_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1666_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1668_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1680_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1682_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1684_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1695_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1697_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1708_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1710_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1721_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1723_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1734_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1736_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1747_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1749_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1760_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1762_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1773_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1775_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1786_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1788_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1798_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1800_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1837_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1839_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1849_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1851_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1862_CMP0' in module `NRISC_InstructionDecoder' with $logic_not.
Replacing $eq cell `$procmux$1864_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1875_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1892_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1898_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1904_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1916_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1922_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1928_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1934_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1940_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1946_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1952_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1970_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1976_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Replacing $eq cell `$procmux$1982_CMP0' in module `NRISC_InstructionDecoder' with inverter.
Optimizing away select inverter for $mux cell `$procmux$1269' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1635' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1812' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1155' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1288' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1651' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1825' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1885' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1010' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1029' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1048' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1066' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1086' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1107' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1123' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1139' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1174' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1193' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1212' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1231' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1250' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1306' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1351' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1355' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1324' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1328' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1439' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1443' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1372' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1376' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1394' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1398' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1414' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1418' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1459' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1475' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1491' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1507' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1523' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1539' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1555' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1571' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1587' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1603' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1619' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1667' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1683' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1696' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1709' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1722' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1735' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1748' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1761' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1774' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1787' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1799' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1838' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1850' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1863' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $mux cell `$procmux$1874' in module `NRISC_InstructionDecoder'.
Replacing $eq cell `$procmux$2065_CMP0' in module `NRISC_REGs' with $logic_not.
Replacing $eq cell `$procmux$2082_CMP0' in module `NRISC_REGs' with $logic_not.
Replacing $eq cell `$procmux$2306_CMP0' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$procmux$2315_CMP0' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$procmux$2324_CMP0' in module `NRISC_REGs' with inverter.
Optimizing away select inverter for $mux cell `$procmux$2305' in module `NRISC_REGs'.
Optimizing away select inverter for $mux cell `$procmux$2314' in module `NRISC_REGs'.
Optimizing away select inverter for $mux cell `$procmux$2323' in module `NRISC_REGs'.
Replacing $eq cell `$eq$NRISC_ULA.v:103$53' in module `NRISC_ULA' with $logic_not.
Replacing $eq cell `$procmux$2361_CMP0' in module `NRISC_ULA' with $logic_not.

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \NRISC_PC_ctrl..
  removing unused `$mux' cell `$procmux$913'.
  removing unused `$eq' cell `$procmux$914_CMP0'.
  removing unused `$mux' cell `$procmux$909'.
  removing unused `$mux' cell `$procmux$906'.
  removing unused `$eq' cell `$procmux$907_CMP0'.
  removing unused `$mux' cell `$procmux$903'.
  removing unused `$mux' cell `$procmux$900'.
  removing unused `$eq' cell `$procmux$901_CMP0'.
  removing unused `$mux' cell `$procmux$897'.
  removing unused `$mux' cell `$procmux$894'.
  removing unused `$logic_not' cell `$procmux$895_CMP0'.
  removing unused `$mux' cell `$procmux$889'.
  removing unused `$mux' cell `$procmux$886'.
  removing unused `$logic_not' cell `$procmux$887_CMP0'.
  removing unused `$mux' cell `$procmux$881'.
  removing unused `$mux' cell `$procmux$878'.
  removing unused `$logic_not' cell `$procmux$879_CMP0'.
  removing unused `$mux' cell `$procmux$873'.
  removing unused `$mux' cell `$procmux$870'.
  removing unused `$logic_not' cell `$procmux$871_CMP0'.
  removing unused `$mux' cell `$procmux$916'.
  removing unused `$eq' cell `$procmux$921_CMP0'.
  removing unused `$mux' cell `$procmux$920'.
  removing unused `$mux' cell `$procmux$923'.
  removing unused `$mux' cell `$procmux$951'.
  removing unused `$mux' cell `$procmux$954'.
  removing unused `$mux' cell `$procmux$957'.
  removing unused `$mux' cell `$procmux$960'.
  removing unused `$mux' cell `$procmux$963'.
  removing unused `$mux' cell `$procmux$966'.
  removing unused `$mux' cell `$procmux$969'.
  removing unused `$mux' cell `$procmux$972'.
  removing unused `$dff' cell `$procdff$2370'.
  removing unused `$dff' cell `$procdff$2371'.
  removing unused `$dff' cell `$procdff$2372'.
  removing unused `$dff' cell `$procdff$2373'.
  removing unused `$dff' cell `$procdff$2374'.
  removing unused `$dff' cell `$procdff$2375'.
  removing unused `$dff' cell `$procdff$2376'.
  removing unused `$dff' cell `$procdff$2377'.
Finding unused cells or wires in module \NRISC_InstructionDecoder..
  removing unused `$not' cell `$procmux$1011_CMP0'.
  removing unused `$not' cell `$procmux$1030_CMP0'.
  removing unused `$not' cell `$procmux$1049_CMP0'.
  removing unused `$not' cell `$procmux$1067_CMP0'.
  removing unused `$not' cell `$procmux$1087_CMP0'.
  removing unused `$not' cell `$procmux$1108_CMP0'.
  removing unused `$not' cell `$procmux$1124_CMP0'.
  removing unused `$not' cell `$procmux$1140_CMP0'.
  removing unused `$not' cell `$procmux$1156_CMP0'.
  removing unused `$not' cell `$procmux$1175_CMP0'.
  removing unused `$not' cell `$procmux$1194_CMP0'.
  removing unused `$not' cell `$procmux$1213_CMP0'.
  removing unused `$not' cell `$procmux$1232_CMP0'.
  removing unused `$not' cell `$procmux$1251_CMP0'.
  removing unused `$not' cell `$procmux$1270_CMP0'.
  removing unused `$not' cell `$procmux$1289_CMP0'.
  removing unused `$not' cell `$procmux$1307_CMP0'.
  removing unused `$not' cell `$procmux$1325_CMP0'.
  removing unused `$not' cell `$procmux$1329_CMP0'.
  removing unused `$not' cell `$procmux$1352_CMP0'.
  removing unused `$not' cell `$procmux$1356_CMP0'.
  removing unused `$not' cell `$procmux$1373_CMP0'.
  removing unused `$not' cell `$procmux$1377_CMP0'.
  removing unused `$not' cell `$procmux$1395_CMP0'.
  removing unused `$not' cell `$procmux$1399_CMP0'.
  removing unused `$not' cell `$procmux$1415_CMP0'.
  removing unused `$not' cell `$procmux$1419_CMP0'.
  removing unused `$not' cell `$procmux$1440_CMP0'.
  removing unused `$not' cell `$procmux$1444_CMP0'.
  removing unused `$not' cell `$procmux$1460_CMP0'.
  removing unused `$not' cell `$procmux$1476_CMP0'.
  removing unused `$not' cell `$procmux$1492_CMP0'.
  removing unused `$not' cell `$procmux$1508_CMP0'.
  removing unused `$not' cell `$procmux$1524_CMP0'.
  removing unused `$not' cell `$procmux$1540_CMP0'.
  removing unused `$not' cell `$procmux$1556_CMP0'.
  removing unused `$not' cell `$procmux$1572_CMP0'.
  removing unused `$not' cell `$procmux$1588_CMP0'.
  removing unused `$not' cell `$procmux$1604_CMP0'.
  removing unused `$not' cell `$procmux$1620_CMP0'.
  removing unused `$not' cell `$procmux$1636_CMP0'.
  removing unused `$not' cell `$procmux$1652_CMP0'.
  removing unused `$not' cell `$procmux$1668_CMP0'.
  removing unused `$not' cell `$procmux$1684_CMP0'.
  removing unused `$not' cell `$procmux$1697_CMP0'.
  removing unused `$not' cell `$procmux$1710_CMP0'.
  removing unused `$not' cell `$procmux$1723_CMP0'.
  removing unused `$not' cell `$procmux$1736_CMP0'.
  removing unused `$not' cell `$procmux$1749_CMP0'.
  removing unused `$not' cell `$procmux$1762_CMP0'.
  removing unused `$not' cell `$procmux$1775_CMP0'.
  removing unused `$not' cell `$procmux$1788_CMP0'.
  removing unused `$not' cell `$procmux$1800_CMP0'.
  removing unused `$not' cell `$procmux$1813_CMP0'.
  removing unused `$not' cell `$procmux$1826_CMP0'.
  removing unused `$not' cell `$procmux$1839_CMP0'.
  removing unused `$not' cell `$procmux$1851_CMP0'.
  removing unused `$not' cell `$procmux$1864_CMP0'.
  removing unused `$not' cell `$procmux$1875_CMP0'.
  removing unused `$not' cell `$procmux$1886_CMP0'.
  removing unused `$mux' cell `$procmux$2047'.
  removing unused `$dff' cell `$procdff$2398'.
  removing unused non-port wire \rd_old_write.
  removed 1 unused temporary wires.
Finding unused cells or wires in module \NRISC_REGs..
  removing unused `$not' cell `$procmux$2306_CMP0'.
  removing unused `$not' cell `$procmux$2315_CMP0'.
  removing unused `$not' cell `$procmux$2324_CMP0'.
  removing unused non-port wire \REGS[0].
  removed 1 unused temporary wires.
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
  removing unused `$and' cell `$and$NRISC_ULA.v:158$668'.
  removing unused `$and' cell `$and$NRISC_ULA.v:160$670'.
  removing unused `$or' cell `$or$NRISC_ULA.v:162$672'.
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..
  removing unused `$dff' cell `$procdff$2477'.
  removing unused `$dff' cell `$procdff$2478'.
  removing unused `$dff' cell `$procdff$2479'.
  removing unused `$dff' cell `$procdff$2480'.
  removing unused `$dff' cell `$procdff$2483'.
  removing unused non-port wire \REG_RFD_wb_pipe.
  removing unused non-port wire \CORE_DATA_ADDR_mux_exec_pipe.
  removing unused non-port wire \CORE_DATA_ctrl_exec_pipe.
  removing unused non-port wire \CORE_DATA_load_exec_pipe.
  removing unused non-port wire \CORE_DATA_write_exec_pipe.
  removing unused non-port wire \CORE_PC_clk.
  removing unused non-port wire \CORE_wire_write.
  removing unused non-port wire \CORE_wire_RF2.
  removing unused non-port wire \CORE_wire_RF1.
  removing unused non-port wire \CORE_wire_RD.
  removing unused non-port wire \CORE_ULAMux_inc_dec.
  removing unused non-port wire \STACK_R1.
  removing unused non-port wire \ULA_flags.
  removing unused non-port wire \ULA_ctrl.
  removed 14 unused temporary wires.

7.5. Executing CHECK pass (checking for obvious problems).
checking module $paramod\somaUla\TAM=32..
checking module NRISC_InstructionDecoder..
checking module NRISC_PC_ctrl..
checking module NRISC_REGs..
checking module NRISC_ULA..
Warning: Wire NRISC_ULA.\cmd is used but has no driver.
Warning: Wire NRISC_ULA.\ctrla [0] is used but has no driver.
Warning: Wire NRISC_ULA.\ctrla [1] is used but has no driver.
Warning: Wire NRISC_ULA.\ctrla [2] is used but has no driver.
checking module NRISC_UP..
Warning: Wire NRISC_UP.\DDATA_CORE_addr [7] is used but has no driver.
Warning: Wire NRISC_UP.\DDATA_CORE_addr [6] is used but has no driver.
Warning: Wire NRISC_UP.\DDATA_CORE_addr [5] is used but has no driver.
Warning: Wire NRISC_UP.\DDATA_CORE_addr [4] is used but has no driver.
Warning: Wire NRISC_UP.\DDATA_CORE_addr [3] is used but has no driver.
Warning: Wire NRISC_UP.\DDATA_CORE_addr [2] is used but has no driver.
Warning: Wire NRISC_UP.\DDATA_CORE_addr [1] is used but has no driver.
Warning: Wire NRISC_UP.\DDATA_CORE_addr [0] is used but has no driver.
found and reported 12 problems.

7.6. Executing OPT pass (performing simple optimizations).

7.6.1. Executing OPT_EXPR pass (perform const folding).

7.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
  Cell `$ne$NRISC_InstructionDecoder.v:442$453' is identical to cell `$ne$NRISC_InstructionDecoder.v:441$450'.
    Redirecting output \Y: $ne$NRISC_InstructionDecoder.v:442$453_Y = $ne$NRISC_InstructionDecoder.v:441$450_Y
    Removing $reduce_bool cell `$ne$NRISC_InstructionDecoder.v:442$453' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1026_CMP0' is identical to cell `$eq$NRISC_InstructionDecoder.v:445$456'.
    Redirecting output \Y: $procmux$1026_CMP = $eq$NRISC_InstructionDecoder.v:445$456_Y
    Removing $logic_not cell `$procmux$1026_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1040_CMP0' is identical to cell `$procmux$1021_CMP0'.
    Redirecting output \Y: $procmux$1040_CMP = $procmux$1021_CMP
    Removing $eq cell `$procmux$1040_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1041_CMP0' is identical to cell `$procmux$1022_CMP0'.
    Redirecting output \Y: $procmux$1041_CMP = $procmux$1022_CMP
    Removing $eq cell `$procmux$1041_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1042_CMP0' is identical to cell `$procmux$1023_CMP0'.
    Redirecting output \Y: $procmux$1042_CMP = $procmux$1023_CMP
    Removing $eq cell `$procmux$1042_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1043_CMP0' is identical to cell `$procmux$1024_CMP0'.
    Redirecting output \Y: $procmux$1043_CMP = $procmux$1024_CMP
    Removing $eq cell `$procmux$1043_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1044_CMP0' is identical to cell `$procmux$1025_CMP0'.
    Redirecting output \Y: $procmux$1044_CMP = $procmux$1025_CMP
    Removing $eq cell `$procmux$1044_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1045_CMP0' is identical to cell `$eq$NRISC_InstructionDecoder.v:445$456'.
    Redirecting output \Y: $procmux$1045_CMP = $eq$NRISC_InstructionDecoder.v:445$456_Y
    Removing $logic_not cell `$procmux$1045_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1047_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1047_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1047_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1059_CMP0' is identical to cell `$procmux$1021_CMP0'.
    Redirecting output \Y: $procmux$1059_CMP = $procmux$1021_CMP
    Removing $eq cell `$procmux$1059_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1060_CMP0' is identical to cell `$procmux$1022_CMP0'.
    Redirecting output \Y: $procmux$1060_CMP = $procmux$1022_CMP
    Removing $eq cell `$procmux$1060_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1061_CMP0' is identical to cell `$procmux$1023_CMP0'.
    Redirecting output \Y: $procmux$1061_CMP = $procmux$1023_CMP
    Removing $eq cell `$procmux$1061_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1062_CMP0' is identical to cell `$procmux$1024_CMP0'.
    Redirecting output \Y: $procmux$1062_CMP = $procmux$1024_CMP
    Removing $eq cell `$procmux$1062_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1063_CMP0' is identical to cell `$procmux$1025_CMP0'.
    Redirecting output \Y: $procmux$1063_CMP = $procmux$1025_CMP
    Removing $eq cell `$procmux$1063_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1065_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1065_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1065_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1099_CMP0' is identical to cell `$procmux$1078_CMP0'.
    Redirecting output \Y: $procmux$1099_CMP = $procmux$1078_CMP
    Removing $eq cell `$procmux$1099_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1100_CMP0' is identical to cell `$procmux$1079_CMP0'.
    Redirecting output \Y: $procmux$1100_CMP = $procmux$1079_CMP
    Removing $eq cell `$procmux$1100_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1101_CMP0' is identical to cell `$procmux$1080_CMP0'.
    Redirecting output \Y: $procmux$1101_CMP = $procmux$1080_CMP
    Removing $eq cell `$procmux$1101_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1102_CMP0' is identical to cell `$procmux$1081_CMP0'.
    Redirecting output \Y: $procmux$1102_CMP = $procmux$1081_CMP
    Removing $logic_not cell `$procmux$1102_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1106_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1106_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1106_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1119_CMP0' is identical to cell `$procmux$1083_CMP0'.
    Redirecting output \Y: $procmux$1119_CMP [0] = $procmux$1083_CMP [0]
    Removing $eq cell `$procmux$1119_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1119_CMP1' is identical to cell `$procmux$1083_CMP1'.
    Redirecting output \Y: $procmux$1119_CMP [1] = $procmux$1083_CMP [1]
    Removing $eq cell `$procmux$1119_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1119_CMP2' is identical to cell `$procmux$1083_CMP2'.
    Redirecting output \Y: $procmux$1119_CMP [2] = $procmux$1083_CMP [2]
    Removing $eq cell `$procmux$1119_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1119_CMP3' is identical to cell `$procmux$1083_CMP3'.
    Redirecting output \Y: $procmux$1119_CMP [3] = $procmux$1083_CMP [3]
    Removing $eq cell `$procmux$1119_CMP3' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1120_CMP0' is identical to cell `$procmux$1104_CMP0'.
    Redirecting output \Y: $procmux$1120_CMP [0] = $procmux$1104_CMP [0]
    Removing $logic_not cell `$procmux$1120_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1120_CMP1' is identical to cell `$procmux$1104_CMP1'.
    Redirecting output \Y: $procmux$1120_CMP [1] = $procmux$1104_CMP [1]
    Removing $eq cell `$procmux$1120_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1120_CMP2' is identical to cell `$procmux$1104_CMP2'.
    Redirecting output \Y: $procmux$1120_CMP [2] = $procmux$1104_CMP [2]
    Removing $eq cell `$procmux$1120_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1120_CMP3' is identical to cell `$procmux$1104_CMP3'.
    Redirecting output \Y: $procmux$1120_CMP [3] = $procmux$1104_CMP [3]
    Removing $eq cell `$procmux$1120_CMP3' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1122_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1122_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1122_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1135_CMP0' is identical to cell `$procmux$1083_CMP0'.
    Redirecting output \Y: $procmux$1135_CMP [0] = $procmux$1083_CMP [0]
    Removing $eq cell `$procmux$1135_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1135_CMP1' is identical to cell `$procmux$1083_CMP1'.
    Redirecting output \Y: $procmux$1135_CMP [1] = $procmux$1083_CMP [1]
    Removing $eq cell `$procmux$1135_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1135_CMP2' is identical to cell `$procmux$1083_CMP2'.
    Redirecting output \Y: $procmux$1135_CMP [2] = $procmux$1083_CMP [2]
    Removing $eq cell `$procmux$1135_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1135_CMP3' is identical to cell `$procmux$1083_CMP3'.
    Redirecting output \Y: $procmux$1135_CMP [3] = $procmux$1083_CMP [3]
    Removing $eq cell `$procmux$1135_CMP3' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1136_CMP0' is identical to cell `$procmux$1104_CMP0'.
    Redirecting output \Y: $procmux$1136_CMP [0] = $procmux$1104_CMP [0]
    Removing $logic_not cell `$procmux$1136_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1136_CMP1' is identical to cell `$procmux$1104_CMP1'.
    Redirecting output \Y: $procmux$1136_CMP [1] = $procmux$1104_CMP [1]
    Removing $eq cell `$procmux$1136_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1136_CMP2' is identical to cell `$procmux$1104_CMP2'.
    Redirecting output \Y: $procmux$1136_CMP [2] = $procmux$1104_CMP [2]
    Removing $eq cell `$procmux$1136_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1136_CMP3' is identical to cell `$procmux$1104_CMP3'.
    Redirecting output \Y: $procmux$1136_CMP [3] = $procmux$1104_CMP [3]
    Removing $eq cell `$procmux$1136_CMP3' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1138_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1138_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1138_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1151_CMP0' is identical to cell `$procmux$1083_CMP0'.
    Redirecting output \Y: $procmux$1151_CMP [0] = $procmux$1083_CMP [0]
    Removing $eq cell `$procmux$1151_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1151_CMP1' is identical to cell `$procmux$1083_CMP1'.
    Redirecting output \Y: $procmux$1151_CMP [1] = $procmux$1083_CMP [1]
    Removing $eq cell `$procmux$1151_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1151_CMP2' is identical to cell `$procmux$1083_CMP2'.
    Redirecting output \Y: $procmux$1151_CMP [2] = $procmux$1083_CMP [2]
    Removing $eq cell `$procmux$1151_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1151_CMP3' is identical to cell `$procmux$1083_CMP3'.
    Redirecting output \Y: $procmux$1151_CMP [3] = $procmux$1083_CMP [3]
    Removing $eq cell `$procmux$1151_CMP3' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1152_CMP0' is identical to cell `$procmux$1104_CMP0'.
    Redirecting output \Y: $procmux$1152_CMP [0] = $procmux$1104_CMP [0]
    Removing $logic_not cell `$procmux$1152_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1152_CMP1' is identical to cell `$procmux$1104_CMP1'.
    Redirecting output \Y: $procmux$1152_CMP [1] = $procmux$1104_CMP [1]
    Removing $eq cell `$procmux$1152_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1152_CMP2' is identical to cell `$procmux$1104_CMP2'.
    Redirecting output \Y: $procmux$1152_CMP [2] = $procmux$1104_CMP [2]
    Removing $eq cell `$procmux$1152_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1152_CMP3' is identical to cell `$procmux$1104_CMP3'.
    Redirecting output \Y: $procmux$1152_CMP [3] = $procmux$1104_CMP [3]
    Removing $eq cell `$procmux$1152_CMP3' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1154_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1154_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1154_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1187_CMP0' is identical to cell `$procmux$1168_CMP0'.
    Redirecting output \Y: $procmux$1187_CMP [0] = $procmux$1168_CMP [0]
    Removing $eq cell `$procmux$1187_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1187_CMP1' is identical to cell `$procmux$1168_CMP1'.
    Redirecting output \Y: $procmux$1187_CMP [1] = $procmux$1168_CMP [1]
    Removing $eq cell `$procmux$1187_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1188_CMP0' is identical to cell `$procmux$1169_CMP0'.
    Redirecting output \Y: $procmux$1188_CMP [0] = $procmux$1169_CMP [0]
    Removing $logic_not cell `$procmux$1188_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1188_CMP1' is identical to cell `$procmux$1169_CMP1'.
    Redirecting output \Y: $procmux$1188_CMP [1] = $procmux$1169_CMP [1]
    Removing $eq cell `$procmux$1188_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1188_CMP2' is identical to cell `$procmux$1169_CMP2'.
    Redirecting output \Y: $procmux$1188_CMP [2] = $procmux$1169_CMP [2]
    Removing $eq cell `$procmux$1188_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1192_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1192_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1192_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1207_CMP0' is identical to cell `$procmux$1169_CMP0'.
    Redirecting output \Y: $procmux$1207_CMP [0] = $procmux$1169_CMP [0]
    Removing $logic_not cell `$procmux$1207_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1207_CMP1' is identical to cell `$procmux$1169_CMP1'.
    Redirecting output \Y: $procmux$1207_CMP [1] = $procmux$1169_CMP [1]
    Removing $eq cell `$procmux$1207_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1207_CMP2' is identical to cell `$procmux$1169_CMP2'.
    Redirecting output \Y: $procmux$1207_CMP [2] = $procmux$1169_CMP [2]
    Removing $eq cell `$procmux$1207_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1211_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1211_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1211_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1226_CMP0' is identical to cell `$procmux$1169_CMP0'.
    Redirecting output \Y: $procmux$1226_CMP [0] = $procmux$1169_CMP [0]
    Removing $logic_not cell `$procmux$1226_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1226_CMP1' is identical to cell `$procmux$1169_CMP1'.
    Redirecting output \Y: $procmux$1226_CMP [1] = $procmux$1169_CMP [1]
    Removing $eq cell `$procmux$1226_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1226_CMP2' is identical to cell `$procmux$1169_CMP2'.
    Redirecting output \Y: $procmux$1226_CMP [2] = $procmux$1169_CMP [2]
    Removing $eq cell `$procmux$1226_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1230_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1230_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1230_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1245_CMP0' is identical to cell `$procmux$1169_CMP0'.
    Redirecting output \Y: $procmux$1245_CMP [0] = $procmux$1169_CMP [0]
    Removing $logic_not cell `$procmux$1245_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1245_CMP1' is identical to cell `$procmux$1169_CMP1'.
    Redirecting output \Y: $procmux$1245_CMP [1] = $procmux$1169_CMP [1]
    Removing $eq cell `$procmux$1245_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1245_CMP2' is identical to cell `$procmux$1169_CMP2'.
    Redirecting output \Y: $procmux$1245_CMP [2] = $procmux$1169_CMP [2]
    Removing $eq cell `$procmux$1245_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1249_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1249_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1249_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1264_CMP0' is identical to cell `$procmux$1169_CMP0'.
    Redirecting output \Y: $procmux$1264_CMP [0] = $procmux$1169_CMP [0]
    Removing $logic_not cell `$procmux$1264_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1264_CMP1' is identical to cell `$procmux$1169_CMP1'.
    Redirecting output \Y: $procmux$1264_CMP [1] = $procmux$1169_CMP [1]
    Removing $eq cell `$procmux$1264_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1264_CMP2' is identical to cell `$procmux$1169_CMP2'.
    Redirecting output \Y: $procmux$1264_CMP [2] = $procmux$1169_CMP [2]
    Removing $eq cell `$procmux$1264_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1268_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1268_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1268_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1283_CMP0' is identical to cell `$procmux$1169_CMP0'.
    Redirecting output \Y: $procmux$1283_CMP [0] = $procmux$1169_CMP [0]
    Removing $logic_not cell `$procmux$1283_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1283_CMP1' is identical to cell `$procmux$1169_CMP1'.
    Redirecting output \Y: $procmux$1283_CMP [1] = $procmux$1169_CMP [1]
    Removing $eq cell `$procmux$1283_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1283_CMP2' is identical to cell `$procmux$1169_CMP2'.
    Redirecting output \Y: $procmux$1283_CMP [2] = $procmux$1169_CMP [2]
    Removing $eq cell `$procmux$1283_CMP2' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1287_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1287_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1287_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1301_CMP0' is identical to cell `$procmux$1168_CMP0'.
    Redirecting output \Y: $procmux$1301_CMP [0] = $procmux$1168_CMP [0]
    Removing $eq cell `$procmux$1301_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1301_CMP1' is identical to cell `$procmux$1168_CMP1'.
    Redirecting output \Y: $procmux$1301_CMP [1] = $procmux$1168_CMP [1]
    Removing $eq cell `$procmux$1301_CMP1' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1305_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1305_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1305_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1323_CMP0' is identical to cell `$procmux$1169_CMP0'.
    Redirecting output \Y: $procmux$1323_CMP = $procmux$1169_CMP [0]
    Removing $logic_not cell `$procmux$1323_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1327_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1327_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1327_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1350_CMP0' is identical to cell `$procmux$1169_CMP0'.
    Redirecting output \Y: $procmux$1350_CMP = $procmux$1169_CMP [0]
    Removing $logic_not cell `$procmux$1350_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1354_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1354_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1354_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1371_CMP0' is identical to cell `$procmux$1169_CMP1'.
    Redirecting output \Y: $procmux$1371_CMP = $procmux$1169_CMP [1]
    Removing $eq cell `$procmux$1371_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1375_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1375_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1375_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1391_CMP0' is identical to cell `$procmux$1169_CMP2'.
    Redirecting output \Y: $procmux$1391_CMP = $procmux$1169_CMP [2]
    Removing $eq cell `$procmux$1391_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1392_CMP0' is identical to cell `$procmux$1169_CMP1'.
    Redirecting output \Y: $procmux$1392_CMP = $procmux$1169_CMP [1]
    Removing $eq cell `$procmux$1392_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1393_CMP0' is identical to cell `$procmux$1169_CMP0'.
    Redirecting output \Y: $procmux$1393_CMP = $procmux$1169_CMP [0]
    Removing $logic_not cell `$procmux$1393_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1397_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1397_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1397_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1412_CMP0' is identical to cell `$procmux$1390_CMP0'.
    Redirecting output \Y: $procmux$1412_CMP = $procmux$1390_CMP
    Removing $eq cell `$procmux$1412_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1413_CMP0' is identical to cell `$procmux$1169_CMP2'.
    Redirecting output \Y: $procmux$1413_CMP = $procmux$1169_CMP [2]
    Removing $eq cell `$procmux$1413_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1417_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1417_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1417_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1435_CMP0' is identical to cell `$procmux$1348_CMP0'.
    Redirecting output \Y: $procmux$1435_CMP = $procmux$1348_CMP
    Removing $eq cell `$procmux$1435_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1438_CMP0' is identical to cell `$procmux$1169_CMP1'.
    Redirecting output \Y: $procmux$1438_CMP = $procmux$1169_CMP [1]
    Removing $eq cell `$procmux$1438_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1442_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1442_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1442_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1458_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1458_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1458_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1472_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1472_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1472_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1474_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1474_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1474_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1488_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1488_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1488_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1490_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1490_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1490_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1504_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1504_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1504_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1506_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1506_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1506_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1520_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1520_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1520_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1522_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1522_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1522_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1536_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1536_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1536_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1538_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1538_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1538_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1552_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1552_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1552_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1554_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1554_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1554_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1568_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1568_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1568_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1570_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1570_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1570_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1584_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1584_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1584_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1586_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1586_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1586_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1600_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1600_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1600_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1602_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1602_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1602_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1616_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1616_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1616_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1618_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1618_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1618_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1632_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1632_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1632_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1634_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1634_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1634_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1648_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1648_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1648_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1650_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1650_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1650_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1664_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1664_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1664_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1666_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1666_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1666_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1680_CMP0' is identical to cell `$procmux$1456_CMP0'.
    Redirecting output \Y: $procmux$1680_CMP = $procmux$1456_CMP
    Removing $not cell `$procmux$1680_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1682_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1682_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1682_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1692_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1692_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1692_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1693_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1693_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1693_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1694_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1694_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1694_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1695_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1695_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1695_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1704_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1704_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1704_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1705_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1705_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1705_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1706_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1706_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1706_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1707_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1707_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1707_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1708_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1708_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1708_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1717_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1717_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1717_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1718_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1718_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1718_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1719_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1719_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1719_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1720_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1720_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1720_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1721_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1721_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1721_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1730_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1730_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1730_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1731_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1731_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1731_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1732_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1732_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1732_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1733_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1733_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1733_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1734_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1734_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1734_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1743_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1743_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1743_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1744_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1744_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1744_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1745_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1745_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1745_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1746_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1746_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1746_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1747_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1747_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1747_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1760_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1760_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1760_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1769_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1769_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1769_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1770_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1770_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1770_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1771_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1771_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1771_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1772_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1772_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1772_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1773_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1773_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1773_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1782_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1782_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1782_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1783_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1783_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1783_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1784_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1784_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1784_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1785_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1785_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1785_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1786_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1786_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1786_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1795_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1795_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1795_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1796_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1796_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1796_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1797_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1797_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1797_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1798_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1798_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1798_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1808_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1808_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1808_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1809_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1809_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1809_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1810_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1810_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1810_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1811_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1811_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1811_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1820_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1820_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1820_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1821_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1821_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1821_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1822_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1822_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1822_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1823_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1823_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1823_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1824_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1824_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1824_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1833_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1833_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1833_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1834_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1834_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1834_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1835_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1835_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1835_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1836_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1836_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1836_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1837_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1837_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1837_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1846_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1846_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1846_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1847_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1847_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1847_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1848_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$1848_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$1848_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1849_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1849_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1849_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1862_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$1862_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$1862_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1871_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1871_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1871_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1872_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1872_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1872_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1873_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1873_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1873_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1882_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$1882_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$1882_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1883_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$1883_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$1883_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1884_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$1884_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$1884_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1898_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1898_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1898_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1904_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1904_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1904_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1910_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1910_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1910_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1916_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1916_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1916_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1922_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1922_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1922_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1928_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1928_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1928_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1934_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1934_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1934_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1940_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1940_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1940_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1946_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1946_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1946_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1952_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1952_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1952_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1958_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1958_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1958_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1964_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1964_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1964_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1970_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1970_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1970_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1976_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1976_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1976_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1982_CMP0' is identical to cell `$procmux$1892_CMP0'.
    Redirecting output \Y: $procmux$1982_CMP = $procmux$1892_CMP
    Removing $not cell `$procmux$1982_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$990_CMP0' is identical to cell `$procmux$1691_CMP0'.
    Redirecting output \Y: $procmux$990_CMP = $procmux$1691_CMP
    Removing $eq cell `$procmux$990_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$991_CMP0' is identical to cell `$procmux$1009_CMP0'.
    Redirecting output \Y: $procmux$991_CMP = $procmux$1009_CMP
    Removing $eq cell `$procmux$991_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$992_CMP0' is identical to cell `$procmux$1028_CMP0'.
    Redirecting output \Y: $procmux$992_CMP = $procmux$1028_CMP
    Removing $eq cell `$procmux$992_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$993_CMP0' is identical to cell `$procmux$1085_CMP0'.
    Redirecting output \Y: $procmux$993_CMP = $procmux$1085_CMP
    Removing $eq cell `$procmux$993_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$994_CMP0' is identical to cell `$procmux$1173_CMP0'.
    Redirecting output \Y: $procmux$994_CMP = $procmux$1173_CMP
    Removing $logic_not cell `$procmux$994_CMP0' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1283_ANY' is identical to cell `$procmux$1264_ANY'.
    Redirecting output \Y: $procmux$1283_CTRL = $procmux$1264_CTRL
    Removing $reduce_or cell `$procmux$1283_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1119_ANY' is identical to cell `$procmux$1083_ANY'.
    Redirecting output \Y: $procmux$1119_CTRL = $procmux$1083_CTRL
    Removing $reduce_or cell `$procmux$1119_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1120_ANY' is identical to cell `$procmux$1104_ANY'.
    Redirecting output \Y: $procmux$1120_CTRL = $procmux$1104_CTRL
    Removing $reduce_or cell `$procmux$1120_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1135_ANY' is identical to cell `$procmux$1083_ANY'.
    Redirecting output \Y: $procmux$1135_CTRL = $procmux$1083_CTRL
    Removing $reduce_or cell `$procmux$1135_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1136_ANY' is identical to cell `$procmux$1104_ANY'.
    Redirecting output \Y: $procmux$1136_CTRL = $procmux$1104_CTRL
    Removing $reduce_or cell `$procmux$1136_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1151_ANY' is identical to cell `$procmux$1083_ANY'.
    Redirecting output \Y: $procmux$1151_CTRL = $procmux$1083_CTRL
    Removing $reduce_or cell `$procmux$1151_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1152_ANY' is identical to cell `$procmux$1104_ANY'.
    Redirecting output \Y: $procmux$1152_CTRL = $procmux$1104_CTRL
    Removing $reduce_or cell `$procmux$1152_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1168_ANY' is identical to cell `$procmux$1301_ANY'.
    Redirecting output \Y: $procmux$1168_CTRL = $procmux$1301_CTRL
    Removing $reduce_or cell `$procmux$1168_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1169_ANY' is identical to cell `$procmux$1264_ANY'.
    Redirecting output \Y: $procmux$1169_CTRL = $procmux$1264_CTRL
    Removing $reduce_or cell `$procmux$1169_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1187_ANY' is identical to cell `$procmux$1301_ANY'.
    Redirecting output \Y: $procmux$1187_CTRL = $procmux$1301_CTRL
    Removing $reduce_or cell `$procmux$1187_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1188_ANY' is identical to cell `$procmux$1264_ANY'.
    Redirecting output \Y: $procmux$1188_CTRL = $procmux$1264_CTRL
    Removing $reduce_or cell `$procmux$1188_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1207_ANY' is identical to cell `$procmux$1264_ANY'.
    Redirecting output \Y: $procmux$1207_CTRL = $procmux$1264_CTRL
    Removing $reduce_or cell `$procmux$1207_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1226_ANY' is identical to cell `$procmux$1264_ANY'.
    Redirecting output \Y: $procmux$1226_CTRL = $procmux$1264_CTRL
    Removing $reduce_or cell `$procmux$1226_ANY' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1245_ANY' is identical to cell `$procmux$1264_ANY'.
    Redirecting output \Y: $procmux$1245_CTRL = $procmux$1264_CTRL
    Removing $reduce_or cell `$procmux$1245_ANY' from module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
  Cell `$procmux$691_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$691_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$691_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$692_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$692_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$692_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$693_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$693_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$693_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$694_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$694_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$694_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$696_CMP0' is identical to cell `$procmux$685_CMP0'.
    Redirecting output \Y: $procmux$696_CMP = $procmux$685_CMP
    Removing $eq cell `$procmux$696_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$702_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$702_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$702_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$703_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$703_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$703_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$704_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$704_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$704_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$705_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$705_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$705_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$707_CMP0' is identical to cell `$procmux$685_CMP0'.
    Redirecting output \Y: $procmux$707_CMP = $procmux$685_CMP
    Removing $eq cell `$procmux$707_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$713_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$713_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$713_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$714_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$714_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$714_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$715_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$715_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$715_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$716_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$716_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$716_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$718_CMP0' is identical to cell `$procmux$685_CMP0'.
    Redirecting output \Y: $procmux$718_CMP = $procmux$685_CMP
    Removing $eq cell `$procmux$718_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$725_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$725_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$725_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$726_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$726_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$726_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$727_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$727_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$727_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$728_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$728_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$728_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$737_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$737_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$737_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$738_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$738_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$738_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$739_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$739_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$739_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$740_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$740_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$740_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$742_CMP0' is identical to cell `$procmux$730_CMP0'.
    Redirecting output \Y: $procmux$742_CMP = $procmux$730_CMP
    Removing $eq cell `$procmux$742_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$749_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$749_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$749_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$750_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$750_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$750_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$751_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$751_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$751_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$752_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$752_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$752_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$754_CMP0' is identical to cell `$procmux$730_CMP0'.
    Redirecting output \Y: $procmux$754_CMP = $procmux$730_CMP
    Removing $eq cell `$procmux$754_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$761_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$761_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$761_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$762_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$762_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$762_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$763_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$763_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$763_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$764_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$764_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$764_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$766_CMP0' is identical to cell `$procmux$730_CMP0'.
    Redirecting output \Y: $procmux$766_CMP = $procmux$730_CMP
    Removing $eq cell `$procmux$766_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$774_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$774_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$774_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$775_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$775_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$775_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$776_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$776_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$776_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$777_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$777_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$777_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$787_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$787_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$787_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$788_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$788_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$788_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$789_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$789_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$789_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$790_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$790_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$790_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$792_CMP0' is identical to cell `$procmux$779_CMP0'.
    Redirecting output \Y: $procmux$792_CMP = $procmux$779_CMP
    Removing $logic_not cell `$procmux$792_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$800_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$800_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$800_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$801_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$801_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$801_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$802_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$802_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$802_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$803_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$803_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$803_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$805_CMP0' is identical to cell `$procmux$779_CMP0'.
    Redirecting output \Y: $procmux$805_CMP = $procmux$779_CMP
    Removing $logic_not cell `$procmux$805_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$813_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$813_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$813_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$814_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$814_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$814_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$815_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$815_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$815_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$816_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$816_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$816_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$818_CMP0' is identical to cell `$procmux$779_CMP0'.
    Redirecting output \Y: $procmux$818_CMP = $procmux$779_CMP
    Removing $logic_not cell `$procmux$818_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$826_CMP0' is identical to cell `$procmux$680_CMP0'.
    Redirecting output \Y: $procmux$826_CMP = $procmux$680_CMP
    Removing $eq cell `$procmux$826_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$827_CMP0' is identical to cell `$procmux$681_CMP0'.
    Redirecting output \Y: $procmux$827_CMP = $procmux$681_CMP
    Removing $eq cell `$procmux$827_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$828_CMP0' is identical to cell `$procmux$682_CMP0'.
    Redirecting output \Y: $procmux$828_CMP = $procmux$682_CMP
    Removing $eq cell `$procmux$828_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$829_CMP0' is identical to cell `$procmux$683_CMP0'.
    Redirecting output \Y: $procmux$829_CMP = $procmux$683_CMP
    Removing $logic_not cell `$procmux$829_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$831_CMP0' is identical to cell `$procmux$779_CMP0'.
    Redirecting output \Y: $procmux$831_CMP = $procmux$779_CMP
    Removing $logic_not cell `$procmux$831_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$837_CMP0' is identical to cell `$procmux$685_CMP0'.
    Redirecting output \Y: $procmux$837_CMP = $procmux$685_CMP
    Removing $eq cell `$procmux$837_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$838_CMP0' is identical to cell `$procmux$730_CMP0'.
    Redirecting output \Y: $procmux$838_CMP = $procmux$730_CMP
    Removing $eq cell `$procmux$838_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$839_CMP0' is identical to cell `$procmux$779_CMP0'.
    Redirecting output \Y: $procmux$839_CMP = $procmux$779_CMP
    Removing $logic_not cell `$procmux$839_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$845_CMP0' is identical to cell `$procmux$685_CMP0'.
    Redirecting output \Y: $procmux$845_CMP = $procmux$685_CMP
    Removing $eq cell `$procmux$845_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$846_CMP0' is identical to cell `$procmux$730_CMP0'.
    Redirecting output \Y: $procmux$846_CMP = $procmux$730_CMP
    Removing $eq cell `$procmux$846_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$847_CMP0' is identical to cell `$procmux$779_CMP0'.
    Redirecting output \Y: $procmux$847_CMP = $procmux$779_CMP
    Removing $logic_not cell `$procmux$847_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$853_CMP0' is identical to cell `$procmux$685_CMP0'.
    Redirecting output \Y: $procmux$853_CMP = $procmux$685_CMP
    Removing $eq cell `$procmux$853_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$854_CMP0' is identical to cell `$procmux$730_CMP0'.
    Redirecting output \Y: $procmux$854_CMP = $procmux$730_CMP
    Removing $eq cell `$procmux$854_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$855_CMP0' is identical to cell `$procmux$779_CMP0'.
    Redirecting output \Y: $procmux$855_CMP = $procmux$779_CMP
    Removing $logic_not cell `$procmux$855_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$861_CMP0' is identical to cell `$procmux$685_CMP0'.
    Redirecting output \Y: $procmux$861_CMP = $procmux$685_CMP
    Removing $eq cell `$procmux$861_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$862_CMP0' is identical to cell `$procmux$730_CMP0'.
    Redirecting output \Y: $procmux$862_CMP = $procmux$730_CMP
    Removing $eq cell `$procmux$862_CMP0' from module `\NRISC_PC_ctrl'.
  Cell `$procmux$863_CMP0' is identical to cell `$procmux$779_CMP0'.
    Redirecting output \Y: $procmux$863_CMP = $procmux$779_CMP
    Removing $logic_not cell `$procmux$863_CMP0' from module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
  Cell `$procmux$2292_CMP0' is identical to cell `$procmux$2285_CMP0'.
    Redirecting output \Y: $procmux$2292_CMP [0] = $procmux$2285_CMP [0]
    Removing $eq cell `$procmux$2292_CMP0' from module `\NRISC_REGs'.
  Cell `$procmux$2292_CMP1' is identical to cell `$procmux$2285_CMP1'.
    Redirecting output \Y: $procmux$2292_CMP [1] = $procmux$2285_CMP [1]
    Removing $eq cell `$procmux$2292_CMP1' from module `\NRISC_REGs'.
  Cell `$procmux$2292_CMP2' is identical to cell `$procmux$2285_CMP2'.
    Redirecting output \Y: $procmux$2292_CMP [2] = $procmux$2285_CMP [2]
    Removing $eq cell `$procmux$2292_CMP2' from module `\NRISC_REGs'.
  Cell `$procmux$2292_CMP3' is identical to cell `$procmux$2285_CMP3'.
    Redirecting output \Y: $procmux$2292_CMP [3] = $procmux$2285_CMP [3]
    Removing $eq cell `$procmux$2292_CMP3' from module `\NRISC_REGs'.
  Cell `$procmux$2292_CMP4' is identical to cell `$procmux$2285_CMP4'.
    Redirecting output \Y: $procmux$2292_CMP [4] = $procmux$2285_CMP [4]
    Removing $eq cell `$procmux$2292_CMP4' from module `\NRISC_REGs'.
  Cell `$procmux$2292_CMP5' is identical to cell `$procmux$2285_CMP5'.
    Redirecting output \Y: $procmux$2292_CMP [5] = $procmux$2285_CMP [5]
    Removing $eq cell `$procmux$2292_CMP5' from module `\NRISC_REGs'.
  Cell `$procmux$2299_CMP0' is identical to cell `$procmux$2285_CMP0'.
    Redirecting output \Y: $procmux$2299_CMP [0] = $procmux$2285_CMP [0]
    Removing $eq cell `$procmux$2299_CMP0' from module `\NRISC_REGs'.
  Cell `$procmux$2299_CMP1' is identical to cell `$procmux$2285_CMP1'.
    Redirecting output \Y: $procmux$2299_CMP [1] = $procmux$2285_CMP [1]
    Removing $eq cell `$procmux$2299_CMP1' from module `\NRISC_REGs'.
  Cell `$procmux$2299_CMP2' is identical to cell `$procmux$2285_CMP2'.
    Redirecting output \Y: $procmux$2299_CMP [2] = $procmux$2285_CMP [2]
    Removing $eq cell `$procmux$2299_CMP2' from module `\NRISC_REGs'.
  Cell `$procmux$2299_CMP3' is identical to cell `$procmux$2285_CMP3'.
    Redirecting output \Y: $procmux$2299_CMP [3] = $procmux$2285_CMP [3]
    Removing $eq cell `$procmux$2299_CMP3' from module `\NRISC_REGs'.
  Cell `$procmux$2299_CMP4' is identical to cell `$procmux$2285_CMP4'.
    Redirecting output \Y: $procmux$2299_CMP [4] = $procmux$2285_CMP [4]
    Removing $eq cell `$procmux$2299_CMP4' from module `\NRISC_REGs'.
  Cell `$procmux$2299_CMP5' is identical to cell `$procmux$2285_CMP5'.
    Redirecting output \Y: $procmux$2299_CMP [5] = $procmux$2285_CMP [5]
    Removing $eq cell `$procmux$2299_CMP5' from module `\NRISC_REGs'.
  Cell `$procmux$2317_CMP0' is identical to cell `$procmux$2308_CMP0'.
    Redirecting output \Y: $procmux$2317_CMP [0] = $procmux$2308_CMP [0]
    Removing $eq cell `$procmux$2317_CMP0' from module `\NRISC_REGs'.
  Cell `$procmux$2317_CMP1' is identical to cell `$procmux$2308_CMP1'.
    Redirecting output \Y: $procmux$2317_CMP [1] = $procmux$2308_CMP [1]
    Removing $eq cell `$procmux$2317_CMP1' from module `\NRISC_REGs'.
  Cell `$procmux$2317_CMP2' is identical to cell `$procmux$2308_CMP2'.
    Redirecting output \Y: $procmux$2317_CMP [2] = $procmux$2308_CMP [2]
    Removing $eq cell `$procmux$2317_CMP2' from module `\NRISC_REGs'.
  Cell `$procmux$2317_CMP3' is identical to cell `$procmux$2308_CMP3'.
    Redirecting output \Y: $procmux$2317_CMP [3] = $procmux$2308_CMP [3]
    Removing $eq cell `$procmux$2317_CMP3' from module `\NRISC_REGs'.
  Cell `$procmux$2317_CMP4' is identical to cell `$procmux$2308_CMP4'.
    Redirecting output \Y: $procmux$2317_CMP [4] = $procmux$2308_CMP [4]
    Removing $eq cell `$procmux$2317_CMP4' from module `\NRISC_REGs'.
  Cell `$procmux$2317_CMP5' is identical to cell `$procmux$2308_CMP5'.
    Redirecting output \Y: $procmux$2317_CMP [5] = $procmux$2308_CMP [5]
    Removing $eq cell `$procmux$2317_CMP5' from module `\NRISC_REGs'.
  Cell `$procmux$2317_CMP6' is identical to cell `$procmux$2308_CMP6'.
    Redirecting output \Y: $procmux$2317_CMP [6] = $procmux$2308_CMP [6]
    Removing $eq cell `$procmux$2317_CMP6' from module `\NRISC_REGs'.
  Cell `$procmux$2317_CMP7' is identical to cell `$procmux$2308_CMP7'.
    Redirecting output \Y: $procmux$2317_CMP [7] = $procmux$2308_CMP [7]
    Removing $eq cell `$procmux$2317_CMP7' from module `\NRISC_REGs'.
  Cell `$procmux$2326_CMP0' is identical to cell `$procmux$2308_CMP0'.
    Redirecting output \Y: $procmux$2326_CMP [0] = $procmux$2308_CMP [0]
    Removing $eq cell `$procmux$2326_CMP0' from module `\NRISC_REGs'.
  Cell `$procmux$2326_CMP1' is identical to cell `$procmux$2308_CMP1'.
    Redirecting output \Y: $procmux$2326_CMP [1] = $procmux$2308_CMP [1]
    Removing $eq cell `$procmux$2326_CMP1' from module `\NRISC_REGs'.
  Cell `$procmux$2326_CMP2' is identical to cell `$procmux$2308_CMP2'.
    Redirecting output \Y: $procmux$2326_CMP [2] = $procmux$2308_CMP [2]
    Removing $eq cell `$procmux$2326_CMP2' from module `\NRISC_REGs'.
  Cell `$procmux$2326_CMP3' is identical to cell `$procmux$2308_CMP3'.
    Redirecting output \Y: $procmux$2326_CMP [3] = $procmux$2308_CMP [3]
    Removing $eq cell `$procmux$2326_CMP3' from module `\NRISC_REGs'.
  Cell `$procmux$2326_CMP4' is identical to cell `$procmux$2308_CMP4'.
    Redirecting output \Y: $procmux$2326_CMP [4] = $procmux$2308_CMP [4]
    Removing $eq cell `$procmux$2326_CMP4' from module `\NRISC_REGs'.
  Cell `$procmux$2326_CMP5' is identical to cell `$procmux$2308_CMP5'.
    Redirecting output \Y: $procmux$2326_CMP [5] = $procmux$2308_CMP [5]
    Removing $eq cell `$procmux$2326_CMP5' from module `\NRISC_REGs'.
  Cell `$procmux$2326_CMP6' is identical to cell `$procmux$2308_CMP6'.
    Redirecting output \Y: $procmux$2326_CMP [6] = $procmux$2308_CMP [6]
    Removing $eq cell `$procmux$2326_CMP6' from module `\NRISC_REGs'.
  Cell `$procmux$2326_CMP7' is identical to cell `$procmux$2308_CMP7'.
    Redirecting output \Y: $procmux$2326_CMP [7] = $procmux$2308_CMP [7]
    Removing $eq cell `$procmux$2326_CMP7' from module `\NRISC_REGs'.
  Cell `$procmux$2334_CMP0' is identical to cell `$procmux$2308_CMP0'.
    Redirecting output \Y: $procmux$2334_CMP [0] = $procmux$2308_CMP [0]
    Removing $eq cell `$procmux$2334_CMP0' from module `\NRISC_REGs'.
  Cell `$procmux$2334_CMP1' is identical to cell `$procmux$2308_CMP1'.
    Redirecting output \Y: $procmux$2334_CMP [1] = $procmux$2308_CMP [1]
    Removing $eq cell `$procmux$2334_CMP1' from module `\NRISC_REGs'.
  Cell `$procmux$2334_CMP2' is identical to cell `$procmux$2308_CMP2'.
    Redirecting output \Y: $procmux$2334_CMP [2] = $procmux$2308_CMP [2]
    Removing $eq cell `$procmux$2334_CMP2' from module `\NRISC_REGs'.
  Cell `$procmux$2334_CMP3' is identical to cell `$procmux$2308_CMP3'.
    Redirecting output \Y: $procmux$2334_CMP [3] = $procmux$2308_CMP [3]
    Removing $eq cell `$procmux$2334_CMP3' from module `\NRISC_REGs'.
  Cell `$procmux$2334_CMP4' is identical to cell `$procmux$2308_CMP4'.
    Redirecting output \Y: $procmux$2334_CMP [4] = $procmux$2308_CMP [4]
    Removing $eq cell `$procmux$2334_CMP4' from module `\NRISC_REGs'.
  Cell `$procmux$2334_CMP5' is identical to cell `$procmux$2308_CMP5'.
    Redirecting output \Y: $procmux$2334_CMP [5] = $procmux$2308_CMP [5]
    Removing $eq cell `$procmux$2334_CMP5' from module `\NRISC_REGs'.
  Cell `$procmux$2334_CMP6' is identical to cell `$procmux$2308_CMP6'.
    Redirecting output \Y: $procmux$2334_CMP [6] = $procmux$2308_CMP [6]
    Removing $eq cell `$procmux$2334_CMP6' from module `\NRISC_REGs'.
  Cell `$procmux$2334_CMP7' is identical to cell `$procmux$2308_CMP7'.
    Redirecting output \Y: $procmux$2334_CMP [7] = $procmux$2308_CMP [7]
    Removing $eq cell `$procmux$2334_CMP7' from module `\NRISC_REGs'.
  Cell `$procmux$2342_CMP0' is identical to cell `$procmux$2308_CMP0'.
    Redirecting output \Y: $procmux$2342_CMP [0] = $procmux$2308_CMP [0]
    Removing $eq cell `$procmux$2342_CMP0' from module `\NRISC_REGs'.
  Cell `$procmux$2342_CMP1' is identical to cell `$procmux$2308_CMP1'.
    Redirecting output \Y: $procmux$2342_CMP [1] = $procmux$2308_CMP [1]
    Removing $eq cell `$procmux$2342_CMP1' from module `\NRISC_REGs'.
  Cell `$procmux$2342_CMP2' is identical to cell `$procmux$2308_CMP2'.
    Redirecting output \Y: $procmux$2342_CMP [2] = $procmux$2308_CMP [2]
    Removing $eq cell `$procmux$2342_CMP2' from module `\NRISC_REGs'.
  Cell `$procmux$2342_CMP3' is identical to cell `$procmux$2308_CMP3'.
    Redirecting output \Y: $procmux$2342_CMP [3] = $procmux$2308_CMP [3]
    Removing $eq cell `$procmux$2342_CMP3' from module `\NRISC_REGs'.
  Cell `$procmux$2342_CMP4' is identical to cell `$procmux$2308_CMP4'.
    Redirecting output \Y: $procmux$2342_CMP [4] = $procmux$2308_CMP [4]
    Removing $eq cell `$procmux$2342_CMP4' from module `\NRISC_REGs'.
  Cell `$procmux$2342_CMP5' is identical to cell `$procmux$2308_CMP5'.
    Redirecting output \Y: $procmux$2342_CMP [5] = $procmux$2308_CMP [5]
    Removing $eq cell `$procmux$2342_CMP5' from module `\NRISC_REGs'.
  Cell `$procmux$2342_CMP6' is identical to cell `$procmux$2308_CMP6'.
    Redirecting output \Y: $procmux$2342_CMP [6] = $procmux$2308_CMP [6]
    Removing $eq cell `$procmux$2342_CMP6' from module `\NRISC_REGs'.
  Cell `$procmux$2342_CMP7' is identical to cell `$procmux$2308_CMP7'.
    Redirecting output \Y: $procmux$2342_CMP [7] = $procmux$2308_CMP [7]
    Removing $eq cell `$procmux$2342_CMP7' from module `\NRISC_REGs'.
  Cell `$procmux$2350_CMP0' is identical to cell `$procmux$2308_CMP0'.
    Redirecting output \Y: $procmux$2350_CMP [0] = $procmux$2308_CMP [0]
    Removing $eq cell `$procmux$2350_CMP0' from module `\NRISC_REGs'.
  Cell `$procmux$2350_CMP1' is identical to cell `$procmux$2308_CMP1'.
    Redirecting output \Y: $procmux$2350_CMP [1] = $procmux$2308_CMP [1]
    Removing $eq cell `$procmux$2350_CMP1' from module `\NRISC_REGs'.
  Cell `$procmux$2350_CMP2' is identical to cell `$procmux$2308_CMP2'.
    Redirecting output \Y: $procmux$2350_CMP [2] = $procmux$2308_CMP [2]
    Removing $eq cell `$procmux$2350_CMP2' from module `\NRISC_REGs'.
  Cell `$procmux$2350_CMP3' is identical to cell `$procmux$2308_CMP3'.
    Redirecting output \Y: $procmux$2350_CMP [3] = $procmux$2308_CMP [3]
    Removing $eq cell `$procmux$2350_CMP3' from module `\NRISC_REGs'.
  Cell `$procmux$2350_CMP4' is identical to cell `$procmux$2308_CMP4'.
    Redirecting output \Y: $procmux$2350_CMP [4] = $procmux$2308_CMP [4]
    Removing $eq cell `$procmux$2350_CMP4' from module `\NRISC_REGs'.
  Cell `$procmux$2350_CMP5' is identical to cell `$procmux$2308_CMP5'.
    Redirecting output \Y: $procmux$2350_CMP [5] = $procmux$2308_CMP [5]
    Removing $eq cell `$procmux$2350_CMP5' from module `\NRISC_REGs'.
  Cell `$procmux$2350_CMP6' is identical to cell `$procmux$2308_CMP6'.
    Redirecting output \Y: $procmux$2350_CMP [6] = $procmux$2308_CMP [6]
    Removing $eq cell `$procmux$2350_CMP6' from module `\NRISC_REGs'.
  Cell `$procmux$2350_CMP7' is identical to cell `$procmux$2308_CMP7'.
    Redirecting output \Y: $procmux$2350_CMP [7] = $procmux$2308_CMP [7]
    Removing $eq cell `$procmux$2350_CMP7' from module `\NRISC_REGs'.
  Cell `$procmux$2292_ANY' is identical to cell `$procmux$2285_ANY'.
    Redirecting output \Y: $procmux$2292_CTRL = $procmux$2285_CTRL
    Removing $reduce_or cell `$procmux$2292_ANY' from module `\NRISC_REGs'.
  Cell `$procmux$2299_ANY' is identical to cell `$procmux$2285_ANY'.
    Redirecting output \Y: $procmux$2299_CTRL = $procmux$2285_CTRL
    Removing $reduce_or cell `$procmux$2299_ANY' from module `\NRISC_REGs'.
  Cell `$procmux$2317_ANY' is identical to cell `$procmux$2308_ANY'.
    Redirecting output \Y: $procmux$2317_CTRL = $procmux$2308_CTRL
    Removing $reduce_or cell `$procmux$2317_ANY' from module `\NRISC_REGs'.
  Cell `$procmux$2326_ANY' is identical to cell `$procmux$2308_ANY'.
    Redirecting output \Y: $procmux$2326_CTRL = $procmux$2308_CTRL
    Removing $reduce_or cell `$procmux$2326_ANY' from module `\NRISC_REGs'.
  Cell `$procmux$2334_ANY' is identical to cell `$procmux$2308_ANY'.
    Redirecting output \Y: $procmux$2334_CTRL = $procmux$2308_CTRL
    Removing $reduce_or cell `$procmux$2334_ANY' from module `\NRISC_REGs'.
  Cell `$procmux$2342_ANY' is identical to cell `$procmux$2308_ANY'.
    Redirecting output \Y: $procmux$2342_CTRL = $procmux$2308_CTRL
    Removing $reduce_or cell `$procmux$2342_ANY' from module `\NRISC_REGs'.
  Cell `$procmux$2350_ANY' is identical to cell `$procmux$2308_ANY'.
    Redirecting output \Y: $procmux$2350_CTRL = $procmux$2308_CTRL
    Removing $reduce_or cell `$procmux$2350_ANY' from module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
  Cell `$and$NRISC_ULA.v:106$70' is identical to cell `$and$NRISC_ULA.v:105$60'.
    Redirecting output \Y: $and$NRISC_ULA.v:106$70_Y = $and$NRISC_ULA.v:105$60_Y
    Removing $and cell `$and$NRISC_ULA.v:106$70' from module `\NRISC_ULA'.
  Cell `$and$NRISC_ULA.v:71$102' is identical to cell `$and$NRISC_ULA.v:71$100'.
    Redirecting output \Y: $and$NRISC_ULA.v:71$102_Y = $and$NRISC_ULA.v:71$100_Y
    Removing $and cell `$and$NRISC_ULA.v:71$102' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:102$47' is identical to cell `$not$NRISC_ULA.v:101$41'.
    Redirecting output \Y: $not$NRISC_ULA.v:102$47_Y = $not$NRISC_ULA.v:101$41_Y
    Removing $not cell `$not$NRISC_ULA.v:102$47' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:103$58' is identical to cell `$not$NRISC_ULA.v:102$50'.
    Redirecting output \Y: $not$NRISC_ULA.v:103$58_Y = $not$NRISC_ULA.v:102$50_Y
    Removing $not cell `$not$NRISC_ULA.v:103$58' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:105$64' is identical to cell `$not$NRISC_ULA.v:103$56'.
    Redirecting output \Y: $not$NRISC_ULA.v:105$64_Y = $not$NRISC_ULA.v:103$56_Y
    Removing $not cell `$not$NRISC_ULA.v:105$64' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:105$66' is identical to cell `$not$NRISC_ULA.v:102$50'.
    Redirecting output \Y: $not$NRISC_ULA.v:105$66_Y = $not$NRISC_ULA.v:102$50_Y
    Removing $not cell `$not$NRISC_ULA.v:105$66' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:105$68' is identical to cell `$not$NRISC_ULA.v:101$45'.
    Redirecting output \Y: $not$NRISC_ULA.v:105$68_Y = $not$NRISC_ULA.v:101$45_Y
    Removing $not cell `$not$NRISC_ULA.v:105$68' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:106$75' is identical to cell `$not$NRISC_ULA.v:103$56'.
    Redirecting output \Y: $not$NRISC_ULA.v:106$75_Y = $not$NRISC_ULA.v:103$56_Y
    Removing $not cell `$not$NRISC_ULA.v:106$75' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:106$77' is identical to cell `$not$NRISC_ULA.v:102$50'.
    Redirecting output \Y: $not$NRISC_ULA.v:106$77_Y = $not$NRISC_ULA.v:102$50_Y
    Removing $not cell `$not$NRISC_ULA.v:106$77' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:107$80' is identical to cell `$not$NRISC_ULA.v:103$56'.
    Redirecting output \Y: $not$NRISC_ULA.v:107$80_Y = $not$NRISC_ULA.v:103$56_Y
    Removing $not cell `$not$NRISC_ULA.v:107$80' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:107$82' is identical to cell `$not$NRISC_ULA.v:102$50'.
    Redirecting output \Y: $not$NRISC_ULA.v:107$82_Y = $not$NRISC_ULA.v:102$50_Y
    Removing $not cell `$not$NRISC_ULA.v:107$82' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:91$21' is identical to cell `$not$NRISC_ULA.v:90$17'.
    Redirecting output \Y: $not$NRISC_ULA.v:91$21_Y = $not$NRISC_ULA.v:90$17_Y
    Removing $not cell `$not$NRISC_ULA.v:91$21' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:91$22' is identical to cell `$not$NRISC_ULA.v:90$18'.
    Redirecting output \Y: $not$NRISC_ULA.v:91$22_Y = $not$NRISC_ULA.v:90$18_Y
    Removing $not cell `$not$NRISC_ULA.v:91$22' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:92$26' is identical to cell `$not$NRISC_ULA.v:91$20'.
    Redirecting output \Y: $not$NRISC_ULA.v:92$26_Y = $not$NRISC_ULA.v:91$20_Y
    Removing $not cell `$not$NRISC_ULA.v:92$26' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:92$27' is identical to cell `$not$NRISC_ULA.v:90$17'.
    Redirecting output \Y: $not$NRISC_ULA.v:92$27_Y = $not$NRISC_ULA.v:90$17_Y
    Removing $not cell `$not$NRISC_ULA.v:92$27' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:92$29' is identical to cell `$not$NRISC_ULA.v:90$18'.
    Redirecting output \Y: $not$NRISC_ULA.v:92$29_Y = $not$NRISC_ULA.v:90$18_Y
    Removing $not cell `$not$NRISC_ULA.v:92$29' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:93$33' is identical to cell `$not$NRISC_ULA.v:92$25'.
    Redirecting output \Y: $not$NRISC_ULA.v:93$33_Y = $not$NRISC_ULA.v:92$25_Y
    Removing $not cell `$not$NRISC_ULA.v:93$33' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:93$34' is identical to cell `$not$NRISC_ULA.v:91$20'.
    Redirecting output \Y: $not$NRISC_ULA.v:93$34_Y = $not$NRISC_ULA.v:91$20_Y
    Removing $not cell `$not$NRISC_ULA.v:93$34' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:93$36' is identical to cell `$not$NRISC_ULA.v:90$17'.
    Redirecting output \Y: $not$NRISC_ULA.v:93$36_Y = $not$NRISC_ULA.v:90$17_Y
    Removing $not cell `$not$NRISC_ULA.v:93$36' from module `\NRISC_ULA'.
  Cell `$not$NRISC_ULA.v:93$38' is identical to cell `$not$NRISC_ULA.v:90$18'.
    Redirecting output \Y: $not$NRISC_ULA.v:93$38_Y = $not$NRISC_ULA.v:90$18_Y
    Removing $not cell `$not$NRISC_ULA.v:93$38' from module `\NRISC_ULA'.
  Cell `$or$NRISC_ULA.v:106$72' is identical to cell `$or$NRISC_ULA.v:105$61'.
    Redirecting output \Y: $or$NRISC_ULA.v:106$72_Y = $or$NRISC_ULA.v:105$61_Y
    Removing $or cell `$or$NRISC_ULA.v:106$72' from module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 369 cells.

7.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\somaUla\TAM=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_InstructionDecoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1912 (pure)
    Root of a mux tree: $procmux$1960 (pure)
    Root of a mux tree: $procmux$1966 (pure)
    Root of a mux tree: $procmux$1987 (pure)
    Root of a mux tree: $procmux$1990 (pure)
    Root of a mux tree: $procmux$1993 (pure)
    Root of a mux tree: $procmux$1996 (pure)
    Root of a mux tree: $procmux$1999 (pure)
    Root of a mux tree: $procmux$2002 (pure)
    Root of a mux tree: $procmux$2005 (pure)
    Root of a mux tree: $procmux$2008 (pure)
    Root of a mux tree: $procmux$2011 (pure)
    Root of a mux tree: $procmux$2014 (pure)
    Root of a mux tree: $procmux$2017 (pure)
    Root of a mux tree: $procmux$2020 (pure)
    Root of a mux tree: $procmux$2023 (pure)
    Root of a mux tree: $procmux$2026 (pure)
    Root of a mux tree: $procmux$2029 (pure)
    Root of a mux tree: $procmux$2032 (pure)
    Root of a mux tree: $procmux$2035 (pure)
    Root of a mux tree: $procmux$2038 (pure)
    Root of a mux tree: $procmux$2041 (pure)
    Root of a mux tree: $procmux$2044 (pure)
    Root of a mux tree: $procmux$984 (pure)
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1269.
    dead port 1/2 on $mux $procmux$1272.
    dead port 1/2 on $mux $procmux$1051.
    dead port 2/2 on $mux $procmux$1284.
    dead port 2/2 on $mux $procmux$1286.
    dead port 1/2 on $mux $procmux$1288.
    dead port 1/2 on $mux $procmux$1291.
    dead port 2/2 on $mux $procmux$1302.
    dead port 2/2 on $mux $procmux$1304.
    dead port 1/2 on $mux $procmux$1306.
    dead port 1/2 on $mux $procmux$1309.
    dead port 2/2 on $mux $procmux$1064.
    dead port 1/2 on $mux $procmux$1324.
    dead port 2/2 on $mux $procmux$1326.
    dead port 1/2 on $mux $procmux$1328.
    dead port 1/2 on $mux $procmux$1331.
    dead port 2/2 on $mux $procmux$1349.
    dead port 1/2 on $mux $procmux$1066.
    dead port 1/2 on $mux $procmux$1351.
    dead port 2/2 on $mux $procmux$1353.
    dead port 1/2 on $mux $procmux$1069.
    dead port 1/2 on $mux $procmux$1355.
    dead port 1/2 on $mux $procmux$1358.
    dead port 1/2 on $mux $procmux$1372.
    dead port 2/2 on $mux $procmux$1374.
    dead port 1/2 on $mux $procmux$1376.
    dead port 1/2 on $mux $procmux$1379.
    dead port 1/2 on $mux $procmux$1394.
    dead port 2/2 on $mux $procmux$1396.
    dead port 2/2 on $mux $procmux$1082.
    dead port 1/2 on $mux $procmux$1398.
    dead port 1/2 on $mux $procmux$1401.
    dead port 1/2 on $mux $procmux$1414.
    dead port 2/2 on $mux $procmux$1416.
    dead port 1/2 on $mux $procmux$1418.
    dead port 1/2 on $mux $procmux$1421.
    dead port 2/2 on $mux $procmux$1437.
    dead port 1/2 on $mux $procmux$1439.
    dead port 2/2 on $mux $procmux$1441.
    dead port 2/2 on $mux $procmux$1084.
    dead port 1/2 on $mux $procmux$1443.
    dead port 1/2 on $mux $procmux$1446.
    dead port 2/2 on $mux $procmux$1457.
    dead port 1/2 on $mux $procmux$1459.
    dead port 1/2 on $mux $procmux$1462.
    dead port 1/2 on $mux $procmux$1086.
    dead port 2/2 on $mux $procmux$1473.
    dead port 1/2 on $mux $procmux$1089.
    dead port 1/2 on $mux $procmux$1475.
    dead port 1/2 on $mux $procmux$1478.
    dead port 2/2 on $mux $procmux$1489.
    dead port 1/2 on $mux $procmux$1491.
    dead port 1/2 on $mux $procmux$1494.
    dead port 2/2 on $mux $procmux$1505.
    dead port 1/2 on $mux $procmux$1507.
    dead port 1/2 on $mux $procmux$1510.
    dead port 2/2 on $mux $procmux$1521.
    dead port 2/2 on $mux $procmux$1103.
    dead port 1/2 on $mux $procmux$1523.
    dead port 1/2 on $mux $procmux$1526.
    dead port 2/2 on $mux $procmux$1537.
    dead port 1/2 on $mux $procmux$1539.
    dead port 1/2 on $mux $procmux$1542.
    dead port 2/2 on $mux $procmux$1553.
    dead port 1/2 on $mux $procmux$1555.
    dead port 1/2 on $mux $procmux$1558.
    dead port 2/2 on $mux $procmux$1569.
    dead port 2/2 on $mux $procmux$1105.
    dead port 1/2 on $mux $procmux$1571.
    dead port 1/2 on $mux $procmux$1574.
    dead port 2/2 on $mux $procmux$1585.
    dead port 1/2 on $mux $procmux$1107.
    dead port 1/2 on $mux $procmux$1587.
    dead port 1/2 on $mux $procmux$1590.
    dead port 1/2 on $mux $procmux$1110.
    dead port 2/2 on $mux $procmux$1601.
    dead port 1/2 on $mux $procmux$1603.
    dead port 1/2 on $mux $procmux$1606.
    dead port 2/2 on $mux $procmux$1246.
    dead port 2/2 on $mux $procmux$1617.
    dead port 1/2 on $mux $procmux$1619.
    dead port 1/2 on $mux $procmux$1622.
    dead port 2/2 on $mux $procmux$1633.
    dead port 1/2 on $mux $procmux$1635.
    dead port 1/2 on $mux $procmux$1638.
    dead port 2/2 on $mux $procmux$1649.
    dead port 2/2 on $mux $procmux$1248.
    dead port 1/2 on $mux $procmux$1651.
    dead port 1/2 on $mux $procmux$1654.
    dead port 2/2 on $mux $procmux$1665.
    dead port 1/2 on $mux $procmux$1667.
    dead port 1/2 on $mux $procmux$1670.
    dead port 2/2 on $mux $procmux$1681.
    dead port 1/2 on $mux $procmux$1683.
    dead port 1/2 on $mux $procmux$1686.
    dead port 2/2 on $mux $procmux$1121.
    dead port 1/2 on $mux $procmux$1123.
    dead port 1/2 on $mux $procmux$1126.
    dead port 1/2 on $mux $procmux$1696.
    dead port 1/2 on $mux $procmux$1699.
    dead port 1/2 on $mux $procmux$1709.
    dead port 1/2 on $mux $procmux$1712.
    dead port 1/2 on $mux $procmux$1250.
    dead port 1/2 on $mux $procmux$1722.
    dead port 1/2 on $mux $procmux$1725.
    dead port 2/2 on $mux $procmux$1137.
    dead port 1/2 on $mux $procmux$1139.
    dead port 1/2 on $mux $procmux$1142.
    dead port 1/2 on $mux $procmux$1735.
    dead port 1/2 on $mux $procmux$1738.
    dead port 1/2 on $mux $procmux$1253.
    dead port 1/2 on $mux $procmux$1748.
    dead port 1/2 on $mux $procmux$1751.
    dead port 1/2 on $mux $procmux$1761.
    dead port 1/2 on $mux $procmux$1764.
    dead port 2/2 on $mux $procmux$1008.
    dead port 1/2 on $mux $procmux$1774.
    dead port 1/2 on $mux $procmux$1777.
    dead port 2/2 on $mux $procmux$1153.
    dead port 1/2 on $mux $procmux$1010.
    dead port 1/2 on $mux $procmux$1155.
    dead port 1/2 on $mux $procmux$1158.
    dead port 1/2 on $mux $procmux$1787.
    dead port 1/2 on $mux $procmux$1790.
    dead port 1/2 on $mux $procmux$1799.
    dead port 1/2 on $mux $procmux$1802.
    dead port 2/2 on $mux $procmux$1170.
    dead port 1/2 on $mux $procmux$1812.
    dead port 1/2 on $mux $procmux$1815.
    dead port 2/2 on $mux $procmux$1172.
    dead port 1/2 on $mux $procmux$1174.
    dead port 1/2 on $mux $procmux$1177.
    dead port 1/2 on $mux $procmux$1825.
    dead port 1/2 on $mux $procmux$1828.
    dead port 2/2 on $mux $procmux$1046.
    dead port 1/2 on $mux $procmux$1013.
    dead port 1/2 on $mux $procmux$1838.
    dead port 1/2 on $mux $procmux$1841.
    dead port 2/2 on $mux $procmux$1189.
    dead port 2/2 on $mux $procmux$1191.
    dead port 1/2 on $mux $procmux$1850.
    dead port 1/2 on $mux $procmux$1853.
    dead port 1/2 on $mux $procmux$1863.
    dead port 1/2 on $mux $procmux$1866.
    dead port 1/2 on $mux $procmux$1193.
    dead port 1/2 on $mux $procmux$1196.
    dead port 1/2 on $mux $procmux$1874.
    dead port 1/2 on $mux $procmux$1877.
    dead port 2/2 on $mux $procmux$1265.
    dead port 1/2 on $mux $procmux$1885.
    dead port 1/2 on $mux $procmux$1888.
    dead port 1/2 on $mux $procmux$1894.
    dead port 2/2 on $mux $procmux$1027.
    dead port 1/2 on $mux $procmux$1900.
    dead port 2/2 on $mux $procmux$1208.
    dead port 1/2 on $mux $procmux$1906.
    dead port 2/2 on $mux $procmux$1210.
    dead port 1/2 on $mux $procmux$1918.
    dead port 1/2 on $mux $procmux$1212.
    dead port 1/2 on $mux $procmux$1924.
    dead port 1/2 on $mux $procmux$1215.
    dead port 1/2 on $mux $procmux$1930.
    dead port 1/2 on $mux $procmux$1936.
    dead port 2/2 on $mux $procmux$1267.
    dead port 1/2 on $mux $procmux$1942.
    dead port 1/2 on $mux $procmux$1029.
    dead port 1/2 on $mux $procmux$1948.
    dead port 1/2 on $mux $procmux$1032.
    dead port 1/2 on $mux $procmux$1954.
    dead port 2/2 on $mux $procmux$1227.
    dead port 2/2 on $mux $procmux$1229.
    dead port 1/2 on $mux $procmux$1972.
    dead port 1/2 on $mux $procmux$1978.
    dead port 1/2 on $mux $procmux$1231.
    dead port 1/2 on $mux $procmux$1984.
    dead port 1/2 on $mux $procmux$1234.
    dead port 1/2 on $mux $procmux$1048.
    dead port 2/2 on $mux $procmux$995.
    dead port 1/2 on $mux $procmux$998.
Running muxtree optimizer on module \NRISC_PC_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$833 (pure)
    Root of a mux tree: $procmux$930 (pure)
    Root of a mux tree: $procmux$933 (pure)
    Root of a mux tree: $procmux$936 (pure)
    Root of a mux tree: $procmux$939 (pure)
    Root of a mux tree: $procmux$942 (pure)
    Root of a mux tree: $procmux$945 (pure)
    Root of a mux tree: $procmux$948 (pure)
    Root of a mux tree: $procmux$975 (pure)
    Root of a mux tree: $procmux$978 (pure)
    Root of a mux tree: $procmux$981 (pure)
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$741.
    dead port 1/2 on $mux $procmux$744.
    dead port 2/2 on $mux $procmux$753.
    dead port 1/2 on $mux $procmux$756.
    dead port 2/2 on $mux $procmux$684.
    dead port 2/2 on $mux $procmux$765.
    dead port 1/2 on $mux $procmux$768.
    dead port 1/2 on $mux $procmux$687.
    dead port 2/2 on $mux $procmux$778.
    dead port 1/2 on $mux $procmux$781.
    dead port 2/2 on $mux $procmux$695.
    dead port 2/2 on $mux $procmux$791.
    dead port 1/2 on $mux $procmux$698.
    dead port 1/2 on $mux $procmux$794.
    dead port 2/2 on $mux $procmux$804.
    dead port 1/2 on $mux $procmux$807.
    dead port 2/2 on $mux $procmux$706.
    dead port 1/2 on $mux $procmux$709.
    dead port 2/2 on $mux $procmux$817.
    dead port 1/2 on $mux $procmux$820.
    dead port 2/2 on $mux $procmux$717.
    dead port 1/2 on $mux $procmux$720.
    dead port 1/2 on $mux $procmux$841.
    dead port 1/2 on $mux $procmux$849.
    dead port 2/2 on $mux $procmux$729.
    dead port 1/2 on $mux $procmux$732.
    dead port 1/2 on $mux $procmux$857.
    dead port 1/2 on $mux $procmux$865.
Running muxtree optimizer on module \NRISC_REGs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2049 (pure)
    Root of a mux tree: $procmux$2066 (pure)
    Root of a mux tree: $procmux$2084 (pure)
    Root of a mux tree: $procmux$2087 (pure)
    Root of a mux tree: $procmux$2090 (pure)
    Root of a mux tree: $procmux$2093 (pure)
    Root of a mux tree: $procmux$2096 (pure)
    Root of a mux tree: $procmux$2099 (pure)
    Root of a mux tree: $procmux$2102 (pure)
    Root of a mux tree: $procmux$2105 (pure)
    Root of a mux tree: $procmux$2108 (pure)
    Root of a mux tree: $procmux$2111 (pure)
    Root of a mux tree: $procmux$2114 (pure)
    Root of a mux tree: $procmux$2117 (pure)
    Root of a mux tree: $procmux$2120 (pure)
    Root of a mux tree: $procmux$2123 (pure)
    Root of a mux tree: $procmux$2126 (pure)
    Root of a mux tree: $procmux$2129 (pure)
    Root of a mux tree: $procmux$2132 (pure)
    Root of a mux tree: $procmux$2135 (pure)
    Root of a mux tree: $procmux$2138 (pure)
    Root of a mux tree: $procmux$2141 (pure)
    Root of a mux tree: $procmux$2144 (pure)
    Root of a mux tree: $procmux$2147 (pure)
    Root of a mux tree: $procmux$2150 (pure)
    Root of a mux tree: $procmux$2153 (pure)
    Root of a mux tree: $procmux$2156 (pure)
    Root of a mux tree: $procmux$2159 (pure)
    Root of a mux tree: $procmux$2162 (pure)
    Root of a mux tree: $procmux$2165 (pure)
    Root of a mux tree: $procmux$2168 (pure)
    Root of a mux tree: $procmux$2171 (pure)
    Root of a mux tree: $procmux$2174 (pure)
    Root of a mux tree: $procmux$2177 (pure)
    Root of a mux tree: $procmux$2180 (pure)
    Root of a mux tree: $procmux$2183 (pure)
    Root of a mux tree: $procmux$2186 (pure)
    Root of a mux tree: $procmux$2189 (pure)
    Root of a mux tree: $procmux$2192 (pure)
    Root of a mux tree: $procmux$2195 (pure)
    Root of a mux tree: $procmux$2198 (pure)
    Root of a mux tree: $procmux$2201 (pure)
    Root of a mux tree: $procmux$2204 (pure)
    Root of a mux tree: $procmux$2207 (pure)
    Root of a mux tree: $procmux$2210 (pure)
    Root of a mux tree: $procmux$2213 (pure)
    Root of a mux tree: $procmux$2216 (pure)
    Root of a mux tree: $procmux$2219 (pure)
    Root of a mux tree: $procmux$2222 (pure)
    Root of a mux tree: $procmux$2225 (pure)
    Root of a mux tree: $procmux$2228 (pure)
    Root of a mux tree: $procmux$2231 (pure)
    Root of a mux tree: $procmux$2234 (pure)
    Root of a mux tree: $procmux$2237 (pure)
    Root of a mux tree: $procmux$2240 (pure)
    Root of a mux tree: $procmux$2243 (pure)
    Root of a mux tree: $procmux$2246 (pure)
    Root of a mux tree: $procmux$2249 (pure)
    Root of a mux tree: $procmux$2252 (pure)
    Root of a mux tree: $procmux$2255 (pure)
    Root of a mux tree: $procmux$2258 (pure)
    Root of a mux tree: $procmux$2261 (pure)
    Root of a mux tree: $procmux$2264 (pure)
    Root of a mux tree: $procmux$2267 (pure)
    Root of a mux tree: $procmux$2270 (pure)
    Root of a mux tree: $procmux$2273 (pure)
    Root of a mux tree: $procmux$2276 (pure)
    Root of a mux tree: $procmux$2279 (pure)
    Root of a mux tree: $procmux$2286 (pure)
    Root of a mux tree: $procmux$2293 (pure)
    Root of a mux tree: $procmux$2300 (pure)
    Root of a mux tree: $procmux$2309 (pure)
    Root of a mux tree: $procmux$2318 (pure)
    Root of a mux tree: $procmux$2327 (pure)
    Root of a mux tree: $procmux$2335 (pure)
    Root of a mux tree: $procmux$2343 (pure)
    Root of a mux tree: $procmux$2351 (pure)
    Root of a mux tree: $ternary$NRISC_REGs.v:49$387
    Root of a mux tree: $ternary$NRISC_REGs.v:50$390
    Root of a mux tree: $ternary$NRISC_REGs.v:51$393
    Root of a mux tree: $ternary$NRISC_REGs.v:52$396
    Root of a mux tree: $ternary$NRISC_REGs.v:53$399
    Root of a mux tree: $ternary$NRISC_REGs.v:54$402
    Root of a mux tree: $ternary$NRISC_REGs.v:55$405
    Root of a mux tree: $ternary$NRISC_REGs.v:56$408
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_ULA..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2353 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:103$54 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:108$89 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:66$16 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:78$106 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_UP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:120$1 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$8 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:145$9 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:146$10 (pure)
  Analyzing evaluation results.
Removed 207 multiplexer ports.

7.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\somaUla\TAM=32.
  Optimizing cells in module \NRISC_InstructionDecoder.
    New input vector for $reduce_or cell $procmux$1301_ANY: { $procmux$1168_CMP [0] $procmux$1168_CMP [1] }
    New input vector for $reduce_or cell $procmux$1264_ANY: { $procmux$1169_CMP [0] $procmux$1169_CMP [1] $procmux$1169_CMP [2] }
    New input vector for $reduce_or cell $procmux$1104_ANY: { $procmux$1104_CMP [0] $procmux$1104_CMP [1] $procmux$1104_CMP [2] $procmux$1104_CMP [3] }
    New input vector for $reduce_or cell $procmux$1083_ANY: { $procmux$1083_CMP [0] $procmux$1083_CMP [1] $procmux$1083_CMP [2] $procmux$1083_CMP [3] }
    New ctrl vector for $pmux cell $procmux$1716: { $procmux$1173_CMP $procmux$1028_CMP $auto$opt_reduce.cc:132:opt_mux$2486 }
    New ctrl vector for $pmux cell $procmux$1534: $auto$opt_reduce.cc:132:opt_mux$2488
    New ctrl vector for $pmux cell $procmux$1729: { $procmux$1173_CMP $procmux$1009_CMP $auto$opt_reduce.cc:132:opt_mux$2490 }
    New ctrl vector for $pmux cell $procmux$1742: { $procmux$1173_CMP $auto$opt_reduce.cc:132:opt_mux$2492 }
    New ctrl vector for $pmux cell $procmux$1768: { $procmux$1173_CMP $procmux$1085_CMP $auto$opt_reduce.cc:132:opt_mux$2494 }
    New ctrl vector for $pmux cell $procmux$1781: { $procmux$1173_CMP $auto$opt_reduce.cc:132:opt_mux$2496 }
    New ctrl vector for $pmux cell $procmux$1794: { $procmux$1173_CMP $auto$opt_reduce.cc:132:opt_mux$2498 }
    New ctrl vector for $pmux cell $procmux$1807: { $procmux$1173_CMP $procmux$1028_CMP $auto$opt_reduce.cc:132:opt_mux$2500 }
    New ctrl vector for $pmux cell $procmux$1819: { $procmux$1173_CMP $procmux$1085_CMP $auto$opt_reduce.cc:132:opt_mux$2502 $procmux$1691_CMP }
    New ctrl vector for $pmux cell $procmux$1832: { $procmux$1173_CMP $auto$opt_reduce.cc:132:opt_mux$2506 $auto$opt_reduce.cc:132:opt_mux$2504 }
    New ctrl vector for $pmux cell $procmux$1020: { $eq$NRISC_InstructionDecoder.v:445$456_Y $auto$opt_reduce.cc:132:opt_mux$2508 }
    New ctrl vector for $pmux cell $procmux$1389: { $auto$opt_reduce.cc:132:opt_mux$2510 $procmux$1169_CMP [2] $procmux$1390_CMP }
    New ctrl vector for $pmux cell $procmux$1881: $auto$opt_reduce.cc:132:opt_mux$2512
    New ctrl vector for $pmux cell $procmux$1486: $auto$opt_reduce.cc:132:opt_mux$2514
    New ctrl vector for $pmux cell $procmux$1502: $auto$opt_reduce.cc:132:opt_mux$2516
    New ctrl vector for $pmux cell $procmux$1690: { $procmux$1173_CMP $procmux$1028_CMP $auto$opt_reduce.cc:132:opt_mux$2518 }
    New ctrl vector for $pmux cell $procmux$1039: { $eq$NRISC_InstructionDecoder.v:445$456_Y $auto$opt_reduce.cc:132:opt_mux$2520 }
    New ctrl vector for $pmux cell $procmux$1518: $auto$opt_reduce.cc:132:opt_mux$2522
    New ctrl vector for $pmux cell $procmux$1703: { $procmux$1173_CMP $procmux$1009_CMP $auto$opt_reduce.cc:132:opt_mux$2524 }
    New ctrl vector for $pmux cell $procmux$1134: $auto$opt_reduce.cc:132:opt_mux$2526
    New ctrl vector for $pmux cell $procmux$1411: $auto$opt_reduce.cc:132:opt_mux$2528
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2485: { $procmux$1009_CMP $procmux$1085_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2487: { \CORE_InstructionIN [11] $procmux$1456_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2489: { $procmux$1028_CMP $procmux$1085_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2491: { $procmux$1009_CMP $procmux$1028_CMP $procmux$1085_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2493: { $procmux$1009_CMP $procmux$1028_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2495: { $procmux$1009_CMP $procmux$1028_CMP $procmux$1085_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2497: { $procmux$1028_CMP $procmux$1085_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2499: { $procmux$1009_CMP $procmux$1085_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2501: { $procmux$1009_CMP $procmux$1028_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2505: { $procmux$1009_CMP $procmux$1085_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2507: { $procmux$1021_CMP $procmux$1022_CMP $procmux$1023_CMP $procmux$1024_CMP $procmux$1025_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2511: { $procmux$1009_CMP $procmux$1028_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2513: { \CORE_InstructionIN [11] $procmux$1456_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2515: { \CORE_InstructionIN [11] $procmux$1456_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2517: { $procmux$1009_CMP $procmux$1085_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2519: { $procmux$1021_CMP $procmux$1022_CMP $procmux$1023_CMP $procmux$1024_CMP $procmux$1025_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2521: { \CORE_InstructionIN [11] $procmux$1456_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2523: { $procmux$1028_CMP $procmux$1085_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2525: { $procmux$1083_CMP [0] $procmux$1083_CMP [1] $procmux$1083_CMP [2] $procmux$1083_CMP [3] $procmux$1104_CMP [0] $procmux$1104_CMP [1] $procmux$1104_CMP [2] $procmux$1104_CMP [3] }
  Optimizing cells in module \NRISC_InstructionDecoder.
  Optimizing cells in module \NRISC_PC_ctrl.
    New input vector for $reduce_or cell $procmux$928_ANY: { $procmux$928_CMP [0] $procmux$928_CMP [1] }
    New ctrl vector for $pmux cell $procmux$679: { $procmux$683_CMP $auto$opt_reduce.cc:132:opt_mux$2530 }
    New ctrl vector for $pmux cell $procmux$786: { $auto$opt_reduce.cc:132:opt_mux$2532 $procmux$680_CMP }
    New ctrl vector for $pmux cell $procmux$760: { $procmux$682_CMP $auto$opt_reduce.cc:132:opt_mux$2534 }
    New ctrl vector for $pmux cell $procmux$799: { $procmux$681_CMP $auto$opt_reduce.cc:132:opt_mux$2536 }
    New ctrl vector for $pmux cell $procmux$701: { $procmux$681_CMP $auto$opt_reduce.cc:132:opt_mux$2538 }
    New ctrl vector for $pmux cell $procmux$812: { $procmux$682_CMP $auto$opt_reduce.cc:132:opt_mux$2540 }
    New ctrl vector for $pmux cell $procmux$712: { $procmux$682_CMP $auto$opt_reduce.cc:132:opt_mux$2542 }
    New ctrl vector for $pmux cell $procmux$748: { $procmux$681_CMP $auto$opt_reduce.cc:132:opt_mux$2544 }
    New ctrl vector for $pmux cell $procmux$773: { $procmux$683_CMP $auto$opt_reduce.cc:132:opt_mux$2546 }
    New ctrl vector for $pmux cell $procmux$724: { $procmux$683_CMP $auto$opt_reduce.cc:132:opt_mux$2548 }
    New ctrl vector for $pmux cell $procmux$690: { $auto$opt_reduce.cc:132:opt_mux$2550 $procmux$680_CMP }
    New ctrl vector for $pmux cell $procmux$736: { $auto$opt_reduce.cc:132:opt_mux$2552 $procmux$680_CMP }
  Optimizing cells in module \NRISC_PC_ctrl.
  Optimizing cells in module \NRISC_REGs.
    New input vector for $reduce_or cell $procmux$2308_ANY: { $procmux$2308_CMP [0] $procmux$2308_CMP [1] $procmux$2308_CMP [2] $procmux$2308_CMP [3] $procmux$2308_CMP [4] $procmux$2308_CMP [5] $procmux$2308_CMP [6] $procmux$2308_CMP [7] }
    New input vector for $reduce_or cell $procmux$2285_ANY: { $procmux$2285_CMP [0] $procmux$2285_CMP [1] $procmux$2285_CMP [2] $procmux$2285_CMP [3] $procmux$2285_CMP [4] $procmux$2285_CMP [5] }
    Consolidated identical input bits for $mux cell $procmux$2084:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305
      New ports: A=1'0, B=1'1, Y=$0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
      New connections: $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [31:1] = { $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0] }
    Consolidated identical input bits for $mux cell $procmux$2093:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308
      New ports: A=1'0, B=1'1, Y=$0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0]
      New connections: $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [31:1] = { $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] }
    Consolidated identical input bits for $mux cell $procmux$2102:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311
      New ports: A=1'0, B=1'1, Y=$0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0]
      New connections: $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [31:1] = { $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] }
    Consolidated identical input bits for $mux cell $procmux$2111:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314
      New ports: A=1'0, B=1'1, Y=$0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0]
      New connections: $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [31:1] = { $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] }
    Consolidated identical input bits for $mux cell $procmux$2120:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317
      New ports: A=1'0, B=1'1, Y=$0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0]
      New connections: $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [31:1] = { $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] }
    Consolidated identical input bits for $mux cell $procmux$2129:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320
      New ports: A=1'0, B=1'1, Y=$0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0]
      New connections: $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [31:1] = { $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] }
    Consolidated identical input bits for $mux cell $procmux$2138:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323
      New ports: A=1'0, B=1'1, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0]
      New connections: $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [31:1] = { $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] }
    Consolidated identical input bits for $mux cell $procmux$2147:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326
      New ports: A=1'0, B=1'1, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0]
      New connections: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [31:1] = { $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] }
    Consolidated identical input bits for $mux cell $procmux$2156:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329
      New ports: A=1'0, B=1'1, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0]
      New connections: $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [31:1] = { $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] }
    Consolidated identical input bits for $mux cell $procmux$2165:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332
      New ports: A=1'0, B=1'1, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0]
      New connections: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [31:1] = { $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] }
    Consolidated identical input bits for $mux cell $procmux$2174:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335
      New ports: A=1'0, B=1'1, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0]
      New connections: $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [31:1] = { $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] }
    Consolidated identical input bits for $mux cell $procmux$2183:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338
      New ports: A=1'0, B=1'1, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0]
      New connections: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [31:1] = { $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] }
    Consolidated identical input bits for $mux cell $procmux$2192:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341
      New ports: A=1'0, B=1'1, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0]
      New connections: $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [31:1] = { $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] }
    Consolidated identical input bits for $mux cell $procmux$2201:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344
      New ports: A=1'0, B=1'1, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0]
      New connections: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [31:1] = { $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] }
    Consolidated identical input bits for $mux cell $procmux$2210:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347
      New ports: A=1'0, B=1'1, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0]
      New connections: $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [31:1] = { $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] }
    Consolidated identical input bits for $mux cell $procmux$2219:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350
      New ports: A=1'0, B=1'1, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0]
      New connections: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [31:1] = { $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] }
    Consolidated identical input bits for $mux cell $procmux$2228:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353
      New ports: A=1'0, B=1'1, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0]
      New connections: $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [31:1] = { $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] }
    Consolidated identical input bits for $mux cell $procmux$2237:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356
      New ports: A=1'0, B=1'1, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0]
      New connections: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [31:1] = { $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] }
    Consolidated identical input bits for $mux cell $procmux$2246:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359
      New ports: A=1'0, B=1'1, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0]
      New connections: $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [31:1] = { $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] }
    Consolidated identical input bits for $mux cell $procmux$2255:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362
      New ports: A=1'0, B=1'1, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0]
      New connections: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [31:1] = { $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] }
    Consolidated identical input bits for $mux cell $procmux$2264:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365
      New ports: A=1'0, B=1'1, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0]
      New connections: $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [31:1] = { $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] }
    Consolidated identical input bits for $mux cell $procmux$2273:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368
      New ports: A=1'0, B=1'1, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0]
      New connections: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [31:1] = { $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] }
    Consolidated identical input bits for $mux cell $procmux$2284:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$2284_Y
      New ports: A=1'0, B=1'1, Y=$procmux$2284_Y [0]
      New connections: $procmux$2284_Y [31:1] = { $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] $procmux$2284_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$2305:
      Old ports: A=32'11111111111111111111111111111111, B=0, Y=$procmux$2305_Y
      New ports: A=1'1, B=1'0, Y=$procmux$2305_Y [0]
      New connections: $procmux$2305_Y [31:1] = { $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] $procmux$2305_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$2331:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$2331_Y
      New ports: A=1'0, B=1'1, Y=$procmux$2331_Y [0]
      New connections: $procmux$2331_Y [31:1] = { $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] $procmux$2331_Y [0] }
  Optimizing cells in module \NRISC_REGs.
    Consolidated identical input bits for $mux cell $procmux$2286:
      Old ports: A=0, B=$procmux$2284_Y, Y=$0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371
      New ports: A=1'0, B=$procmux$2284_Y [0], Y=$0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0]
      New connections: $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [31:1] = { $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] $0$memwr$\global_REGS$NRISC_REGs.v:80$299_EN[31:0]$371 [0] }
    Consolidated identical input bits for $mux cell $procmux$2307:
      Old ports: A=0, B=$procmux$2305_Y, Y=$procmux$2307_Y
      New ports: A=1'0, B=$procmux$2305_Y [0], Y=$procmux$2307_Y [0]
      New connections: $procmux$2307_Y [31:1] = { $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] $procmux$2307_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$2333:
      Old ports: A=0, B=$procmux$2331_Y, Y=$procmux$2333_Y
      New ports: A=1'0, B=$procmux$2331_Y [0], Y=$procmux$2333_Y [0]
      New connections: $procmux$2333_Y [31:1] = { $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] $procmux$2333_Y [0] }
  Optimizing cells in module \NRISC_REGs.
    Consolidated identical input bits for $mux cell $procmux$2309:
      Old ports: A=0, B=$procmux$2307_Y, Y=$0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374
      New ports: A=1'0, B=$procmux$2307_Y [0], Y=$0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0]
      New connections: $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [31:1] = { $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] $0$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN[31:0]$374 [0] }
    Consolidated identical input bits for $mux cell $procmux$2335:
      Old ports: A=0, B=$procmux$2333_Y, Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377
      New ports: A=1'0, B=$procmux$2333_Y [0], Y=$0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0]
      New connections: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [31:1] = { $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] $0$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN[31:0]$377 [0] }
  Optimizing cells in module \NRISC_REGs.
  Optimizing cells in module \NRISC_ULA.
  Optimizing cells in module \NRISC_UP.
Performed a total of 89 changes.

7.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2515' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2521'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2516 = $auto$opt_reduce.cc:132:opt_mux$2522
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2515' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2513' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2521'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2514 = $auto$opt_reduce.cc:132:opt_mux$2522
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2513' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2507' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2519'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2508 = $auto$opt_reduce.cc:132:opt_mux$2520
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2507' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2499' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2505'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2500 = $auto$opt_reduce.cc:132:opt_mux$2506
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2499' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2497' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2523'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2498 = $auto$opt_reduce.cc:132:opt_mux$2524
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2497' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2493' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2511'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2494 = $auto$opt_reduce.cc:132:opt_mux$2512
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2493' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2491' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2495'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2492 = $auto$opt_reduce.cc:132:opt_mux$2496
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2491' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2489' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2523'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2490 = $auto$opt_reduce.cc:132:opt_mux$2524
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2489' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2487' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2521'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2488 = $auto$opt_reduce.cc:132:opt_mux$2522
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2487' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2485' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2517'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2486 = $auto$opt_reduce.cc:132:opt_mux$2518
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2485' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1486' is identical to cell `$procmux$1534'.
    Redirecting output \Y: $procmux$1486_Y = $procmux$1534_Y
    Removing $mux cell `$procmux$1486' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1098' is identical to cell `$procmux$1077'.
    Redirecting output \Y: $procmux$1098_Y = $procmux$1077_Y
    Removing $pmux cell `$procmux$1098' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1502' is identical to cell `$procmux$1534'.
    Redirecting output \Y: $procmux$1502_Y = $procmux$1534_Y
    Removing $mux cell `$procmux$1502' from module `\NRISC_InstructionDecoder'.
  Cell `$procmux$1518' is identical to cell `$procmux$1534'.
    Redirecting output \Y: $procmux$1518_Y = $procmux$1534_Y
    Removing $mux cell `$procmux$1518' from module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2549' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2551'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2550 = $auto$opt_reduce.cc:132:opt_mux$2552
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2549' from module `\NRISC_PC_ctrl'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2545' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2547'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2546 = $auto$opt_reduce.cc:132:opt_mux$2548
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2545' from module `\NRISC_PC_ctrl'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2539' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2541'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2540 = $auto$opt_reduce.cc:132:opt_mux$2542
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2539' from module `\NRISC_PC_ctrl'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2537' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2543'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2538 = $auto$opt_reduce.cc:132:opt_mux$2544
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2537' from module `\NRISC_PC_ctrl'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2535' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2543'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2536 = $auto$opt_reduce.cc:132:opt_mux$2544
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2535' from module `\NRISC_PC_ctrl'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2533' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2541'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2534 = $auto$opt_reduce.cc:132:opt_mux$2542
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2533' from module `\NRISC_PC_ctrl'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2531' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2551'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2532 = $auto$opt_reduce.cc:132:opt_mux$2552
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2531' from module `\NRISC_PC_ctrl'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2529' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2547'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2530 = $auto$opt_reduce.cc:132:opt_mux$2548
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2529' from module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
  Cell `$procmux$2093' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\global_REGS$NRISC_REGs.v:64$278_EN[31:0]$308 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2093' from module `\NRISC_REGs'.
  Cell `$procmux$2096' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\global_REGS$NRISC_REGs.v:64$278_DATA[31:0]$307 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2096' from module `\NRISC_REGs'.
  Cell `$procmux$2102' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\global_REGS$NRISC_REGs.v:65$279_EN[31:0]$311 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2102' from module `\NRISC_REGs'.
  Cell `$procmux$2105' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\global_REGS$NRISC_REGs.v:65$279_DATA[31:0]$310 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2105' from module `\NRISC_REGs'.
  Cell `$procmux$2111' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\global_REGS$NRISC_REGs.v:66$280_EN[31:0]$314 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2111' from module `\NRISC_REGs'.
  Cell `$procmux$2114' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\global_REGS$NRISC_REGs.v:66$280_DATA[31:0]$313 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2114' from module `\NRISC_REGs'.
  Cell `$procmux$2120' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\global_REGS$NRISC_REGs.v:67$281_EN[31:0]$317 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2120' from module `\NRISC_REGs'.
  Cell `$procmux$2123' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\global_REGS$NRISC_REGs.v:67$281_DATA[31:0]$316 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2123' from module `\NRISC_REGs'.
  Cell `$procmux$2129' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\global_REGS$NRISC_REGs.v:68$282_EN[31:0]$320 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2129' from module `\NRISC_REGs'.
  Cell `$procmux$2132' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\global_REGS$NRISC_REGs.v:68$282_DATA[31:0]$319 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2132' from module `\NRISC_REGs'.
  Cell `$procmux$2138' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_EN[31:0]$323 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2138' from module `\NRISC_REGs'.
  Cell `$procmux$2141' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_DATA[31:0]$322 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2141' from module `\NRISC_REGs'.
  Cell `$procmux$2144' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:69$283_ADDR[31:0]$321 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2144' from module `\NRISC_REGs'.
  Cell `$procmux$2147' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2147' from module `\NRISC_REGs'.
  Cell `$procmux$2150' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_DATA[31:0]$325 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2150' from module `\NRISC_REGs'.
  Cell `$procmux$2153' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_ADDR[31:0]$324 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2153' from module `\NRISC_REGs'.
  Cell `$procmux$2156' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_EN[31:0]$329 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2156' from module `\NRISC_REGs'.
  Cell `$procmux$2159' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_DATA[31:0]$328 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2159' from module `\NRISC_REGs'.
  Cell `$procmux$2165' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN[31:0]$332 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2165' from module `\NRISC_REGs'.
  Cell `$procmux$2168' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_DATA[31:0]$331 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2168' from module `\NRISC_REGs'.
  Cell `$procmux$2171' is identical to cell `$procmux$2162'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_ADDR[31:0]$330 = $0$memwr$\USR_REGS$NRISC_REGs.v:70$285_ADDR[31:0]$327
    Removing $mux cell `$procmux$2171' from module `\NRISC_REGs'.
  Cell `$procmux$2174' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_EN[31:0]$335 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2174' from module `\NRISC_REGs'.
  Cell `$procmux$2177' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_DATA[31:0]$334 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2177' from module `\NRISC_REGs'.
  Cell `$procmux$2180' is identical to cell `$procmux$2090'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:71$287_ADDR[31:0]$333 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_ADDR[31:0]$303
    Removing $mux cell `$procmux$2180' from module `\NRISC_REGs'.
  Cell `$procmux$2183' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN[31:0]$338 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2183' from module `\NRISC_REGs'.
  Cell `$procmux$2186' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_DATA[31:0]$337 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2186' from module `\NRISC_REGs'.
  Cell `$procmux$2189' is identical to cell `$procmux$2090'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_ADDR[31:0]$336 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_ADDR[31:0]$303
    Removing $mux cell `$procmux$2189' from module `\NRISC_REGs'.
  Cell `$procmux$2192' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_EN[31:0]$341 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2192' from module `\NRISC_REGs'.
  Cell `$procmux$2195' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_DATA[31:0]$340 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2195' from module `\NRISC_REGs'.
  Cell `$procmux$2198' is identical to cell `$procmux$2099'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:72$289_ADDR[31:0]$339 = $0$memwr$\global_REGS$NRISC_REGs.v:64$278_ADDR[31:0]$306
    Removing $mux cell `$procmux$2198' from module `\NRISC_REGs'.
  Cell `$procmux$2201' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN[31:0]$344 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2201' from module `\NRISC_REGs'.
  Cell `$procmux$2204' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_DATA[31:0]$343 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2204' from module `\NRISC_REGs'.
  Cell `$procmux$2207' is identical to cell `$procmux$2099'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_ADDR[31:0]$342 = $0$memwr$\global_REGS$NRISC_REGs.v:64$278_ADDR[31:0]$306
    Removing $mux cell `$procmux$2207' from module `\NRISC_REGs'.
  Cell `$procmux$2210' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_EN[31:0]$347 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2210' from module `\NRISC_REGs'.
  Cell `$procmux$2213' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_DATA[31:0]$346 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2213' from module `\NRISC_REGs'.
  Cell `$procmux$2216' is identical to cell `$procmux$2108'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:73$291_ADDR[31:0]$345 = $0$memwr$\global_REGS$NRISC_REGs.v:65$279_ADDR[31:0]$309
    Removing $mux cell `$procmux$2216' from module `\NRISC_REGs'.
  Cell `$procmux$2219' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN[31:0]$350 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2219' from module `\NRISC_REGs'.
  Cell `$procmux$2222' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_DATA[31:0]$349 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2222' from module `\NRISC_REGs'.
  Cell `$procmux$2225' is identical to cell `$procmux$2108'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_ADDR[31:0]$348 = $0$memwr$\global_REGS$NRISC_REGs.v:65$279_ADDR[31:0]$309
    Removing $mux cell `$procmux$2225' from module `\NRISC_REGs'.
  Cell `$procmux$2228' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_EN[31:0]$353 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2228' from module `\NRISC_REGs'.
  Cell `$procmux$2231' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_DATA[31:0]$352 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2231' from module `\NRISC_REGs'.
  Cell `$procmux$2234' is identical to cell `$procmux$2117'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:74$293_ADDR[31:0]$351 = $0$memwr$\global_REGS$NRISC_REGs.v:66$280_ADDR[31:0]$312
    Removing $mux cell `$procmux$2234' from module `\NRISC_REGs'.
  Cell `$procmux$2237' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN[31:0]$356 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2237' from module `\NRISC_REGs'.
  Cell `$procmux$2240' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_DATA[31:0]$355 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2240' from module `\NRISC_REGs'.
  Cell `$procmux$2243' is identical to cell `$procmux$2117'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_ADDR[31:0]$354 = $0$memwr$\global_REGS$NRISC_REGs.v:66$280_ADDR[31:0]$312
    Removing $mux cell `$procmux$2243' from module `\NRISC_REGs'.
  Cell `$procmux$2246' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_EN[31:0]$359 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2246' from module `\NRISC_REGs'.
  Cell `$procmux$2249' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_DATA[31:0]$358 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2249' from module `\NRISC_REGs'.
  Cell `$procmux$2252' is identical to cell `$procmux$2126'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:75$295_ADDR[31:0]$357 = $0$memwr$\global_REGS$NRISC_REGs.v:67$281_ADDR[31:0]$315
    Removing $mux cell `$procmux$2252' from module `\NRISC_REGs'.
  Cell `$procmux$2255' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN[31:0]$362 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2255' from module `\NRISC_REGs'.
  Cell `$procmux$2258' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_DATA[31:0]$361 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2258' from module `\NRISC_REGs'.
  Cell `$procmux$2261' is identical to cell `$procmux$2126'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_ADDR[31:0]$360 = $0$memwr$\global_REGS$NRISC_REGs.v:67$281_ADDR[31:0]$315
    Removing $mux cell `$procmux$2261' from module `\NRISC_REGs'.
  Cell `$procmux$2264' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_EN[31:0]$365 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2264' from module `\NRISC_REGs'.
  Cell `$procmux$2267' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_DATA[31:0]$364 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2267' from module `\NRISC_REGs'.
  Cell `$procmux$2270' is identical to cell `$procmux$2135'.
    Redirecting output \Y: $0$memwr$\USR_REGS$NRISC_REGs.v:76$297_ADDR[31:0]$363 = $0$memwr$\global_REGS$NRISC_REGs.v:68$282_ADDR[31:0]$318
    Removing $mux cell `$procmux$2270' from module `\NRISC_REGs'.
  Cell `$procmux$2273' is identical to cell `$procmux$2084'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN[31:0]$368 [0] = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_EN[31:0]$305 [0]
    Removing $mux cell `$procmux$2273' from module `\NRISC_REGs'.
  Cell `$procmux$2276' is identical to cell `$procmux$2087'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_DATA[31:0]$367 = $0$memwr$\global_REGS$NRISC_REGs.v:63$277_DATA[31:0]$304
    Removing $mux cell `$procmux$2276' from module `\NRISC_REGs'.
  Cell `$procmux$2279' is identical to cell `$procmux$2135'.
    Redirecting output \Y: $0$memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_ADDR[31:0]$366 = $0$memwr$\global_REGS$NRISC_REGs.v:68$282_ADDR[31:0]$318
    Removing $mux cell `$procmux$2279' from module `\NRISC_REGs'.
  Cell `$procdff$2407' is identical to cell `$procdff$2404'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:65$279_EN = $memwr$\global_REGS$NRISC_REGs.v:64$278_EN
    Removing $dff cell `$procdff$2407' from module `\NRISC_REGs'.
  Cell `$procdff$2409' is identical to cell `$procdff$2406'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:66$280_DATA = $memwr$\global_REGS$NRISC_REGs.v:65$279_DATA
    Removing $dff cell `$procdff$2409' from module `\NRISC_REGs'.
  Cell `$procdff$2410' is identical to cell `$procdff$2404'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:66$280_EN = $memwr$\global_REGS$NRISC_REGs.v:64$278_EN
    Removing $dff cell `$procdff$2410' from module `\NRISC_REGs'.
  Cell `$procdff$2400' is identical to cell `$procdff$2406'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:63$277_DATA = $memwr$\global_REGS$NRISC_REGs.v:65$279_DATA
    Removing $dff cell `$procdff$2400' from module `\NRISC_REGs'.
  Cell `$procdff$2401' is identical to cell `$procdff$2404'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:63$277_EN = $memwr$\global_REGS$NRISC_REGs.v:64$278_EN
    Removing $dff cell `$procdff$2401' from module `\NRISC_REGs'.
  Cell `$procdff$2403' is identical to cell `$procdff$2406'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:64$278_DATA = $memwr$\global_REGS$NRISC_REGs.v:65$279_DATA
    Removing $dff cell `$procdff$2403' from module `\NRISC_REGs'.
  Cell `$procdff$2415' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:68$282_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2415' from module `\NRISC_REGs'.
  Cell `$procdff$2416' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:68$282_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2416' from module `\NRISC_REGs'.
  Cell `$procdff$2417' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:69$283_ADDR = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2417' from module `\NRISC_REGs'.
  Cell `$procdff$2418' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:69$283_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2418' from module `\NRISC_REGs'.
  Cell `$procdff$2419' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:69$283_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2419' from module `\NRISC_REGs'.
  Cell `$procdff$2420' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_ADDR = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2420' from module `\NRISC_REGs'.
  Cell `$procdff$2421' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2421' from module `\NRISC_REGs'.
  Cell `$procdff$2422' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2422' from module `\NRISC_REGs'.
  Cell `$procdff$2424' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:70$285_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2424' from module `\NRISC_REGs'.
  Cell `$procdff$2425' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:70$285_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2425' from module `\NRISC_REGs'.
  Cell `$procdff$2426' is identical to cell `$procdff$2423'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_ADDR = $memwr$\USR_REGS$NRISC_REGs.v:70$285_ADDR
    Removing $dff cell `$procdff$2426' from module `\NRISC_REGs'.
  Cell `$procdff$2427' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2427' from module `\NRISC_REGs'.
  Cell `$procdff$2428' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:70$286_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2428' from module `\NRISC_REGs'.
  Cell `$procdff$2430' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:71$287_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2430' from module `\NRISC_REGs'.
  Cell `$procdff$2431' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:71$287_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2431' from module `\NRISC_REGs'.
  Cell `$procdff$2432' is identical to cell `$procdff$2429'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_ADDR = $memwr$\USR_REGS$NRISC_REGs.v:71$287_ADDR
    Removing $dff cell `$procdff$2432' from module `\NRISC_REGs'.
  Cell `$procdff$2433' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2433' from module `\NRISC_REGs'.
  Cell `$procdff$2434' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:71$288_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2434' from module `\NRISC_REGs'.
  Cell `$procdff$2436' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:72$289_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2436' from module `\NRISC_REGs'.
  Cell `$procdff$2437' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:72$289_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2437' from module `\NRISC_REGs'.
  Cell `$procdff$2438' is identical to cell `$procdff$2435'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_ADDR = $memwr$\USR_REGS$NRISC_REGs.v:72$289_ADDR
    Removing $dff cell `$procdff$2438' from module `\NRISC_REGs'.
  Cell `$procdff$2439' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2439' from module `\NRISC_REGs'.
  Cell `$procdff$2440' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:72$290_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2440' from module `\NRISC_REGs'.
  Cell `$procdff$2442' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:73$291_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2442' from module `\NRISC_REGs'.
  Cell `$procdff$2443' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:73$291_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2443' from module `\NRISC_REGs'.
  Cell `$procdff$2444' is identical to cell `$procdff$2441'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_ADDR = $memwr$\USR_REGS$NRISC_REGs.v:73$291_ADDR
    Removing $dff cell `$procdff$2444' from module `\NRISC_REGs'.
  Cell `$procdff$2445' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2445' from module `\NRISC_REGs'.
  Cell `$procdff$2446' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:73$292_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2446' from module `\NRISC_REGs'.
  Cell `$procdff$2448' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:74$293_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2448' from module `\NRISC_REGs'.
  Cell `$procdff$2449' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:74$293_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2449' from module `\NRISC_REGs'.
  Cell `$procdff$2450' is identical to cell `$procdff$2447'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_ADDR = $memwr$\USR_REGS$NRISC_REGs.v:74$293_ADDR
    Removing $dff cell `$procdff$2450' from module `\NRISC_REGs'.
  Cell `$procdff$2451' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2451' from module `\NRISC_REGs'.
  Cell `$procdff$2452' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:74$294_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2452' from module `\NRISC_REGs'.
  Cell `$procdff$2453' is identical to cell `$procdff$2411'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:75$295_ADDR = $memwr$\global_REGS$NRISC_REGs.v:67$281_ADDR
    Removing $dff cell `$procdff$2453' from module `\NRISC_REGs'.
  Cell `$procdff$2454' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:75$295_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2454' from module `\NRISC_REGs'.
  Cell `$procdff$2455' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:75$295_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2455' from module `\NRISC_REGs'.
  Cell `$procdff$2456' is identical to cell `$procdff$2411'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_ADDR = $memwr$\global_REGS$NRISC_REGs.v:67$281_ADDR
    Removing $dff cell `$procdff$2456' from module `\NRISC_REGs'.
  Cell `$procdff$2457' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2457' from module `\NRISC_REGs'.
  Cell `$procdff$2458' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:75$296_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2458' from module `\NRISC_REGs'.
  Cell `$procdff$2459' is identical to cell `$procdff$2414'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:76$297_ADDR = $memwr$\global_REGS$NRISC_REGs.v:68$282_ADDR
    Removing $dff cell `$procdff$2459' from module `\NRISC_REGs'.
  Cell `$procdff$2460' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:76$297_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2460' from module `\NRISC_REGs'.
  Cell `$procdff$2461' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:76$297_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2461' from module `\NRISC_REGs'.
  Cell `$procdff$2462' is identical to cell `$procdff$2414'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_ADDR = $memwr$\global_REGS$NRISC_REGs.v:68$282_ADDR
    Removing $dff cell `$procdff$2462' from module `\NRISC_REGs'.
  Cell `$procdff$2463' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2463' from module `\NRISC_REGs'.
  Cell `$procdff$2464' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:76$298_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2464' from module `\NRISC_REGs'.
  Cell `$procdff$2404' is identical to cell `$procdff$2413'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:64$278_EN = $memwr$\global_REGS$NRISC_REGs.v:67$281_EN
    Removing $dff cell `$procdff$2404' from module `\NRISC_REGs'.
  Cell `$procdff$2405' is identical to cell `$procdff$2441'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:65$279_ADDR = $memwr$\USR_REGS$NRISC_REGs.v:73$291_ADDR
    Removing $dff cell `$procdff$2405' from module `\NRISC_REGs'.
  Cell `$procdff$2406' is identical to cell `$procdff$2412'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:65$279_DATA = $memwr$\global_REGS$NRISC_REGs.v:67$281_DATA
    Removing $dff cell `$procdff$2406' from module `\NRISC_REGs'.
  Cell `$procdff$2408' is identical to cell `$procdff$2447'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:66$280_ADDR = $memwr$\USR_REGS$NRISC_REGs.v:74$293_ADDR
    Removing $dff cell `$procdff$2408' from module `\NRISC_REGs'.
  Cell `$procdff$2399' is identical to cell `$procdff$2429'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:63$277_ADDR = $memwr$\USR_REGS$NRISC_REGs.v:71$287_ADDR
    Removing $dff cell `$procdff$2399' from module `\NRISC_REGs'.
  Cell `$procdff$2402' is identical to cell `$procdff$2435'.
    Redirecting output \Q: $memwr$\global_REGS$NRISC_REGs.v:64$278_ADDR = $memwr$\USR_REGS$NRISC_REGs.v:72$289_ADDR
    Removing $dff cell `$procdff$2402' from module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
  Cell `$ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:146$10' is identical to cell `$ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$7'.
    Redirecting output \Y: \DDATA_CORE_in = $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$7_Y
    Removing $mux cell `$ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:146$10' from module `\NRISC_UP'.
Removed a total of 137 cells.

7.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

7.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.6.8. Executing OPT_EXPR pass (perform const folding).
Replacing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2521' (const_or) in module `\NRISC_InstructionDecoder' with constant driver `$auto$opt_reduce.cc:132:opt_mux$2488 = 1'1'.
Replacing $mux cell `$procmux$1534' (1) in module `\NRISC_InstructionDecoder' with constant driver `$4\CORE_DATA_ADDR_mux[0:0] = 1'0'.

7.6.9. Rerunning OPT passes. (Maybe there is more to do..)

7.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\somaUla\TAM=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_InstructionDecoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1912 (pure)
    Root of a mux tree: $procmux$1960 (pure)
    Root of a mux tree: $procmux$1966 (pure)
    Root of a mux tree: $procmux$1987 (pure)
    Root of a mux tree: $procmux$1990 (pure)
    Root of a mux tree: $procmux$1993 (pure)
    Root of a mux tree: $procmux$1996 (pure)
    Root of a mux tree: $procmux$1999 (pure)
    Root of a mux tree: $procmux$2002 (pure)
    Root of a mux tree: $procmux$2005 (pure)
    Root of a mux tree: $procmux$2008 (pure)
    Root of a mux tree: $procmux$2011 (pure)
    Root of a mux tree: $procmux$2014 (pure)
    Root of a mux tree: $procmux$2017 (pure)
    Root of a mux tree: $procmux$2020 (pure)
    Root of a mux tree: $procmux$2023 (pure)
    Root of a mux tree: $procmux$2026 (pure)
    Root of a mux tree: $procmux$2029 (pure)
    Root of a mux tree: $procmux$2032 (pure)
    Root of a mux tree: $procmux$2035 (pure)
    Root of a mux tree: $procmux$2038 (pure)
    Root of a mux tree: $procmux$2041 (pure)
    Root of a mux tree: $procmux$2044 (pure)
    Root of a mux tree: $procmux$984 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_PC_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$833 (pure)
    Root of a mux tree: $procmux$930 (pure)
    Root of a mux tree: $procmux$933 (pure)
    Root of a mux tree: $procmux$936 (pure)
    Root of a mux tree: $procmux$939 (pure)
    Root of a mux tree: $procmux$942 (pure)
    Root of a mux tree: $procmux$945 (pure)
    Root of a mux tree: $procmux$948 (pure)
    Root of a mux tree: $procmux$975 (pure)
    Root of a mux tree: $procmux$978 (pure)
    Root of a mux tree: $procmux$981 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_REGs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2049 (pure)
    Root of a mux tree: $procmux$2066 (pure)
    Root of a mux tree: $procmux$2084 (pure)
    Root of a mux tree: $procmux$2087 (pure)
    Root of a mux tree: $procmux$2090 (pure)
    Root of a mux tree: $procmux$2099 (pure)
    Root of a mux tree: $procmux$2108 (pure)
    Root of a mux tree: $procmux$2117 (pure)
    Root of a mux tree: $procmux$2126 (pure)
    Root of a mux tree: $procmux$2135 (pure)
    Root of a mux tree: $procmux$2162 (pure)
    Root of a mux tree: $procmux$2286 (pure)
    Root of a mux tree: $procmux$2293 (pure)
    Root of a mux tree: $procmux$2300 (pure)
    Root of a mux tree: $procmux$2309 (pure)
    Root of a mux tree: $procmux$2318 (pure)
    Root of a mux tree: $procmux$2327 (pure)
    Root of a mux tree: $procmux$2335 (pure)
    Root of a mux tree: $procmux$2343 (pure)
    Root of a mux tree: $procmux$2351 (pure)
    Root of a mux tree: $ternary$NRISC_REGs.v:49$387
    Root of a mux tree: $ternary$NRISC_REGs.v:50$390
    Root of a mux tree: $ternary$NRISC_REGs.v:51$393
    Root of a mux tree: $ternary$NRISC_REGs.v:52$396
    Root of a mux tree: $ternary$NRISC_REGs.v:53$399
    Root of a mux tree: $ternary$NRISC_REGs.v:54$402
    Root of a mux tree: $ternary$NRISC_REGs.v:55$405
    Root of a mux tree: $ternary$NRISC_REGs.v:56$408
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_ULA..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2353 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:103$54 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:108$89 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:66$16 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:78$106 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_UP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:120$1 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$7 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$8 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:145$9 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

7.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\somaUla\TAM=32.
  Optimizing cells in module \NRISC_InstructionDecoder.
    New ctrl vector for $pmux cell $procmux$1118: $auto$opt_reduce.cc:132:opt_mux$2554
    New ctrl vector for $pmux cell $procmux$1690: { $procmux$1028_CMP $auto$opt_reduce.cc:132:opt_mux$2556 }
    New ctrl vector for $pmux cell $procmux$1703: { $procmux$1009_CMP $auto$opt_reduce.cc:132:opt_mux$2558 }
    New ctrl vector for $pmux cell $procmux$1716: { $procmux$1028_CMP $auto$opt_reduce.cc:132:opt_mux$2560 }
    New ctrl vector for $pmux cell $procmux$1729: { $procmux$1009_CMP $auto$opt_reduce.cc:132:opt_mux$2562 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2553: { $procmux$1083_CMP [0] $procmux$1083_CMP [1] $procmux$1083_CMP [2] $procmux$1083_CMP [3] $procmux$1104_CMP [0] $procmux$1104_CMP [1] $procmux$1104_CMP [2] $procmux$1104_CMP [3] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2555: { $procmux$1173_CMP $procmux$1009_CMP $procmux$1085_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2557: { $procmux$1028_CMP $procmux$1085_CMP $procmux$1691_CMP $procmux$1173_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2559: { $procmux$1173_CMP $procmux$1009_CMP $procmux$1085_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2561: { $procmux$1028_CMP $procmux$1085_CMP $procmux$1691_CMP $procmux$1173_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2555: { $procmux$1009_CMP $procmux$1085_CMP $procmux$1173_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2557: { $procmux$1028_CMP $procmux$1085_CMP $procmux$1173_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2559: { $procmux$1009_CMP $procmux$1085_CMP $procmux$1173_CMP $procmux$1691_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2561: { $procmux$1028_CMP $procmux$1085_CMP $procmux$1173_CMP $procmux$1691_CMP }
  Optimizing cells in module \NRISC_InstructionDecoder.
  Optimizing cells in module \NRISC_PC_ctrl.
  Optimizing cells in module \NRISC_REGs.
  Optimizing cells in module \NRISC_ULA.
  Optimizing cells in module \NRISC_UP.
Performed a total of 14 changes.

7.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2557' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2561'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2558 = $auto$opt_reduce.cc:132:opt_mux$2562
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2557' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2555' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2559'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2556 = $auto$opt_reduce.cc:132:opt_mux$2560
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2555' from module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 2 cells.

7.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

7.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
  removing unused `$reduce_or' cell `$auto$opt_reduce.cc:126:opt_mux$2517'.
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.6.15. Executing OPT_EXPR pass (perform const folding).

7.6.16. Rerunning OPT passes. (Maybe there is more to do..)

7.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\somaUla\TAM=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_InstructionDecoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1912 (pure)
    Root of a mux tree: $procmux$1960 (pure)
    Root of a mux tree: $procmux$1966 (pure)
    Root of a mux tree: $procmux$1987 (pure)
    Root of a mux tree: $procmux$1990 (pure)
    Root of a mux tree: $procmux$1993 (pure)
    Root of a mux tree: $procmux$1996 (pure)
    Root of a mux tree: $procmux$1999 (pure)
    Root of a mux tree: $procmux$2002 (pure)
    Root of a mux tree: $procmux$2005 (pure)
    Root of a mux tree: $procmux$2008 (pure)
    Root of a mux tree: $procmux$2011 (pure)
    Root of a mux tree: $procmux$2014 (pure)
    Root of a mux tree: $procmux$2017 (pure)
    Root of a mux tree: $procmux$2020 (pure)
    Root of a mux tree: $procmux$2023 (pure)
    Root of a mux tree: $procmux$2026 (pure)
    Root of a mux tree: $procmux$2029 (pure)
    Root of a mux tree: $procmux$2032 (pure)
    Root of a mux tree: $procmux$2035 (pure)
    Root of a mux tree: $procmux$2038 (pure)
    Root of a mux tree: $procmux$2041 (pure)
    Root of a mux tree: $procmux$2044 (pure)
    Root of a mux tree: $procmux$984 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_PC_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$833 (pure)
    Root of a mux tree: $procmux$930 (pure)
    Root of a mux tree: $procmux$933 (pure)
    Root of a mux tree: $procmux$936 (pure)
    Root of a mux tree: $procmux$939 (pure)
    Root of a mux tree: $procmux$942 (pure)
    Root of a mux tree: $procmux$945 (pure)
    Root of a mux tree: $procmux$948 (pure)
    Root of a mux tree: $procmux$975 (pure)
    Root of a mux tree: $procmux$978 (pure)
    Root of a mux tree: $procmux$981 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_REGs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2049 (pure)
    Root of a mux tree: $procmux$2066 (pure)
    Root of a mux tree: $procmux$2084 (pure)
    Root of a mux tree: $procmux$2087 (pure)
    Root of a mux tree: $procmux$2090 (pure)
    Root of a mux tree: $procmux$2099 (pure)
    Root of a mux tree: $procmux$2108 (pure)
    Root of a mux tree: $procmux$2117 (pure)
    Root of a mux tree: $procmux$2126 (pure)
    Root of a mux tree: $procmux$2135 (pure)
    Root of a mux tree: $procmux$2162 (pure)
    Root of a mux tree: $procmux$2286 (pure)
    Root of a mux tree: $procmux$2293 (pure)
    Root of a mux tree: $procmux$2300 (pure)
    Root of a mux tree: $procmux$2309 (pure)
    Root of a mux tree: $procmux$2318 (pure)
    Root of a mux tree: $procmux$2327 (pure)
    Root of a mux tree: $procmux$2335 (pure)
    Root of a mux tree: $procmux$2343 (pure)
    Root of a mux tree: $procmux$2351 (pure)
    Root of a mux tree: $ternary$NRISC_REGs.v:49$387
    Root of a mux tree: $ternary$NRISC_REGs.v:50$390
    Root of a mux tree: $ternary$NRISC_REGs.v:51$393
    Root of a mux tree: $ternary$NRISC_REGs.v:52$396
    Root of a mux tree: $ternary$NRISC_REGs.v:53$399
    Root of a mux tree: $ternary$NRISC_REGs.v:54$402
    Root of a mux tree: $ternary$NRISC_REGs.v:55$405
    Root of a mux tree: $ternary$NRISC_REGs.v:56$408
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_ULA..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2353 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:103$54 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:108$89 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:66$16 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:78$106 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_UP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:120$1 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$7 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$8 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:145$9 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

7.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\somaUla\TAM=32.
  Optimizing cells in module \NRISC_InstructionDecoder.
  Optimizing cells in module \NRISC_PC_ctrl.
  Optimizing cells in module \NRISC_REGs.
  Optimizing cells in module \NRISC_ULA.
  Optimizing cells in module \NRISC_UP.
Performed a total of 0 changes.

7.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$2553' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$2525'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2554 = $auto$opt_reduce.cc:132:opt_mux$2526
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$2553' from module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 1 cells.

7.6.20. Executing OPT_RMDFF pass (remove dff with constant values).

7.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.6.22. Executing OPT_EXPR pass (perform const folding).

7.6.23. Rerunning OPT passes. (Maybe there is more to do..)

7.6.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\somaUla\TAM=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_InstructionDecoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1912 (pure)
    Root of a mux tree: $procmux$1960 (pure)
    Root of a mux tree: $procmux$1966 (pure)
    Root of a mux tree: $procmux$1987 (pure)
    Root of a mux tree: $procmux$1990 (pure)
    Root of a mux tree: $procmux$1993 (pure)
    Root of a mux tree: $procmux$1996 (pure)
    Root of a mux tree: $procmux$1999 (pure)
    Root of a mux tree: $procmux$2002 (pure)
    Root of a mux tree: $procmux$2005 (pure)
    Root of a mux tree: $procmux$2008 (pure)
    Root of a mux tree: $procmux$2011 (pure)
    Root of a mux tree: $procmux$2014 (pure)
    Root of a mux tree: $procmux$2017 (pure)
    Root of a mux tree: $procmux$2020 (pure)
    Root of a mux tree: $procmux$2023 (pure)
    Root of a mux tree: $procmux$2026 (pure)
    Root of a mux tree: $procmux$2029 (pure)
    Root of a mux tree: $procmux$2032 (pure)
    Root of a mux tree: $procmux$2035 (pure)
    Root of a mux tree: $procmux$2038 (pure)
    Root of a mux tree: $procmux$2041 (pure)
    Root of a mux tree: $procmux$2044 (pure)
    Root of a mux tree: $procmux$984 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_PC_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$833 (pure)
    Root of a mux tree: $procmux$930 (pure)
    Root of a mux tree: $procmux$933 (pure)
    Root of a mux tree: $procmux$936 (pure)
    Root of a mux tree: $procmux$939 (pure)
    Root of a mux tree: $procmux$942 (pure)
    Root of a mux tree: $procmux$945 (pure)
    Root of a mux tree: $procmux$948 (pure)
    Root of a mux tree: $procmux$975 (pure)
    Root of a mux tree: $procmux$978 (pure)
    Root of a mux tree: $procmux$981 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_REGs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2049 (pure)
    Root of a mux tree: $procmux$2066 (pure)
    Root of a mux tree: $procmux$2084 (pure)
    Root of a mux tree: $procmux$2087 (pure)
    Root of a mux tree: $procmux$2090 (pure)
    Root of a mux tree: $procmux$2099 (pure)
    Root of a mux tree: $procmux$2108 (pure)
    Root of a mux tree: $procmux$2117 (pure)
    Root of a mux tree: $procmux$2126 (pure)
    Root of a mux tree: $procmux$2135 (pure)
    Root of a mux tree: $procmux$2162 (pure)
    Root of a mux tree: $procmux$2286 (pure)
    Root of a mux tree: $procmux$2293 (pure)
    Root of a mux tree: $procmux$2300 (pure)
    Root of a mux tree: $procmux$2309 (pure)
    Root of a mux tree: $procmux$2318 (pure)
    Root of a mux tree: $procmux$2327 (pure)
    Root of a mux tree: $procmux$2335 (pure)
    Root of a mux tree: $procmux$2343 (pure)
    Root of a mux tree: $procmux$2351 (pure)
    Root of a mux tree: $ternary$NRISC_REGs.v:49$387
    Root of a mux tree: $ternary$NRISC_REGs.v:50$390
    Root of a mux tree: $ternary$NRISC_REGs.v:51$393
    Root of a mux tree: $ternary$NRISC_REGs.v:52$396
    Root of a mux tree: $ternary$NRISC_REGs.v:53$399
    Root of a mux tree: $ternary$NRISC_REGs.v:54$402
    Root of a mux tree: $ternary$NRISC_REGs.v:55$405
    Root of a mux tree: $ternary$NRISC_REGs.v:56$408
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_ULA..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2353 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:103$54 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:108$89 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:66$16 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:78$106 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_UP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:120$1 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$7 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$8 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:145$9 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

7.6.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\somaUla\TAM=32.
  Optimizing cells in module \NRISC_InstructionDecoder.
  Optimizing cells in module \NRISC_PC_ctrl.
  Optimizing cells in module \NRISC_REGs.
  Optimizing cells in module \NRISC_ULA.
  Optimizing cells in module \NRISC_UP.
Performed a total of 0 changes.

7.6.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 0 cells.

7.6.27. Executing OPT_RMDFF pass (remove dff with constant values).

7.6.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.6.29. Executing OPT_EXPR pass (perform const folding).

7.6.30. Finished OPT passes. (There is nothing left to do.)

7.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 32) from wire $paramod\somaUla\TAM=32.coutinternal.
Removed top 1 bits (of 32) from wire $paramod\somaUla\TAM=32.w.
Removed top 1 bits (of 32) from wire $paramod\somaUla\TAM=32.x.
Removed top 2 bits (of 4) from port B of cell NRISC_InstructionDecoder.$eq$NRISC_InstructionDecoder.v:444$455 ($eq).
Removed top 1 bits (of 2) from port B of cell NRISC_InstructionDecoder.$procmux$1006_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell NRISC_InstructionDecoder.$procmux$1009_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1021_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1022_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1023_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1024_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1025_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell NRISC_InstructionDecoder.$procmux$1028_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell NRISC_InstructionDecoder.$procmux$1077 ($pmux).
Removed top 1 bits (of 2) from port B of cell NRISC_InstructionDecoder.$procmux$1080_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1083_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1083_CMP1 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1083_CMP2 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1083_CMP3 ($eq).
Removed top 2 bits (of 3) from port B of cell NRISC_InstructionDecoder.$procmux$1085_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1104_CMP1 ($eq).
Removed top 2 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1104_CMP2 ($eq).
Removed top 2 bits (of 4) from port B of cell NRISC_InstructionDecoder.$procmux$1104_CMP3 ($eq).
Removed top 2 bits (of 3) from port B of cell NRISC_InstructionDecoder.$procmux$1169_CMP1 ($eq).
Removed top 1 bits (of 3) from port B of cell NRISC_InstructionDecoder.$procmux$1169_CMP2 ($eq).
Removed top 6 bits (of 8) from port B of cell NRISC_InstructionDecoder.$procmux$1346_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell NRISC_InstructionDecoder.$procmux$1347_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell NRISC_InstructionDecoder.$procmux$1348_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell NRISC_InstructionDecoder.$procmux$1390_CMP0 ($eq).
Removed cell NRISC_InstructionDecoder.$procmux$1912 ($mux).
Removed cell NRISC_InstructionDecoder.$procmux$1960 ($mux).
Removed cell NRISC_InstructionDecoder.$procmux$1966 ($mux).
Removed top 1 bits (of 2) from wire NRISC_InstructionDecoder.$7\CORE_PC_ctrl[1:0].
Removed top 1 bits (of 2) from port B of cell NRISC_PC_ctrl.$procmux$730_CMP0 ($eq).
Removed cell NRISC_PC_ctrl.$procmux$833 ($mux).
Removed cell NRISC_PC_ctrl.$procmux$830 ($mux).
Removed top 1 bits (of 2) from port B of cell NRISC_PC_ctrl.$procmux$682_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell NRISC_PC_ctrl.$procmux$676_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell NRISC_PC_ctrl.$add$NRISC_PC_ctrl.v:78$497 ($add).
Removed top 28 bits (of 32) from port Y of cell NRISC_PC_ctrl.$add$NRISC_PC_ctrl.v:78$497 ($add).
Removed top 31 bits (of 32) from port B of cell NRISC_PC_ctrl.$sub$NRISC_PC_ctrl.v:79$498 ($sub).
Removed top 28 bits (of 32) from port Y of cell NRISC_PC_ctrl.$sub$NRISC_PC_ctrl.v:79$498 ($sub).
Removed top 31 bits (of 32) from port B of cell NRISC_PC_ctrl.$add$NRISC_PC_ctrl.v:83$508 ($add).
Removed top 24 bits (of 32) from port Y of cell NRISC_PC_ctrl.$add$NRISC_PC_ctrl.v:83$508 ($add).
Removed top 1 bits (of 3) from port B of cell NRISC_PC_ctrl.$procmux$927_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell NRISC_PC_ctrl.$procmux$928_CMP0 ($eq).
Removed cell NRISC_PC_ctrl.$procmux$930 ($mux).
Removed top 28 bits (of 32) from wire NRISC_PC_ctrl.$add$NRISC_PC_ctrl.v:78$497_Y.
Removed top 24 bits (of 32) from wire NRISC_PC_ctrl.$add$NRISC_PC_ctrl.v:83$508_Y.
Removed top 13 bits (of 16) from wire NRISC_PC_ctrl.$not$NRISC_PC_ctrl.v:48$471_Y.
Removed top 28 bits (of 32) from wire NRISC_PC_ctrl.$sub$NRISC_PC_ctrl.v:79$498_Y.
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\FIRQ_REGS$NRISC_REGs.v:49$385 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\FIRQ_REGS$NRISC_REGs.v:50$388 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\FIRQ_REGS$NRISC_REGs.v:51$391 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\FIRQ_REGS$NRISC_REGs.v:52$394 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\FIRQ_REGS$NRISC_REGs.v:53$397 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\FIRQ_REGS$NRISC_REGs.v:54$400 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\FIRQ_REGS$NRISC_REGs.v:55$403 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\FIRQ_REGS$NRISC_REGs.v:56$406 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\USR_REGS$NRISC_REGs.v:49$386 (USR_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\USR_REGS$NRISC_REGs.v:50$389 (USR_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\USR_REGS$NRISC_REGs.v:51$392 (USR_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\USR_REGS$NRISC_REGs.v:52$395 (USR_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\USR_REGS$NRISC_REGs.v:53$398 (USR_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\USR_REGS$NRISC_REGs.v:54$401 (USR_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\USR_REGS$NRISC_REGs.v:55$404 (USR_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\USR_REGS$NRISC_REGs.v:56$407 (USR_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\global_REGS$NRISC_REGs.v:43$379 (global_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\global_REGS$NRISC_REGs.v:44$380 (global_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\global_REGS$NRISC_REGs.v:45$381 (global_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\global_REGS$NRISC_REGs.v:46$382 (global_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\global_REGS$NRISC_REGs.v:47$383 (global_REGS).
Removed top 29 address bits (of 32) from memory read port NRISC_REGs.$memrd$\global_REGS$NRISC_REGs.v:48$384 (global_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:69$422 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:70$424 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:71$426 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:72$428 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:73$430 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:74$432 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:75$434 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:76$436 (FIRQ_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:69$421 (USR_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:70$423 (USR_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:71$425 (USR_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:72$427 (USR_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:73$429 (USR_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:74$431 (USR_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:75$433 (USR_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:76$435 (USR_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:63$415 (global_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:64$416 (global_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:65$417 (global_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:66$418 (global_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:67$419 (global_REGS).
Removed top 29 address bits (of 32) from memory write port NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:68$420 (global_REGS).
Removed top 1 address bits (of 4) from memory write port NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:80$437 (global_REGS).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2058_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2059_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2060_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2061_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell NRISC_REGs.$procmux$2062_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell NRISC_REGs.$procmux$2063_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell NRISC_REGs.$procmux$2064_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2075_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2076_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2077_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2078_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell NRISC_REGs.$procmux$2079_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell NRISC_REGs.$procmux$2080_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell NRISC_REGs.$procmux$2081_CMP0 ($eq).
Removed cell NRISC_REGs.$procmux$2087 ($mux).
Removed cell NRISC_REGs.$procmux$2090 ($mux).
Removed cell NRISC_REGs.$procmux$2099 ($mux).
Removed cell NRISC_REGs.$procmux$2108 ($mux).
Removed cell NRISC_REGs.$procmux$2117 ($mux).
Removed cell NRISC_REGs.$procmux$2126 ($mux).
Removed cell NRISC_REGs.$procmux$2135 ($mux).
Removed cell NRISC_REGs.$procmux$2162 ($mux).
Removed top 2 bits (of 4) from port B of cell NRISC_REGs.$procmux$2285_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell NRISC_REGs.$procmux$2285_CMP1 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2285_CMP2 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2285_CMP3 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2285_CMP4 ($eq).
Removed top 1 bits (of 4) from port B of cell NRISC_REGs.$procmux$2285_CMP5 ($eq).
Removed cell NRISC_REGs.$procmux$2291 ($mux).
Removed cell NRISC_REGs.$procmux$2293 ($mux).
Removed cell NRISC_REGs.$procmux$2298 ($mux).
Removed cell NRISC_REGs.$procmux$2300 ($mux).
Removed cell NRISC_REGs.$procmux$2314 ($mux).
Removed cell NRISC_REGs.$procmux$2316 ($mux).
Removed cell NRISC_REGs.$procmux$2318 ($mux).
Removed cell NRISC_REGs.$procmux$2323 ($mux).
Removed cell NRISC_REGs.$procmux$2325 ($mux).
Removed cell NRISC_REGs.$procmux$2327 ($mux).
Removed cell NRISC_REGs.$procmux$2339 ($mux).
Removed cell NRISC_REGs.$procmux$2341 ($mux).
Removed cell NRISC_REGs.$procmux$2343 ($mux).
Removed cell NRISC_REGs.$procmux$2347 ($mux).
Removed cell NRISC_REGs.$procmux$2349 ($mux).
Removed cell NRISC_REGs.$procmux$2351 ($mux).
Removed top 1 bits (of 3) from port B of cell NRISC_ULA.$procmux$2358_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell NRISC_ULA.$procmux$2359_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell NRISC_ULA.$procmux$2360_CMP0 ($eq).
Removed top 1 bits (of 32) from mux cell NRISC_UP.$ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:143$6 ($mux).
Removed top 1 bits (of 32) from wire NRISC_UP.$ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:143$6_Y.

7.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod\somaUla\TAM=32:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module NRISC_InstructionDecoder:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module NRISC_PC_ctrl:
  creating $macc model for $add$NRISC_PC_ctrl.v:83$508 ($add).
  creating $macc model for $add$NRISC_PC_ctrl.v:78$497 ($add).
  creating $macc model for $sub$NRISC_PC_ctrl.v:79$498 ($sub).
  creating $alu model for $macc $sub$NRISC_PC_ctrl.v:79$498.
  creating $alu model for $macc $add$NRISC_PC_ctrl.v:78$497.
  creating $alu model for $macc $add$NRISC_PC_ctrl.v:83$508.
  creating $alu cell for $add$NRISC_PC_ctrl.v:83$508: $auto$alumacc.cc:470:replace_alu$2572
  creating $alu cell for $add$NRISC_PC_ctrl.v:78$497: $auto$alumacc.cc:470:replace_alu$2575
  creating $alu cell for $sub$NRISC_PC_ctrl.v:79$498: $auto$alumacc.cc:470:replace_alu$2578
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module NRISC_REGs:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module NRISC_ULA:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module NRISC_UP:
  created 0 $alu and 0 $macc cells.

7.9. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module NRISC_ULA that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$NRISC_ULA.v:81$108 ($sshr):
    Found 1 activation_patterns using ctrl signal $procmux$2356_CMP.
    No candidates found.
  Analyzing resource sharing options for $shr$NRISC_ULA.v:78$107 ($shr):
    Found 2 activation_patterns using ctrl signal { $procmux$2357_CMP $procmux$2354_CMP }.
    No candidates found.
  Analyzing resource sharing options for $shl$NRISC_ULA.v:84$109 ($shl):
    Found 2 activation_patterns using ctrl signal { $procmux$2355_CMP $procmux$2354_CMP }.
    No candidates found.

7.10. Executing OPT pass (performing simple optimizations).

7.10.1. Executing OPT_EXPR pass (perform const folding).

7.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
  Cell `$procdff$2469' is identical to cell `$procdff$2466'.
    Redirecting output \Q: $memwr$\USR_REGS$NRISC_REGs.v:83$300_DATA = $memwr$\global_REGS$NRISC_REGs.v:80$299_DATA
    Removing $dff cell `$procdff$2469' from module `\NRISC_REGs'.
  Cell `$procdff$2471' is identical to cell `$procdff$2468'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_ADDR = $memwr$\USR_REGS$NRISC_REGs.v:83$300_ADDR
    Removing $dff cell `$procdff$2471' from module `\NRISC_REGs'.
  Cell `$procdff$2472' is identical to cell `$procdff$2466'.
    Redirecting output \Q: $memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_DATA = $memwr$\global_REGS$NRISC_REGs.v:80$299_DATA
    Removing $dff cell `$procdff$2472' from module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 3 cells.

7.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\somaUla\TAM=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_InstructionDecoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1908 (pure)
    Root of a mux tree: $procmux$1956 (pure)
    Root of a mux tree: $procmux$1962 (pure)
    Root of a mux tree: $procmux$1987 (pure)
    Root of a mux tree: $procmux$1990 (pure)
    Root of a mux tree: $procmux$1993 (pure)
    Root of a mux tree: $procmux$1996 (pure)
    Root of a mux tree: $procmux$1999 (pure)
    Root of a mux tree: $procmux$2002 (pure)
    Root of a mux tree: $procmux$2005 (pure)
    Root of a mux tree: $procmux$2008 (pure)
    Root of a mux tree: $procmux$2011 (pure)
    Root of a mux tree: $procmux$2014 (pure)
    Root of a mux tree: $procmux$2017 (pure)
    Root of a mux tree: $procmux$2020 (pure)
    Root of a mux tree: $procmux$2023 (pure)
    Root of a mux tree: $procmux$2026 (pure)
    Root of a mux tree: $procmux$2029 (pure)
    Root of a mux tree: $procmux$2032 (pure)
    Root of a mux tree: $procmux$2035 (pure)
    Root of a mux tree: $procmux$2038 (pure)
    Root of a mux tree: $procmux$2041 (pure)
    Root of a mux tree: $procmux$2044 (pure)
    Root of a mux tree: $procmux$984 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_PC_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$825 (pure)
    Root of a mux tree: $procmux$926 (pure)
    Root of a mux tree: $procmux$933 (pure)
    Root of a mux tree: $procmux$936 (pure)
    Root of a mux tree: $procmux$939 (pure)
    Root of a mux tree: $procmux$942 (pure)
    Root of a mux tree: $procmux$945 (pure)
    Root of a mux tree: $procmux$948 (pure)
    Root of a mux tree: $procmux$975 (pure)
    Root of a mux tree: $procmux$978 (pure)
    Root of a mux tree: $procmux$981 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_REGs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2049 (pure)
    Root of a mux tree: $procmux$2066 (pure)
    Root of a mux tree: $procmux$2084 (pure)
    Root of a mux tree: $procmux$2286 (pure)
    Root of a mux tree: $procmux$2309 (pure)
    Root of a mux tree: $procmux$2335 (pure)
    Root of a mux tree: $ternary$NRISC_REGs.v:49$387
    Root of a mux tree: $ternary$NRISC_REGs.v:50$390
    Root of a mux tree: $ternary$NRISC_REGs.v:51$393
    Root of a mux tree: $ternary$NRISC_REGs.v:52$396
    Root of a mux tree: $ternary$NRISC_REGs.v:53$399
    Root of a mux tree: $ternary$NRISC_REGs.v:54$402
    Root of a mux tree: $ternary$NRISC_REGs.v:55$405
    Root of a mux tree: $ternary$NRISC_REGs.v:56$408
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_ULA..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2353 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:103$54 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:108$89 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:66$16 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:78$106 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_UP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:120$1 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$7 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$8 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:145$9 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

7.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\somaUla\TAM=32.
  Optimizing cells in module \NRISC_InstructionDecoder.
  Optimizing cells in module \NRISC_PC_ctrl.
  Optimizing cells in module \NRISC_REGs.
  Optimizing cells in module \NRISC_ULA.
  Optimizing cells in module \NRISC_UP.
Performed a total of 0 changes.

7.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 0 cells.

7.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$2411 ($dff) from module NRISC_REGs.
Removing $procdff$2412 ($dff) from module NRISC_REGs.
Removing $procdff$2414 ($dff) from module NRISC_REGs.
Removing $procdff$2423 ($dff) from module NRISC_REGs.
Removing $procdff$2429 ($dff) from module NRISC_REGs.
Removing $procdff$2435 ($dff) from module NRISC_REGs.
Removing $procdff$2441 ($dff) from module NRISC_REGs.
Removing $procdff$2447 ($dff) from module NRISC_REGs.
Replaced 8 DFF cells.

7.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.10.8. Executing OPT_EXPR pass (perform const folding).

7.10.9. Rerunning OPT passes. (Maybe there is more to do..)

7.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\somaUla\TAM=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_InstructionDecoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1908 (pure)
    Root of a mux tree: $procmux$1956 (pure)
    Root of a mux tree: $procmux$1962 (pure)
    Root of a mux tree: $procmux$1987 (pure)
    Root of a mux tree: $procmux$1990 (pure)
    Root of a mux tree: $procmux$1993 (pure)
    Root of a mux tree: $procmux$1996 (pure)
    Root of a mux tree: $procmux$1999 (pure)
    Root of a mux tree: $procmux$2002 (pure)
    Root of a mux tree: $procmux$2005 (pure)
    Root of a mux tree: $procmux$2008 (pure)
    Root of a mux tree: $procmux$2011 (pure)
    Root of a mux tree: $procmux$2014 (pure)
    Root of a mux tree: $procmux$2017 (pure)
    Root of a mux tree: $procmux$2020 (pure)
    Root of a mux tree: $procmux$2023 (pure)
    Root of a mux tree: $procmux$2026 (pure)
    Root of a mux tree: $procmux$2029 (pure)
    Root of a mux tree: $procmux$2032 (pure)
    Root of a mux tree: $procmux$2035 (pure)
    Root of a mux tree: $procmux$2038 (pure)
    Root of a mux tree: $procmux$2041 (pure)
    Root of a mux tree: $procmux$2044 (pure)
    Root of a mux tree: $procmux$984 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_PC_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$825 (pure)
    Root of a mux tree: $procmux$926 (pure)
    Root of a mux tree: $procmux$933 (pure)
    Root of a mux tree: $procmux$936 (pure)
    Root of a mux tree: $procmux$939 (pure)
    Root of a mux tree: $procmux$942 (pure)
    Root of a mux tree: $procmux$945 (pure)
    Root of a mux tree: $procmux$948 (pure)
    Root of a mux tree: $procmux$975 (pure)
    Root of a mux tree: $procmux$978 (pure)
    Root of a mux tree: $procmux$981 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_REGs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2049 (pure)
    Root of a mux tree: $procmux$2066 (pure)
    Root of a mux tree: $procmux$2084 (pure)
    Root of a mux tree: $procmux$2286 (pure)
    Root of a mux tree: $procmux$2309 (pure)
    Root of a mux tree: $procmux$2335 (pure)
    Root of a mux tree: $ternary$NRISC_REGs.v:49$387
    Root of a mux tree: $ternary$NRISC_REGs.v:50$390
    Root of a mux tree: $ternary$NRISC_REGs.v:51$393
    Root of a mux tree: $ternary$NRISC_REGs.v:52$396
    Root of a mux tree: $ternary$NRISC_REGs.v:53$399
    Root of a mux tree: $ternary$NRISC_REGs.v:54$402
    Root of a mux tree: $ternary$NRISC_REGs.v:55$405
    Root of a mux tree: $ternary$NRISC_REGs.v:56$408
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_ULA..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2353 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:103$54 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:108$89 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:66$16 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:78$106 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_UP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:120$1 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$7 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$8 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:145$9 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

7.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\somaUla\TAM=32.
  Optimizing cells in module \NRISC_InstructionDecoder.
  Optimizing cells in module \NRISC_PC_ctrl.
  Optimizing cells in module \NRISC_REGs.
  Optimizing cells in module \NRISC_ULA.
  Optimizing cells in module \NRISC_UP.
Performed a total of 0 changes.

7.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 0 cells.

7.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

7.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.10.15. Executing OPT_EXPR pass (perform const folding).

7.10.16. Finished OPT passes. (There is nothing left to do.)

7.11. Executing FSM pass (extract and optimize FSM).

7.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking NRISC_InstructionDecoder.CORE_INT_ctrl as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking NRISC_InstructionDecoder.CORE_STACK_ctrl as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking NRISC_REGs.$memwr$\FIRQ_REGS$NRISC_REGs.v:84$301_EN as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking NRISC_REGs.$memwr$\USR_REGS$NRISC_REGs.v:83$300_EN as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking NRISC_REGs.$memwr$\global_REGS$NRISC_REGs.v:80$299_EN as FSM state register:
    Users of register don't seem to benefit from recoding.

7.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

7.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

7.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

7.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

7.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

7.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

7.12. Executing OPT pass (performing simple optimizations).

7.12.1. Executing OPT_EXPR pass (perform const folding).

7.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 0 cells.

7.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.12.5. Finished fast OPT passes.

7.13. Executing MEMORY pass.

7.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memwr$\FIRQ_REGS$NRISC_REGs.v:69$422' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\FIRQ_REGS$NRISC_REGs.v:70$424' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\FIRQ_REGS$NRISC_REGs.v:71$426' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\FIRQ_REGS$NRISC_REGs.v:72$428' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\FIRQ_REGS$NRISC_REGs.v:73$430' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\FIRQ_REGS$NRISC_REGs.v:74$432' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\FIRQ_REGS$NRISC_REGs.v:75$434' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\FIRQ_REGS$NRISC_REGs.v:76$436' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\FIRQ_REGS$NRISC_REGs.v:84$439' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\USR_REGS$NRISC_REGs.v:69$421' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\USR_REGS$NRISC_REGs.v:70$423' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\USR_REGS$NRISC_REGs.v:71$425' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\USR_REGS$NRISC_REGs.v:72$427' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\USR_REGS$NRISC_REGs.v:73$429' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\USR_REGS$NRISC_REGs.v:74$431' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\USR_REGS$NRISC_REGs.v:75$433' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\USR_REGS$NRISC_REGs.v:76$435' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\USR_REGS$NRISC_REGs.v:83$438' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\global_REGS$NRISC_REGs.v:63$415' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\global_REGS$NRISC_REGs.v:64$416' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\global_REGS$NRISC_REGs.v:65$417' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\global_REGS$NRISC_REGs.v:66$418' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\global_REGS$NRISC_REGs.v:67$419' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\global_REGS$NRISC_REGs.v:68$420' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memwr$\global_REGS$NRISC_REGs.v:80$437' in module `\NRISC_REGs': merged $dff to cell.
Checking cell `$memrd$\FIRQ_REGS$NRISC_REGs.v:49$385' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\FIRQ_REGS$NRISC_REGs.v:50$388' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\FIRQ_REGS$NRISC_REGs.v:51$391' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\FIRQ_REGS$NRISC_REGs.v:52$394' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\FIRQ_REGS$NRISC_REGs.v:53$397' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\FIRQ_REGS$NRISC_REGs.v:54$400' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\FIRQ_REGS$NRISC_REGs.v:55$403' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\FIRQ_REGS$NRISC_REGs.v:56$406' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\USR_REGS$NRISC_REGs.v:49$386' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\USR_REGS$NRISC_REGs.v:50$389' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\USR_REGS$NRISC_REGs.v:51$392' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\USR_REGS$NRISC_REGs.v:52$395' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\USR_REGS$NRISC_REGs.v:53$398' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\USR_REGS$NRISC_REGs.v:54$401' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\USR_REGS$NRISC_REGs.v:55$404' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\USR_REGS$NRISC_REGs.v:56$407' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\global_REGS$NRISC_REGs.v:43$379' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\global_REGS$NRISC_REGs.v:44$380' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\global_REGS$NRISC_REGs.v:45$381' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\global_REGS$NRISC_REGs.v:46$382' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\global_REGS$NRISC_REGs.v:47$383' in module `\NRISC_REGs': no (compatible) $dff found.
Checking cell `$memrd$\global_REGS$NRISC_REGs.v:48$384' in module `\NRISC_REGs': no (compatible) $dff found.

7.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
  removing unused `$dff' cell `$procdff$2413'.
  removing unused `$dff' cell `$procdff$2465'.
  removing unused `$dff' cell `$procdff$2466'.
  removing unused `$dff' cell `$procdff$2467'.
  removing unused `$dff' cell `$procdff$2468'.
  removing unused `$dff' cell `$procdff$2470'.
  removing unused `$dff' cell `$procdff$2473'.
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory NRISC_REGs.FIRQ_REGS by address:
  New clock domain: posedge \clk
    Port 0 ($memwr$\FIRQ_REGS$NRISC_REGs.v:69$422) has addr 3'000.
      Active bits: 11111111111111111111111111111111
    Port 1 ($memwr$\FIRQ_REGS$NRISC_REGs.v:70$424) has addr 3'001.
      Active bits: 11111111111111111111111111111111
    Port 2 ($memwr$\FIRQ_REGS$NRISC_REGs.v:71$426) has addr 3'010.
      Active bits: 11111111111111111111111111111111
    Port 3 ($memwr$\FIRQ_REGS$NRISC_REGs.v:72$428) has addr 3'011.
      Active bits: 11111111111111111111111111111111
    Port 4 ($memwr$\FIRQ_REGS$NRISC_REGs.v:73$430) has addr 3'100.
      Active bits: 11111111111111111111111111111111
    Port 5 ($memwr$\FIRQ_REGS$NRISC_REGs.v:74$432) has addr 3'101.
      Active bits: 11111111111111111111111111111111
    Port 6 ($memwr$\FIRQ_REGS$NRISC_REGs.v:75$434) has addr 3'110.
      Active bits: 11111111111111111111111111111111
    Port 7 ($memwr$\FIRQ_REGS$NRISC_REGs.v:76$436) has addr 3'111.
      Active bits: 11111111111111111111111111111111
    Port 8 ($memwr$\FIRQ_REGS$NRISC_REGs.v:84$439) has addr \REG_RFD [2:0].
      Active bits: 11111111111111111111111111111111
Consolidating write ports of memory NRISC_REGs.USR_REGS by address:
  New clock domain: posedge \clk
    Port 0 ($memwr$\USR_REGS$NRISC_REGs.v:69$421) has addr 3'000.
      Active bits: 11111111111111111111111111111111
    Port 1 ($memwr$\USR_REGS$NRISC_REGs.v:70$423) has addr 3'001.
      Active bits: 11111111111111111111111111111111
    Port 2 ($memwr$\USR_REGS$NRISC_REGs.v:71$425) has addr 3'010.
      Active bits: 11111111111111111111111111111111
    Port 3 ($memwr$\USR_REGS$NRISC_REGs.v:72$427) has addr 3'011.
      Active bits: 11111111111111111111111111111111
    Port 4 ($memwr$\USR_REGS$NRISC_REGs.v:73$429) has addr 3'100.
      Active bits: 11111111111111111111111111111111
    Port 5 ($memwr$\USR_REGS$NRISC_REGs.v:74$431) has addr 3'101.
      Active bits: 11111111111111111111111111111111
    Port 6 ($memwr$\USR_REGS$NRISC_REGs.v:75$433) has addr 3'110.
      Active bits: 11111111111111111111111111111111
    Port 7 ($memwr$\USR_REGS$NRISC_REGs.v:76$435) has addr 3'111.
      Active bits: 11111111111111111111111111111111
    Port 8 ($memwr$\USR_REGS$NRISC_REGs.v:83$438) has addr \REG_RFD [2:0].
      Active bits: 11111111111111111111111111111111
Consolidating write ports of memory NRISC_REGs.global_REGS by address:
  New clock domain: posedge \clk
    Port 0 ($memwr$\global_REGS$NRISC_REGs.v:63$415) has addr 3'010.
      Active bits: 11111111111111111111111111111111
    Port 1 ($memwr$\global_REGS$NRISC_REGs.v:64$416) has addr 3'011.
      Active bits: 11111111111111111111111111111111
    Port 2 ($memwr$\global_REGS$NRISC_REGs.v:65$417) has addr 3'100.
      Active bits: 11111111111111111111111111111111
    Port 3 ($memwr$\global_REGS$NRISC_REGs.v:66$418) has addr 3'101.
      Active bits: 11111111111111111111111111111111
    Port 4 ($memwr$\global_REGS$NRISC_REGs.v:67$419) has addr 3'110.
      Active bits: 11111111111111111111111111111111
    Port 5 ($memwr$\global_REGS$NRISC_REGs.v:68$420) has addr 3'111.
      Active bits: 11111111111111111111111111111111
    Port 6 ($memwr$\global_REGS$NRISC_REGs.v:80$437) has addr \REG_RFD [2:0].
      Active bits: 11111111111111111111111111111111
Consolidating write ports of memory NRISC_REGs.FIRQ_REGS using sat-based resource sharing:
  Port 0 ($memwr$\FIRQ_REGS$NRISC_REGs.v:69$422) on posedge \clk: considered
  Port 1 ($memwr$\FIRQ_REGS$NRISC_REGs.v:70$424) on posedge \clk: considered
  Port 2 ($memwr$\FIRQ_REGS$NRISC_REGs.v:71$426) on posedge \clk: considered
  Port 3 ($memwr$\FIRQ_REGS$NRISC_REGs.v:72$428) on posedge \clk: considered
  Port 4 ($memwr$\FIRQ_REGS$NRISC_REGs.v:73$430) on posedge \clk: considered
  Port 5 ($memwr$\FIRQ_REGS$NRISC_REGs.v:74$432) on posedge \clk: considered
  Port 6 ($memwr$\FIRQ_REGS$NRISC_REGs.v:75$434) on posedge \clk: considered
  Port 7 ($memwr$\FIRQ_REGS$NRISC_REGs.v:76$436) on posedge \clk: considered
  Port 8 ($memwr$\FIRQ_REGS$NRISC_REGs.v:84$439) on posedge \clk: considered
  Common input cone for all EN signals: 13 cells.
  Size of unconstrained SAT problem: 94 variables, 253 clauses
  According to SAT solver sharing of port 0 with port 1 is not possible.
  According to SAT solver sharing of port 1 with port 2 is not possible.
  According to SAT solver sharing of port 2 with port 3 is not possible.
  According to SAT solver sharing of port 3 with port 4 is not possible.
  According to SAT solver sharing of port 4 with port 5 is not possible.
  According to SAT solver sharing of port 5 with port 6 is not possible.
  According to SAT solver sharing of port 6 with port 7 is not possible.
  According to SAT solver sharing of port 7 with port 8 is not possible.
Consolidating write ports of memory NRISC_REGs.USR_REGS using sat-based resource sharing:
  Port 0 ($memwr$\USR_REGS$NRISC_REGs.v:69$421) on posedge \clk: considered
  Port 1 ($memwr$\USR_REGS$NRISC_REGs.v:70$423) on posedge \clk: considered
  Port 2 ($memwr$\USR_REGS$NRISC_REGs.v:71$425) on posedge \clk: considered
  Port 3 ($memwr$\USR_REGS$NRISC_REGs.v:72$427) on posedge \clk: considered
  Port 4 ($memwr$\USR_REGS$NRISC_REGs.v:73$429) on posedge \clk: considered
  Port 5 ($memwr$\USR_REGS$NRISC_REGs.v:74$431) on posedge \clk: considered
  Port 6 ($memwr$\USR_REGS$NRISC_REGs.v:75$433) on posedge \clk: considered
  Port 7 ($memwr$\USR_REGS$NRISC_REGs.v:76$435) on posedge \clk: considered
  Port 8 ($memwr$\USR_REGS$NRISC_REGs.v:83$438) on posedge \clk: considered
  Common input cone for all EN signals: 13 cells.
  Size of unconstrained SAT problem: 94 variables, 253 clauses
  According to SAT solver sharing of port 0 with port 1 is not possible.
  According to SAT solver sharing of port 1 with port 2 is not possible.
  According to SAT solver sharing of port 2 with port 3 is not possible.
  According to SAT solver sharing of port 3 with port 4 is not possible.
  According to SAT solver sharing of port 4 with port 5 is not possible.
  According to SAT solver sharing of port 5 with port 6 is not possible.
  According to SAT solver sharing of port 6 with port 7 is not possible.
  According to SAT solver sharing of port 7 with port 8 is not possible.
Consolidating write ports of memory NRISC_REGs.global_REGS using sat-based resource sharing:
  Port 0 ($memwr$\global_REGS$NRISC_REGs.v:63$415) on posedge \clk: considered
  Port 1 ($memwr$\global_REGS$NRISC_REGs.v:64$416) on posedge \clk: considered
  Port 2 ($memwr$\global_REGS$NRISC_REGs.v:65$417) on posedge \clk: considered
  Port 3 ($memwr$\global_REGS$NRISC_REGs.v:66$418) on posedge \clk: considered
  Port 4 ($memwr$\global_REGS$NRISC_REGs.v:67$419) on posedge \clk: considered
  Port 5 ($memwr$\global_REGS$NRISC_REGs.v:68$420) on posedge \clk: considered
  Port 6 ($memwr$\global_REGS$NRISC_REGs.v:80$437) on posedge \clk: considered
  Common input cone for all EN signals: 10 cells.
  Size of unconstrained SAT problem: 76 variables, 202 clauses
  According to SAT solver sharing of port 0 with port 1 is not possible.
  According to SAT solver sharing of port 1 with port 2 is not possible.
  According to SAT solver sharing of port 2 with port 3 is not possible.
  According to SAT solver sharing of port 3 with port 4 is not possible.
  According to SAT solver sharing of port 4 with port 5 is not possible.
  According to SAT solver sharing of port 5 with port 6 is not possible.

7.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\FIRQ_REGS' in module `\NRISC_REGs':
  $memwr$\FIRQ_REGS$NRISC_REGs.v:69$422 ($memwr)
  $memwr$\FIRQ_REGS$NRISC_REGs.v:70$424 ($memwr)
  $memwr$\FIRQ_REGS$NRISC_REGs.v:71$426 ($memwr)
  $memwr$\FIRQ_REGS$NRISC_REGs.v:72$428 ($memwr)
  $memwr$\FIRQ_REGS$NRISC_REGs.v:73$430 ($memwr)
  $memwr$\FIRQ_REGS$NRISC_REGs.v:74$432 ($memwr)
  $memwr$\FIRQ_REGS$NRISC_REGs.v:75$434 ($memwr)
  $memwr$\FIRQ_REGS$NRISC_REGs.v:76$436 ($memwr)
  $memwr$\FIRQ_REGS$NRISC_REGs.v:84$439 ($memwr)
  $memrd$\FIRQ_REGS$NRISC_REGs.v:49$385 ($memrd)
  $memrd$\FIRQ_REGS$NRISC_REGs.v:50$388 ($memrd)
  $memrd$\FIRQ_REGS$NRISC_REGs.v:51$391 ($memrd)
  $memrd$\FIRQ_REGS$NRISC_REGs.v:52$394 ($memrd)
  $memrd$\FIRQ_REGS$NRISC_REGs.v:53$397 ($memrd)
  $memrd$\FIRQ_REGS$NRISC_REGs.v:54$400 ($memrd)
  $memrd$\FIRQ_REGS$NRISC_REGs.v:55$403 ($memrd)
  $memrd$\FIRQ_REGS$NRISC_REGs.v:56$406 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\USR_REGS' in module `\NRISC_REGs':
  $memwr$\USR_REGS$NRISC_REGs.v:69$421 ($memwr)
  $memwr$\USR_REGS$NRISC_REGs.v:70$423 ($memwr)
  $memwr$\USR_REGS$NRISC_REGs.v:71$425 ($memwr)
  $memwr$\USR_REGS$NRISC_REGs.v:72$427 ($memwr)
  $memwr$\USR_REGS$NRISC_REGs.v:73$429 ($memwr)
  $memwr$\USR_REGS$NRISC_REGs.v:74$431 ($memwr)
  $memwr$\USR_REGS$NRISC_REGs.v:75$433 ($memwr)
  $memwr$\USR_REGS$NRISC_REGs.v:76$435 ($memwr)
  $memwr$\USR_REGS$NRISC_REGs.v:83$438 ($memwr)
  $memrd$\USR_REGS$NRISC_REGs.v:49$386 ($memrd)
  $memrd$\USR_REGS$NRISC_REGs.v:50$389 ($memrd)
  $memrd$\USR_REGS$NRISC_REGs.v:51$392 ($memrd)
  $memrd$\USR_REGS$NRISC_REGs.v:52$395 ($memrd)
  $memrd$\USR_REGS$NRISC_REGs.v:53$398 ($memrd)
  $memrd$\USR_REGS$NRISC_REGs.v:54$401 ($memrd)
  $memrd$\USR_REGS$NRISC_REGs.v:55$404 ($memrd)
  $memrd$\USR_REGS$NRISC_REGs.v:56$407 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\global_REGS' in module `\NRISC_REGs':
  $memwr$\global_REGS$NRISC_REGs.v:63$415 ($memwr)
  $memwr$\global_REGS$NRISC_REGs.v:64$416 ($memwr)
  $memwr$\global_REGS$NRISC_REGs.v:65$417 ($memwr)
  $memwr$\global_REGS$NRISC_REGs.v:66$418 ($memwr)
  $memwr$\global_REGS$NRISC_REGs.v:67$419 ($memwr)
  $memwr$\global_REGS$NRISC_REGs.v:68$420 ($memwr)
  $memwr$\global_REGS$NRISC_REGs.v:80$437 ($memwr)
  $memrd$\global_REGS$NRISC_REGs.v:43$379 ($memrd)
  $memrd$\global_REGS$NRISC_REGs.v:44$380 ($memrd)
  $memrd$\global_REGS$NRISC_REGs.v:45$381 ($memrd)
  $memrd$\global_REGS$NRISC_REGs.v:46$382 ($memrd)
  $memrd$\global_REGS$NRISC_REGs.v:47$383 ($memrd)
  $memrd$\global_REGS$NRISC_REGs.v:48$384 ($memrd)

7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.15. Executing OPT pass (performing simple optimizations).

7.15.1. Executing OPT_EXPR pass (perform const folding).
Optimized away 1 select inputs of $pmux cell `$procmux$1630' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1956' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1646' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1962' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1908' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$986' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1077' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1454' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1470' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1550' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1566' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1582' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1598' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1614' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1662' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1678' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1890' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1896' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1902' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1914' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1920' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1926' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1932' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1938' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1944' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1950' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1968' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1974' in module `NRISC_InstructionDecoder'.
Optimized away 1 select inputs of $pmux cell `$procmux$1980' in module `NRISC_InstructionDecoder'.
Replacing $mux cell `$procmux$1550' in module `NRISC_InstructionDecoder' with and-gate.
Replacing $mux cell `$procmux$1968' in module `NRISC_InstructionDecoder' with or-gate.
Optimized away 1 select inputs of $pmux cell `$procmux$825' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$773' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$760' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$748' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$724' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$679' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$736' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$712' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$812' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$701' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$799' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$690' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$786' in module `NRISC_PC_ctrl'.
Optimized away 1 select inputs of $pmux cell `$procmux$673' in module `NRISC_PC_ctrl'.
Replacing $not cell `$not$NRISC_PC_ctrl.v:48$471' in module `NRISC_PC_ctrl' with cells using grouped bits:
  New cell `$auto$opt_expr.cc:158:group_cell_inputs$2585': A=$or$NRISC_PC_ctrl.v:48$470_Y
Optimized away 1 select inputs of $pmux cell `$procmux$2049' in module `NRISC_REGs'.
Optimized away 1 select inputs of $pmux cell `$procmux$2066' in module `NRISC_REGs'.
Replacing $mux cell `$procmux$2084' (mux_bool) in module `\NRISC_REGs' with constant driver `$0$memwr$\FIRQ_REGS$NRISC_REGs.v:69$284_EN[31:0]$326 [31] = \rst'.
Replacing $mux cell `$procmux$2284' (mux_bool) in module `\NRISC_REGs' with constant driver `$procmux$2284_Y [31] = $procmux$2285_CTRL'.
Replacing $mux cell `$procmux$2305' in module `NRISC_REGs' with inverter.
Replacing $mux cell `$procmux$2331' (mux_bool) in module `\NRISC_REGs' with constant driver `$procmux$2331_Y [31] = \REG_Interrupt_flag'.
Replacing $mux cell `$procmux$2286' in module `NRISC_REGs' with and-gate.
Replacing $mux cell `$procmux$2307' in module `NRISC_REGs' with and-gate.
Replacing $mux cell `$procmux$2309' in module `NRISC_REGs' with and-gate.
Replacing $mux cell `$procmux$2333' in module `NRISC_REGs' with and-gate.
Replacing $mux cell `$procmux$2335' in module `NRISC_REGs' with and-gate.
Setting undriven signal in NRISC_ULA to undef: \ctrla [2]
Setting undriven signal in NRISC_ULA to undef: \ctrla [0]
Setting undriven signal in NRISC_ULA to undef: \cmd
Setting undriven signal in NRISC_ULA to undef: \ctrla [1]
Replacing $mux cell `$ternary$NRISC_ULA.v:66$16' (mux_bool) in module `\NRISC_ULA' with constant driver `\cin = \ULA_ctrl [0]'.
Replacing $not cell `$not$NRISC_ULA.v:101$41' (1'x) in module `\NRISC_ULA' with constant driver `$not$NRISC_ULA.v:101$41_Y = 1'x'.
Replacing $not cell `$not$NRISC_ULA.v:101$45' (1'x) in module `\NRISC_ULA' with constant driver `$not$NRISC_ULA.v:101$45_Y = 1'x'.
Replacing $not cell `$not$NRISC_ULA.v:102$50' (1'x) in module `\NRISC_ULA' with constant driver `$not$NRISC_ULA.v:102$50_Y = 1'x'.
Replacing $mux cell `$ternary$NRISC_ULA.v:103$54' (mux_bool) in module `\NRISC_ULA' with constant driver `$ternary$NRISC_ULA.v:103$54_Y = $eq$NRISC_ULA.v:103$53_Y'.
Replacing $not cell `$not$NRISC_ULA.v:103$56' (1'x) in module `\NRISC_ULA' with constant driver `$not$NRISC_ULA.v:103$56_Y = 1'x'.
Optimized away 1 select inputs of $pmux cell `$procmux$2353' in module `NRISC_ULA'.
Replacing $mux cell `$ternary$NRISC_ULA.v:108$89' in module `NRISC_ULA' with inverter.
Setting undriven signal in NRISC_UP to undef: \DDATA_CORE_addr [5]
Setting undriven signal in NRISC_UP to undef: \DDATA_CORE_addr [7]
Setting undriven signal in NRISC_UP to undef: \DDATA_CORE_addr [6]
Setting undriven signal in NRISC_UP to undef: \DDATA_CORE_addr [4]
Setting undriven signal in NRISC_UP to undef: \DDATA_CORE_addr [3:0]

7.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 0 cells.

7.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
  removing unused `$logic_not' cell `$procmux$1081_CMP0'.
  removing unused `$not' cell `$procmux$1456_CMP0'.
  removing unused `$not' cell `$procmux$1892_CMP0'.
Finding unused cells or wires in module \NRISC_PC_ctrl..
  removing unused `$logic_not' cell `$procmux$677_CMP0'.
  removing unused `$reduce_or' cell `$auto$opt_reduce.cc:126:opt_mux$2551'.
Finding unused cells or wires in module \NRISC_REGs..
  removing unused `$logic_not' cell `$procmux$2065_CMP0'.
  removing unused `$logic_not' cell `$procmux$2082_CMP0'.
Finding unused cells or wires in module \NRISC_ULA..
  removing unused `$logic_not' cell `$procmux$2361_CMP0'.
  removing unused non-port wire \cmd.
  removing unused non-port wire \ctrla.
  removed 2 unused temporary wires.
Finding unused cells or wires in module \NRISC_UP..

7.15.5. Finished fast OPT passes.

7.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \FIRQ_REGS in module \NRISC_REGs:
  created 8 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 56 $mux cells.
  write interface: 72 write mux blocks.
Mapping memory cell \USR_REGS in module \NRISC_REGs:
  created 8 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 56 $mux cells.
  write interface: 72 write mux blocks.
Mapping memory cell \global_REGS in module \NRISC_REGs:
  created 6 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 42 $mux cells.
  write interface: 42 write mux blocks.

7.17. Executing OPT pass (performing simple optimizations).

7.17.1. Executing OPT_EXPR pass (perform const folding).
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$b$3814 [20]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[1][2][3]$b$3791 [13:0]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[5][2][3]$b$3883 [31:17]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[5][2][3]$a$3882
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$b$3814 [22:21]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[1][2][3]$b$3791 [18:14]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$b$3814 [19]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$b$3814 [31:29]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$a$3813 [3:0]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[3][2][3]$a$3836 [31:19]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$a$3813 [31:22]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[1][2][3]$b$3791 [30:22]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$a$3813 [4]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$b$3814 [28:25]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$a$3813 [5]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$b$3814 [24:23]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$a$3813 [6]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$a$3813 [15:8]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$a$3813 [7]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$a$3813 [17]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[0][2][3]$b$3768 [31:14]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[0][2][3]$a$3767
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$a$3813 [16]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$a$3813 [18]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[1][2][3]$b$3791 [21:19]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$b$3814 [18:0]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[2][2][3]$a$3813 [21:19]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[3][2][3]$b$3837
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[3][2][3]$a$3836 [18:0]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[1][2][3]$b$3791 [31]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[1][2][3]$a$3790 [1:0]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[4][2][3]$b$3860
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[4][2][3]$a$3859
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[1][2][3]$a$3790 [31:2]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[0][2][3]$b$3768 [13:0]
Setting undriven signal in NRISC_REGs to undef: $memory\global_REGS$rdmux[5][2][3]$b$3883 [16:0]
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4028' (3'100, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4029 = 3'010'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4034' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4032' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4030' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4031 = $auto$rtlil.cc:1648:Sub$4029 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4038' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4039 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[1][2][0]$4040' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[1][2][0]$y$4041 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4012' (3'011, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4013 = 3'001'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4018' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4016' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4014' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4015 = $auto$rtlil.cc:1648:Sub$4013 [0]'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$3996' (3'010, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3997 = 3'000'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4002' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4000' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3998' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3999 = $auto$rtlil.cc:1648:Sub$3997 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4006' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4007 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[1][0][0]$4008' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[1][0][0]$y$4009 = 1'0'.
Replacing $mux cell `$memory\global_REGS$wrmux[1][0][0]$4010' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[1][0][0]$y$4011 = \global_REGS[1]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$2780' (isneq) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$2781 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$2770' (empty) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$2771 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2802' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2803 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2804' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2805 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4076' (3'111, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4077 = 3'101'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4082' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4080' in module `NRISC_REGs' with inverter.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[0][2][0]$2611' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[0][1][0]$a$2606 = $memory\FIRQ_REGS$rdmux[0][2][0]$a$2612'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4078' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4079 = $auto$rtlil.cc:1648:Sub$4077 [0]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$2896' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$2897 = \REG_RFD [0]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$2832' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3080' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3081 = \REG_RFD [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$2852' (empty) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$2853 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3066' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3067 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3132' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3133 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[5][7][0]$3654' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[5][7][0]$y$3655 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3052' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3053 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3120' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3121 = 1'1'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$2844' (isneq) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$2845 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3114' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3115 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[5][4][0]$3642' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[5][4][0]$y$3643 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3038' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3039 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3108' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3109 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[5][3][0]$3638' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[5][3][0]$y$3639 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3102' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3103 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[5][2][0]$3634' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[5][2][0]$y$3635 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3024' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3025 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3096' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3097 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[5][1][0]$3630' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[5][1][0]$y$3631 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3090' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3091 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[5][0][0]$3626' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[5][0][0]$y$3627 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[5][0][0]$3628' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[5][0][0]$y$3629 = \USR_REGS[5]'.
Replacing $mux cell `$memory\USR_REGS$wrmux[5][1][0]$3632' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[5][1][0]$y$3633 = $memory\USR_REGS$wrmux[5][0][0]$y$3629'.
Replacing $mux cell `$memory\USR_REGS$wrmux[5][2][0]$3636' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[5][2][0]$y$3637 = $memory\USR_REGS$wrmux[5][1][0]$y$3633'.
Replacing $mux cell `$memory\USR_REGS$wrmux[5][3][0]$3640' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[5][3][0]$y$3641 = $memory\USR_REGS$wrmux[5][2][0]$y$3637'.
Replacing $mux cell `$memory\USR_REGS$wrmux[5][4][0]$3644' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[5][4][0]$y$3645 = $memory\USR_REGS$wrmux[5][3][0]$y$3641'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3126' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3127 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[5][6][0]$3650' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[5][6][0]$y$3651 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[5][6][0]$3652' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[5][6][0]$y$3653 = $memory\USR_REGS$wrmux[5][5][0]$y$3649'.
Replacing $mux cell `$memory\USR_REGS$wrmux[5][7][0]$3656' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[5][7][0]$y$3657 = $memory\USR_REGS$wrmux[5][6][0]$y$3653'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2816' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2817 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2818' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2819 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[0][6][0]$2820' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[0][6][0]$y$2821 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[0][4][0]$2806' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[0][4][0]$y$2807 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2788' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2789 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2796' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2797 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[0][3][0]$2798' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[0][3][0]$y$2799 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2790' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2791 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[0][2][0]$2792' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[0][2][0]$y$2793 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2772' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2773 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2782' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2783 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[0][1][0]$2784' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[0][1][0]$y$2785 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2774' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2775 = 1'1'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[0][1][0]$2786' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[0][1][0]$y$2787 = $memory\FIRQ_REGS$wrmux[0][0][0]$y$2779'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[0][2][0]$2794' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[0][2][0]$y$2795 = $memory\FIRQ_REGS$wrmux[0][1][0]$y$2787'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[0][3][0]$2800' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[0][3][0]$y$2801 = $memory\FIRQ_REGS$wrmux[0][2][0]$y$2795'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[0][4][0]$2808' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[0][4][0]$y$2809 = $memory\FIRQ_REGS$wrmux[0][3][0]$y$2801'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2810' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2811 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[0][5][0]$2812' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[0][5][0]$y$2813 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[0][5][0]$2814' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[0][5][0]$y$2815 = $memory\FIRQ_REGS$wrmux[0][4][0]$y$2809'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[0][6][0]$2822' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[0][6][0]$y$2823 = $memory\FIRQ_REGS$wrmux[0][5][0]$y$2815'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2824' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2825 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4060' (3'110, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4061 = 3'100'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4066' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4064' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4062' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4063 = $auto$rtlil.cc:1648:Sub$4061 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4070' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4071 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[1][4][0]$4072' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[1][4][0]$y$4073 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4044' (3'101, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4045 = 3'011'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4050' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4048' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4046' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4047 = $auto$rtlil.cc:1648:Sub$4045 [0]'.
Replacing $mux cell `$memory\global_REGS$wrmux[1][2][0]$4042' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[1][2][0]$y$4043 = $memory\global_REGS$wrmux[1][1][0]$y$4027'.
Replacing $mux cell `$memory\global_REGS$wrmux[1][4][0]$4074' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[1][4][0]$y$4075 = $memory\global_REGS$wrmux[1][3][0]$y$4059'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[0][2][2]$2617' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[0][1][1]$a$2609 = $memory\FIRQ_REGS$rdmux[0][2][2]$a$2618'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[0][2][3]$2620' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[0][1][1]$b$2610 = $memory\FIRQ_REGS$rdmux[0][2][3]$a$2621'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[0][1][1]$2608' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[0][0][0]$b$2604 = $memory\FIRQ_REGS$rdmux[0][1][1]$a$2609'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3144' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3145 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3152' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3153 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[6][1][0]$3666' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[6][1][0]$y$3667 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3146' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3147 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[6][0][0]$3662' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[6][0][0]$y$3663 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[6][0][0]$3664' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[6][0][0]$y$3665 = \USR_REGS[6]'.
Replacing $mux cell `$memory\USR_REGS$wrmux[6][1][0]$3668' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[6][1][0]$y$3669 = $memory\USR_REGS$wrmux[6][0][0]$y$3665'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3158' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3159 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3160' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3161 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[6][2][0]$3670' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[6][2][0]$y$3671 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2946' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2947 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3012' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3013 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[3][7][0]$3014' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[3][7][0]$y$3015 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3006' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3007 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[3][6][0]$3008' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[3][6][0]$y$3009 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2932' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2933 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3000' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3001 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[3][5][0]$3002' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[3][5][0]$y$3003 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2994' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2995 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[3][4][0]$2996' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[3][4][0]$y$2997 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2918' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2919 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2988' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2989 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2982' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2983 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[3][2][0]$2984' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[3][2][0]$y$2985 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2904' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2905 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2976' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2977 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[3][1][0]$2978' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[3][1][0]$y$2979 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2970' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2971 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[3][0][0]$2972' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[3][0][0]$y$2973 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[3][0][0]$2974' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[3][0][0]$y$2975 = \FIRQ_REGS[3]'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[3][1][0]$2980' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[3][1][0]$y$2981 = $memory\FIRQ_REGS$wrmux[3][0][0]$y$2975'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[3][2][0]$2986' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[3][2][0]$y$2987 = $memory\FIRQ_REGS$wrmux[3][1][0]$y$2981'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[3][4][0]$2998' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[3][4][0]$y$2999 = $memory\FIRQ_REGS$wrmux[3][3][0]$y$2993'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[3][5][0]$3004' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[3][5][0]$y$3005 = $memory\FIRQ_REGS$wrmux[3][4][0]$y$2999'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[3][6][0]$3010' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[3][6][0]$y$3011 = $memory\FIRQ_REGS$wrmux[3][5][0]$y$3005'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[3][7][0]$3016' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[3][7][0]$y$3017 = $memory\FIRQ_REGS$wrmux[3][6][0]$y$3011'.
Replacing $sub cell `$auto$memory_map.cc:196:handle_cell$3746' (3'010, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3747 = 3'000'.
Replacing $mux cell `$memory\global_REGS$rdmux[0][2][1]$3760' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[0][1][0]$b$3753 = $memory\global_REGS$rdmux[0][2][1]$a$3761'.
Replacing $mux cell `$memory\global_REGS$rdmux[0][2][2]$3763' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[0][1][1]$a$3755 = $memory\global_REGS$rdmux[0][2][2]$a$3764'.
Replacing $mux cell `$memory\global_REGS$rdmux[0][2][3]$3766' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[0][1][1]$b$3756 = $memory\global_REGS$rdmux[0][2][3]$a$3767'.
Replacing $sub cell `$auto$memory_map.cc:196:handle_cell$3769' (3'011, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3770 = 3'001'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2878' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2879 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[1][5][0]$3502' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[1][5][0]$y$3503 = 1'0'.
Replacing $mux cell `$memory\global_REGS$rdmux[1][2][0]$3780' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[1][1][0]$a$3775 = $memory\global_REGS$rdmux[1][2][0]$b$3782'.
Replacing $mux cell `$memory\global_REGS$rdmux[1][2][1]$3783' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[1][1][0]$b$3776 = $memory\global_REGS$rdmux[1][2][1]$b$3785'.
Replacing $mux cell `$memory\global_REGS$rdmux[1][1][0]$3774' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[1][0][0]$a$3772 = $memory\global_REGS$rdmux[1][1][0]$a$3775'.
Replacing $mux cell `$memory\global_REGS$rdmux[1][2][2]$3786' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[1][1][1]$a$3778 = $memory\global_REGS$rdmux[1][2][2]$b$3788'.
Replacing $mux cell `$memory\global_REGS$rdmux[1][2][3]$3789' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[1][1][1]$b$3779 = $memory\global_REGS$rdmux[1][2][3]$b$3791'.
Replacing $mux cell `$memory\global_REGS$rdmux[1][1][1]$3777' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[1][0][0]$b$3773 = $memory\global_REGS$rdmux[1][1][1]$a$3778'.
Replacing $mux cell `$memory\global_REGS$rdmux[1][0][0]$3771' (0) in module `\NRISC_REGs' with constant driver `\REGS[3] = $memory\global_REGS$rdmux[1][0][0]$a$3772'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$2960' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$2961 = \REG_RFD [1]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3186' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3187 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3250' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3251 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3244' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3245 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[7][6][0]$3722' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[7][6][0]$y$3723 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3172' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3173 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3238' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3239 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[7][5][0]$3718' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[7][5][0]$y$3719 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3232' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3233 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[7][4][0]$3714' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[7][4][0]$y$3715 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3226' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3227 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[7][3][0]$3710' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[7][3][0]$y$3711 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3220' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3221 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[7][2][0]$3706' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[7][2][0]$y$3707 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3214' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3215 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[7][1][0]$3702' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[7][1][0]$y$3703 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3208' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3209 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[7][0][0]$3698' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[7][0][0]$y$3699 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[7][0][0]$3700' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[7][0][0]$y$3701 = \USR_REGS[7]'.
Replacing $mux cell `$memory\USR_REGS$wrmux[7][1][0]$3704' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[7][1][0]$y$3705 = $memory\USR_REGS$wrmux[7][0][0]$y$3701'.
Replacing $mux cell `$memory\USR_REGS$wrmux[7][2][0]$3708' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[7][2][0]$y$3709 = $memory\USR_REGS$wrmux[7][1][0]$y$3705'.
Replacing $mux cell `$memory\USR_REGS$wrmux[7][3][0]$3712' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[7][3][0]$y$3713 = $memory\USR_REGS$wrmux[7][2][0]$y$3709'.
Replacing $mux cell `$memory\USR_REGS$wrmux[7][4][0]$3716' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[7][4][0]$y$3717 = $memory\USR_REGS$wrmux[7][3][0]$y$3713'.
Replacing $mux cell `$memory\USR_REGS$wrmux[7][5][0]$3720' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[7][5][0]$y$3721 = $memory\USR_REGS$wrmux[7][4][0]$y$3717'.
Replacing $mux cell `$memory\USR_REGS$wrmux[7][6][0]$3724' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[7][6][0]$y$3725 = $memory\USR_REGS$wrmux[7][5][0]$y$3721'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2890' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2891 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[1][7][0]$3510' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[1][7][0]$y$3511 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3054' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3055 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3046' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3047 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[4][3][0]$3048' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[4][3][0]$y$3049 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3040' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3041 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[4][2][0]$3042' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[4][2][0]$y$3043 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3032' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3033 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[4][1][0]$3034' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[4][1][0]$y$3035 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3026' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3027 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[4][0][0]$3028' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[4][0][0]$y$3029 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[4][0][0]$3030' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[4][0][0]$y$3031 = \FIRQ_REGS[4]'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[4][1][0]$3036' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[4][1][0]$y$3037 = $memory\FIRQ_REGS$wrmux[4][0][0]$y$3031'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[4][2][0]$3044' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[4][2][0]$y$3045 = $memory\FIRQ_REGS$wrmux[4][1][0]$y$3037'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[4][3][0]$3050' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[4][3][0]$y$3051 = $memory\FIRQ_REGS$wrmux[4][2][0]$y$3045'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2872' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2873 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[1][4][0]$3498' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[1][4][0]$y$3499 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2866' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2867 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[1][3][0]$3494' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[1][3][0]$y$3495 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2860' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2861 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[1][2][0]$3490' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[1][2][0]$y$3491 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2854' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2855 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2846' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2847 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[1][0][0]$3482' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[1][0][0]$y$3483 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[1][0][0]$3484' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[1][0][0]$y$3485 = \USR_REGS[1]'.
Replacing $mux cell `$memory\USR_REGS$wrmux[1][2][0]$3492' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[1][2][0]$y$3493 = $memory\USR_REGS$wrmux[1][1][0]$y$3489'.
Replacing $mux cell `$memory\USR_REGS$wrmux[1][3][0]$3496' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[1][3][0]$y$3497 = $memory\USR_REGS$wrmux[1][2][0]$y$3493'.
Replacing $mux cell `$memory\USR_REGS$wrmux[1][4][0]$3500' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[1][4][0]$y$3501 = $memory\USR_REGS$wrmux[1][3][0]$y$3497'.
Replacing $mux cell `$memory\USR_REGS$wrmux[1][5][0]$3504' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[1][5][0]$y$3505 = $memory\USR_REGS$wrmux[1][4][0]$y$3501'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2884' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2885 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[1][6][0]$3506' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[1][6][0]$y$3507 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[5][2][0]$2716' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[5][1][0]$a$2711 = $memory\FIRQ_REGS$rdmux[5][2][0]$b$2718'.
Replacing $sub cell `$auto$memory_map.cc:196:handle_cell$3792' (3'100, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3793 = 3'010'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3068' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3069 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$2834' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$2830' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2954' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2955 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[2][7][0]$2956' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[2][7][0]$y$2957 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2920' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2921 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2906' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2907 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[2][0][0]$2908' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[2][0][0]$y$2909 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[2][0][0]$2910' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[2][0][0]$y$2911 = \FIRQ_REGS[2]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2912' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2913 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[2][1][0]$2914' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[2][1][0]$y$2915 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[2][1][0]$2916' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[2][1][0]$y$2917 = $memory\FIRQ_REGS$wrmux[2][0][0]$y$2911'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2926' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2927 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[2][3][0]$2928' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[2][3][0]$y$2929 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[2][3][0]$2930' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[2][3][0]$y$2931 = $memory\FIRQ_REGS$wrmux[2][2][0]$y$2925'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2934' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2935 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[2][4][0]$2936' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[2][4][0]$y$2937 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[2][4][0]$2938' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[2][4][0]$y$2939 = $memory\FIRQ_REGS$wrmux[2][3][0]$y$2931'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2940' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2941 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[2][5][0]$2942' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[2][5][0]$y$2943 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[2][5][0]$2944' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[2][5][0]$y$2945 = $memory\FIRQ_REGS$wrmux[2][4][0]$y$2939'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$2948' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$2949 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[2][6][0]$2950' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[2][6][0]$y$2951 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[2][6][0]$2952' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[2][6][0]$y$2953 = $memory\FIRQ_REGS$wrmux[2][5][0]$y$2945'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[2][7][0]$2958' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[2][7][0]$y$2959 = $memory\FIRQ_REGS$wrmux[2][6][0]$y$2953'.
Replacing $mux cell `$memory\USR_REGS$wrmux[1][6][0]$3508' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[1][6][0]$y$3509 = $memory\USR_REGS$wrmux[1][5][0]$y$3505'.
Replacing $mux cell `$memory\global_REGS$rdmux[2][2][3]$3812' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[2][1][1]$b$3802 = $memory\global_REGS$rdmux[2][2][3]$a$3813'.
Replacing $mux cell `$memory\global_REGS$rdmux[2][2][2]$3809' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[2][1][1]$a$3801 = $memory\global_REGS$rdmux[2][2][2]$a$3810'.
Replacing $mux cell `$memory\global_REGS$rdmux[2][1][1]$3800' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[2][0][0]$b$3796 = $memory\global_REGS$rdmux[2][1][1]$b$3802'.
Replacing $mux cell `$memory\global_REGS$rdmux[2][2][1]$3806' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[2][1][0]$b$3799 = $memory\global_REGS$rdmux[2][2][1]$a$3807'.
Replacing $mux cell `$memory\global_REGS$rdmux[2][2][0]$3803' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[2][1][0]$a$3798 = $memory\global_REGS$rdmux[2][2][0]$a$3804'.
Replacing $mux cell `$memory\global_REGS$rdmux[2][1][0]$3797' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[2][0][0]$a$3795 = $memory\global_REGS$rdmux[2][1][0]$b$3799'.
Replacing $mux cell `$memory\global_REGS$rdmux[2][0][0]$3794' (0) in module `\NRISC_REGs' with constant driver `\REGS[4] = $memory\global_REGS$rdmux[2][0][0]$a$3795'.
Replacing $mux cell `$memory\global_REGS$rdmux[0][2][0]$3757' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[0][1][0]$a$3752 = $memory\global_REGS$rdmux[0][2][0]$a$3758'.
Replacing $mux cell `$memory\global_REGS$rdmux[0][1][0]$3751' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[0][0][0]$a$3749 = $memory\global_REGS$rdmux[0][1][0]$a$3752'.
Replacing $mux cell `$memory\global_REGS$rdmux[0][1][1]$3754' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[0][0][0]$b$3750 = $memory\global_REGS$rdmux[0][1][1]$a$3755'.
Replacing $mux cell `$memory\global_REGS$rdmux[0][0][0]$3748' (0) in module `\NRISC_REGs' with constant driver `\REGS[2] = $memory\global_REGS$rdmux[0][0][0]$a$3749'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4444' (3'010, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4445 = 3'000'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4446' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4447 = $auto$rtlil.cc:1648:Sub$4445 [0]'.
Replacing $and cell `$memory\FIRQ_REGS$wren[1][6][0]$2886' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[1][6][0]$y$2887 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[1][3][0]$2868' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[1][3][0]$y$2869 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[1][0][0]$2848' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[1][0][0]$y$2849 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[1][0][0]$2850' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[1][0][0]$y$2851 = \FIRQ_REGS[1]'.
Replacing $and cell `$memory\FIRQ_REGS$wren[1][2][0]$2862' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[1][2][0]$y$2863 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[1][2][0]$2864' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[1][2][0]$y$2865 = $memory\FIRQ_REGS$wrmux[1][1][0]$y$2859'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[1][3][0]$2870' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[1][3][0]$y$2871 = $memory\FIRQ_REGS$wrmux[1][2][0]$y$2865'.
Replacing $and cell `$memory\FIRQ_REGS$wren[1][4][0]$2874' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[1][4][0]$y$2875 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[1][4][0]$2876' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[1][4][0]$y$2877 = $memory\FIRQ_REGS$wrmux[1][3][0]$y$2871'.
Replacing $and cell `$memory\FIRQ_REGS$wren[1][5][0]$2880' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[1][5][0]$y$2881 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[1][5][0]$2882' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[1][5][0]$y$2883 = $memory\FIRQ_REGS$wrmux[1][4][0]$y$2877'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[1][6][0]$2888' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[1][6][0]$y$2889 = $memory\FIRQ_REGS$wrmux[1][5][0]$y$2883'.
Replacing $and cell `$memory\FIRQ_REGS$wren[1][7][0]$2892' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[1][7][0]$y$2893 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[1][7][0]$2894' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[1][7][0]$y$2895 = $memory\FIRQ_REGS$wrmux[1][6][0]$y$2889'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[4][2][2]$2701' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[4][1][1]$a$2693 = $memory\FIRQ_REGS$rdmux[4][2][2]$a$2702'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[4][2][3]$2704' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[4][1][1]$b$2694 = $memory\FIRQ_REGS$rdmux[4][2][3]$a$2705'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[4][1][1]$2692' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[4][0][0]$b$2688 = $memory\FIRQ_REGS$rdmux[4][1][1]$a$2693'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[4][2][0]$2695' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[4][1][0]$a$2690 = $memory\FIRQ_REGS$rdmux[4][2][0]$a$2696'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[4][2][1]$2698' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[4][1][0]$b$2691 = $memory\FIRQ_REGS$rdmux[4][2][1]$a$2699'.
Replacing $and cell `$memory\FIRQ_REGS$wren[0][7][0]$2826' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[0][7][0]$y$2827 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[0][7][0]$2828' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[0][7][0]$y$2829 = $memory\FIRQ_REGS$wrmux[0][6][0]$y$2823'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[3][2][1]$2677' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[3][1][0]$b$2670 = $memory\FIRQ_REGS$rdmux[3][2][1]$b$2679'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[3][2][2]$2680' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[3][1][1]$a$2672 = $memory\FIRQ_REGS$rdmux[3][2][2]$b$2682'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[3][2][3]$2683' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[3][1][1]$b$2673 = $memory\FIRQ_REGS$rdmux[3][2][3]$b$2685'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[4][1][0]$2689' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[4][0][0]$a$2687 = $memory\FIRQ_REGS$rdmux[4][1][0]$a$2690'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[4][0][0]$2686' (1) in module `\NRISC_REGs' with constant driver `$memrd$\FIRQ_REGS$NRISC_REGs.v:53$397_DATA = $memory\FIRQ_REGS$rdmux[4][0][0]$b$2688'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4434' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4435 = $auto$rtlil.cc:1648:Sub$4429 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4432' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4430' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4412' (3'111, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4413 = 3'101'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4418' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4419 = $auto$rtlil.cc:1648:Sub$4413 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4416' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4414' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4396' (3'110, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4397 = 3'100'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4402' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4403 = $auto$rtlil.cc:1648:Sub$4397 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4400' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4398' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4380' (3'101, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4381 = 3'011'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4386' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4387 = $auto$rtlil.cc:1648:Sub$4381 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4384' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4388' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4389 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4382' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4390' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4391 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[4][3][0]$4392' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[4][3][0]$y$4393 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4364' (3'100, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4365 = 3'010'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4370' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4371 = $auto$rtlil.cc:1648:Sub$4365 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4368' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4372' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4373 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4366' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4374' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4375 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[4][2][0]$4376' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[4][2][0]$y$4377 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4348' (3'011, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4349 = 3'001'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4354' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4355 = $auto$rtlil.cc:1648:Sub$4349 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4352' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4356' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4357 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4350' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4358' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4359 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[4][1][0]$4360' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[4][1][0]$y$4361 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4332' (3'010, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4333 = 3'000'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4338' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4339 = $auto$rtlil.cc:1648:Sub$4333 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4336' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4340' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4341 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4334' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4342' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4343 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[4][0][0]$4344' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[4][0][0]$y$4345 = 1'0'.
Replacing $mux cell `$memory\global_REGS$wrmux[4][0][0]$4346' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[4][0][0]$y$4347 = \global_REGS[4]'.
Replacing $mux cell `$memory\global_REGS$wrmux[4][1][0]$4362' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[4][1][0]$y$4363 = $memory\global_REGS$wrmux[4][0][0]$y$4347'.
Replacing $mux cell `$memory\global_REGS$wrmux[4][2][0]$4378' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[4][2][0]$y$4379 = $memory\global_REGS$wrmux[4][1][0]$y$4363'.
Replacing $mux cell `$memory\global_REGS$wrmux[4][3][0]$4394' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[4][3][0]$y$4395 = $memory\global_REGS$wrmux[4][2][0]$y$4379'.
Replacing $mux cell `$memory\USR_REGS$rdmux[0][2][0]$3287' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[0][1][0]$a$3282 = $memory\USR_REGS$rdmux[0][2][0]$a$3288'.
Replacing $mux cell `$memory\USR_REGS$rdmux[0][2][1]$3290' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[0][1][0]$b$3283 = $memory\USR_REGS$rdmux[0][2][1]$a$3291'.
Replacing $mux cell `$memory\USR_REGS$rdmux[0][1][0]$3281' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[0][0][0]$a$3279 = $memory\USR_REGS$rdmux[0][1][0]$a$3282'.
Replacing $mux cell `$memory\USR_REGS$rdmux[0][2][2]$3293' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[0][1][1]$a$3285 = $memory\USR_REGS$rdmux[0][2][2]$a$3294'.
Replacing $mux cell `$memory\USR_REGS$rdmux[0][2][3]$3296' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[0][1][1]$b$3286 = $memory\USR_REGS$rdmux[0][2][3]$a$3297'.
Replacing $mux cell `$memory\USR_REGS$rdmux[0][1][1]$3284' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[0][0][0]$b$3280 = $memory\USR_REGS$rdmux[0][1][1]$a$3285'.
Replacing $mux cell `$memory\USR_REGS$rdmux[0][0][0]$3278' (0) in module `\NRISC_REGs' with constant driver `$memrd$\USR_REGS$NRISC_REGs.v:49$386_DATA = $memory\USR_REGS$rdmux[0][0][0]$a$3279'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[0][2][1]$2614' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[0][1][0]$b$2607 = $memory\FIRQ_REGS$rdmux[0][2][1]$a$2615'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[0][1][0]$2605' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[0][0][0]$a$2603 = $memory\FIRQ_REGS$rdmux[0][1][0]$a$2606'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[0][0][0]$2602' (0) in module `\NRISC_REGs' with constant driver `$memrd$\FIRQ_REGS$NRISC_REGs.v:49$385_DATA = $memory\FIRQ_REGS$rdmux[0][0][0]$a$2603'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[2][2][2]$2659' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[2][1][1]$a$2651 = $memory\FIRQ_REGS$rdmux[2][2][2]$a$2660'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[2][2][3]$2662' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[2][1][1]$b$2652 = $memory\FIRQ_REGS$rdmux[2][2][3]$a$2663'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[2][1][1]$2650' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[2][0][0]$b$2646 = $memory\FIRQ_REGS$rdmux[2][1][1]$b$2652'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[1][2][3]$2641' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[1][1][1]$b$2631 = $memory\FIRQ_REGS$rdmux[1][2][3]$b$2643'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[1][2][2]$2638' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[1][1][1]$a$2630 = $memory\FIRQ_REGS$rdmux[1][2][2]$b$2640'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[1][1][1]$2629' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[1][0][0]$b$2625 = $memory\FIRQ_REGS$rdmux[1][1][1]$a$2630'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[1][2][0]$2632' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[1][1][0]$a$2627 = $memory\FIRQ_REGS$rdmux[1][2][0]$b$2634'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[1][2][1]$2635' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[1][1][0]$b$2628 = $memory\FIRQ_REGS$rdmux[1][2][1]$b$2637'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[1][1][0]$2626' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[1][0][0]$a$2624 = $memory\FIRQ_REGS$rdmux[1][1][0]$a$2627'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[1][0][0]$2623' (0) in module `\NRISC_REGs' with constant driver `$memrd$\FIRQ_REGS$NRISC_REGs.v:50$388_DATA = $memory\FIRQ_REGS$rdmux[1][0][0]$a$2624'.
Replacing $mux cell `$memory\USR_REGS$rdmux[1][2][0]$3308' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[1][1][0]$a$3303 = $memory\USR_REGS$rdmux[1][2][0]$b$3310'.
Replacing $mux cell `$memory\USR_REGS$rdmux[1][2][1]$3311' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[1][1][0]$b$3304 = $memory\USR_REGS$rdmux[1][2][1]$b$3313'.
Replacing $mux cell `$memory\USR_REGS$rdmux[1][1][0]$3302' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[1][0][0]$a$3300 = $memory\USR_REGS$rdmux[1][1][0]$a$3303'.
Replacing $mux cell `$memory\USR_REGS$rdmux[1][2][2]$3314' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[1][1][1]$a$3306 = $memory\USR_REGS$rdmux[1][2][2]$b$3316'.
Replacing $mux cell `$memory\USR_REGS$rdmux[1][2][3]$3317' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[1][1][1]$b$3307 = $memory\USR_REGS$rdmux[1][2][3]$b$3319'.
Replacing $mux cell `$memory\USR_REGS$rdmux[1][1][1]$3305' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[1][0][0]$b$3301 = $memory\USR_REGS$rdmux[1][1][1]$a$3306'.
Replacing $mux cell `$memory\USR_REGS$rdmux[1][0][0]$3299' (0) in module `\NRISC_REGs' with constant driver `$memrd$\USR_REGS$NRISC_REGs.v:50$389_DATA = $memory\USR_REGS$rdmux[1][0][0]$a$3300'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[2][2][1]$2656' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[2][1][0]$b$2649 = $memory\FIRQ_REGS$rdmux[2][2][1]$a$2657'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[2][2][0]$2653' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[2][1][0]$a$2648 = $memory\FIRQ_REGS$rdmux[2][2][0]$a$2654'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[2][1][0]$2647' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[2][0][0]$a$2645 = $memory\FIRQ_REGS$rdmux[2][1][0]$b$2649'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[2][0][0]$2644' (0) in module `\NRISC_REGs' with constant driver `$memrd$\FIRQ_REGS$NRISC_REGs.v:51$391_DATA = $memory\FIRQ_REGS$rdmux[2][0][0]$a$2645'.
Replacing $mux cell `$memory\USR_REGS$rdmux[2][2][0]$3329' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[2][1][0]$a$3324 = $memory\USR_REGS$rdmux[2][2][0]$a$3330'.
Replacing $mux cell `$memory\USR_REGS$rdmux[2][2][1]$3332' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[2][1][0]$b$3325 = $memory\USR_REGS$rdmux[2][2][1]$a$3333'.
Replacing $mux cell `$memory\USR_REGS$rdmux[2][1][0]$3323' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[2][0][0]$a$3321 = $memory\USR_REGS$rdmux[2][1][0]$b$3325'.
Replacing $mux cell `$memory\USR_REGS$rdmux[2][2][2]$3335' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[2][1][1]$a$3327 = $memory\USR_REGS$rdmux[2][2][2]$a$3336'.
Replacing $mux cell `$memory\USR_REGS$rdmux[2][2][3]$3338' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[2][1][1]$b$3328 = $memory\USR_REGS$rdmux[2][2][3]$a$3339'.
Replacing $mux cell `$memory\USR_REGS$rdmux[2][1][1]$3326' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[2][0][0]$b$3322 = $memory\USR_REGS$rdmux[2][1][1]$b$3328'.
Replacing $mux cell `$memory\USR_REGS$rdmux[2][0][0]$3320' (0) in module `\NRISC_REGs' with constant driver `$memrd$\USR_REGS$NRISC_REGs.v:51$392_DATA = $memory\USR_REGS$rdmux[2][0][0]$a$3321'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[3][1][1]$2671' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[3][0][0]$b$2667 = $memory\FIRQ_REGS$rdmux[3][1][1]$b$2673'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[3][2][0]$2674' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[3][1][0]$a$2669 = $memory\FIRQ_REGS$rdmux[3][2][0]$b$2676'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[3][1][0]$2668' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[3][0][0]$a$2666 = $memory\FIRQ_REGS$rdmux[3][1][0]$b$2670'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[3][0][0]$2665' (0) in module `\NRISC_REGs' with constant driver `$memrd$\FIRQ_REGS$NRISC_REGs.v:52$394_DATA = $memory\FIRQ_REGS$rdmux[3][0][0]$a$2666'.
Replacing $mux cell `$memory\USR_REGS$rdmux[3][2][0]$3350' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[3][1][0]$a$3345 = $memory\USR_REGS$rdmux[3][2][0]$b$3352'.
Replacing $mux cell `$memory\USR_REGS$rdmux[3][2][1]$3353' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[3][1][0]$b$3346 = $memory\USR_REGS$rdmux[3][2][1]$b$3355'.
Replacing $mux cell `$memory\USR_REGS$rdmux[3][1][0]$3344' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[3][0][0]$a$3342 = $memory\USR_REGS$rdmux[3][1][0]$b$3346'.
Replacing $mux cell `$memory\USR_REGS$rdmux[3][2][2]$3356' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[3][1][1]$a$3348 = $memory\USR_REGS$rdmux[3][2][2]$b$3358'.
Replacing $mux cell `$memory\USR_REGS$rdmux[3][2][3]$3359' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[3][1][1]$b$3349 = $memory\USR_REGS$rdmux[3][2][3]$b$3361'.
Replacing $mux cell `$memory\USR_REGS$rdmux[3][1][1]$3347' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[3][0][0]$b$3343 = $memory\USR_REGS$rdmux[3][1][1]$b$3349'.
Replacing $mux cell `$memory\USR_REGS$rdmux[3][0][0]$3341' (0) in module `\NRISC_REGs' with constant driver `$memrd$\USR_REGS$NRISC_REGs.v:52$395_DATA = $memory\USR_REGS$rdmux[3][0][0]$a$3342'.
Replacing $mux cell `$memory\USR_REGS$rdmux[4][2][0]$3371' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[4][1][0]$a$3366 = $memory\USR_REGS$rdmux[4][2][0]$a$3372'.
Replacing $mux cell `$memory\USR_REGS$rdmux[4][2][1]$3374' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[4][1][0]$b$3367 = $memory\USR_REGS$rdmux[4][2][1]$a$3375'.
Replacing $mux cell `$memory\USR_REGS$rdmux[4][1][0]$3365' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[4][0][0]$a$3363 = $memory\USR_REGS$rdmux[4][1][0]$a$3366'.
Replacing $mux cell `$memory\USR_REGS$rdmux[4][2][2]$3377' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[4][1][1]$a$3369 = $memory\USR_REGS$rdmux[4][2][2]$a$3378'.
Replacing $mux cell `$memory\USR_REGS$rdmux[4][2][3]$3380' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[4][1][1]$b$3370 = $memory\USR_REGS$rdmux[4][2][3]$a$3381'.
Replacing $mux cell `$memory\USR_REGS$rdmux[4][1][1]$3368' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[4][0][0]$b$3364 = $memory\USR_REGS$rdmux[4][1][1]$a$3369'.
Replacing $mux cell `$memory\USR_REGS$rdmux[4][0][0]$3362' (1) in module `\NRISC_REGs' with constant driver `$memrd$\USR_REGS$NRISC_REGs.v:53$398_DATA = $memory\USR_REGS$rdmux[4][0][0]$b$3364'.
Replacing $mux cell `$memory\USR_REGS$rdmux[5][2][0]$3392' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[5][1][0]$a$3387 = $memory\USR_REGS$rdmux[5][2][0]$b$3394'.
Replacing $mux cell `$memory\USR_REGS$rdmux[5][2][1]$3395' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[5][1][0]$b$3388 = $memory\USR_REGS$rdmux[5][2][1]$b$3397'.
Replacing $mux cell `$memory\USR_REGS$rdmux[5][1][0]$3386' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[5][0][0]$a$3384 = $memory\USR_REGS$rdmux[5][1][0]$a$3387'.
Replacing $mux cell `$memory\USR_REGS$rdmux[5][2][2]$3398' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[5][1][1]$a$3390 = $memory\USR_REGS$rdmux[5][2][2]$b$3400'.
Replacing $mux cell `$memory\USR_REGS$rdmux[5][2][3]$3401' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[5][1][1]$b$3391 = $memory\USR_REGS$rdmux[5][2][3]$b$3403'.
Replacing $mux cell `$memory\USR_REGS$rdmux[5][1][1]$3389' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[5][0][0]$b$3385 = $memory\USR_REGS$rdmux[5][1][1]$a$3390'.
Replacing $mux cell `$memory\USR_REGS$rdmux[5][0][0]$3383' (1) in module `\NRISC_REGs' with constant driver `$memrd$\USR_REGS$NRISC_REGs.v:54$401_DATA = $memory\USR_REGS$rdmux[5][0][0]$b$3385'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[5][2][2]$2722' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[5][1][1]$a$2714 = $memory\FIRQ_REGS$rdmux[5][2][2]$b$2724'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[5][2][3]$2725' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[5][1][1]$b$2715 = $memory\FIRQ_REGS$rdmux[5][2][3]$b$2727'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[5][1][1]$2713' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[5][0][0]$b$2709 = $memory\FIRQ_REGS$rdmux[5][1][1]$a$2714'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[5][2][1]$2719' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[5][1][0]$b$2712 = $memory\FIRQ_REGS$rdmux[5][2][1]$b$2721'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[5][1][0]$2710' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[5][0][0]$a$2708 = $memory\FIRQ_REGS$rdmux[5][1][0]$a$2711'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[5][0][0]$2707' (1) in module `\NRISC_REGs' with constant driver `$memrd$\FIRQ_REGS$NRISC_REGs.v:54$400_DATA = $memory\FIRQ_REGS$rdmux[5][0][0]$b$2709'.
Replacing $mux cell `$memory\USR_REGS$rdmux[6][2][0]$3413' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[6][1][0]$a$3408 = $memory\USR_REGS$rdmux[6][2][0]$a$3414'.
Replacing $mux cell `$memory\USR_REGS$rdmux[6][2][1]$3416' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[6][1][0]$b$3409 = $memory\USR_REGS$rdmux[6][2][1]$a$3417'.
Replacing $mux cell `$memory\USR_REGS$rdmux[6][1][0]$3407' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[6][0][0]$a$3405 = $memory\USR_REGS$rdmux[6][1][0]$b$3409'.
Replacing $mux cell `$memory\USR_REGS$rdmux[6][2][2]$3419' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[6][1][1]$a$3411 = $memory\USR_REGS$rdmux[6][2][2]$a$3420'.
Replacing $mux cell `$memory\USR_REGS$rdmux[6][2][3]$3422' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[6][1][1]$b$3412 = $memory\USR_REGS$rdmux[6][2][3]$a$3423'.
Replacing $mux cell `$memory\USR_REGS$rdmux[6][1][1]$3410' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[6][0][0]$b$3406 = $memory\USR_REGS$rdmux[6][1][1]$b$3412'.
Replacing $mux cell `$memory\USR_REGS$rdmux[6][0][0]$3404' (1) in module `\NRISC_REGs' with constant driver `$memrd$\USR_REGS$NRISC_REGs.v:55$404_DATA = $memory\USR_REGS$rdmux[6][0][0]$b$3406'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[6][2][3]$2746' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[6][1][1]$b$2736 = $memory\FIRQ_REGS$rdmux[6][2][3]$a$2747'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[6][2][2]$2743' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[6][1][1]$a$2735 = $memory\FIRQ_REGS$rdmux[6][2][2]$a$2744'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[6][1][1]$2734' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[6][0][0]$b$2730 = $memory\FIRQ_REGS$rdmux[6][1][1]$b$2736'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[6][2][1]$2740' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[6][1][0]$b$2733 = $memory\FIRQ_REGS$rdmux[6][2][1]$a$2741'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[6][2][0]$2737' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[6][1][0]$a$2732 = $memory\FIRQ_REGS$rdmux[6][2][0]$a$2738'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[6][1][0]$2731' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[6][0][0]$a$2729 = $memory\FIRQ_REGS$rdmux[6][1][0]$b$2733'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[6][0][0]$2728' (1) in module `\NRISC_REGs' with constant driver `$memrd$\FIRQ_REGS$NRISC_REGs.v:55$403_DATA = $memory\FIRQ_REGS$rdmux[6][0][0]$b$2730'.
Replacing $mux cell `$memory\USR_REGS$rdmux[7][2][0]$3434' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[7][1][0]$a$3429 = $memory\USR_REGS$rdmux[7][2][0]$b$3436'.
Replacing $mux cell `$memory\USR_REGS$rdmux[7][2][1]$3437' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[7][1][0]$b$3430 = $memory\USR_REGS$rdmux[7][2][1]$b$3439'.
Replacing $mux cell `$memory\USR_REGS$rdmux[7][1][0]$3428' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[7][0][0]$a$3426 = $memory\USR_REGS$rdmux[7][1][0]$b$3430'.
Replacing $mux cell `$memory\USR_REGS$rdmux[7][2][3]$3443' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[7][1][1]$b$3433 = $memory\USR_REGS$rdmux[7][2][3]$b$3445'.
Replacing $mux cell `$memory\USR_REGS$rdmux[7][2][2]$3440' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[7][1][1]$a$3432 = $memory\USR_REGS$rdmux[7][2][2]$b$3442'.
Replacing $mux cell `$memory\USR_REGS$rdmux[7][1][1]$3431' (1) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$rdmux[7][0][0]$b$3427 = $memory\USR_REGS$rdmux[7][1][1]$b$3433'.
Replacing $mux cell `$memory\USR_REGS$rdmux[7][0][0]$3425' (1) in module `\NRISC_REGs' with constant driver `$memrd$\USR_REGS$NRISC_REGs.v:56$407_DATA = $memory\USR_REGS$rdmux[7][0][0]$b$3427'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[7][2][3]$2767' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[7][1][1]$b$2757 = $memory\FIRQ_REGS$rdmux[7][2][3]$b$2769'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[7][2][2]$2764' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[7][1][1]$a$2756 = $memory\FIRQ_REGS$rdmux[7][2][2]$b$2766'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[7][1][1]$2755' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[7][0][0]$b$2751 = $memory\FIRQ_REGS$rdmux[7][1][1]$b$2757'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[7][2][0]$2758' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[7][1][0]$a$2753 = $memory\FIRQ_REGS$rdmux[7][2][0]$b$2760'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[7][2][1]$2761' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[7][1][0]$b$2754 = $memory\FIRQ_REGS$rdmux[7][2][1]$b$2763'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[7][1][0]$2752' (1) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$rdmux[7][0][0]$a$2750 = $memory\FIRQ_REGS$rdmux[7][1][0]$b$2754'.
Replacing $mux cell `$memory\FIRQ_REGS$rdmux[7][0][0]$2749' (1) in module `\NRISC_REGs' with constant driver `$memrd$\FIRQ_REGS$NRISC_REGs.v:56$406_DATA = $memory\FIRQ_REGS$rdmux[7][0][0]$b$2751'.
Replacing $and cell `$memory\FIRQ_REGS$wren[4][6][0]$3070' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[4][6][0]$y$3071 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3060' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3061 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[4][5][0]$3062' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[4][5][0]$y$3063 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[4][5][0]$3064' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[4][5][0]$y$3065 = $memory\FIRQ_REGS$wrmux[4][4][0]$y$3059'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[4][6][0]$3072' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[4][6][0]$y$3073 = $memory\FIRQ_REGS$wrmux[4][5][0]$y$3065'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3074' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3075 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4236' (3'011, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4237 = 3'001'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4242' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4240' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4241 = $auto$rtlil.cc:1648:Sub$4237 [1]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4244' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4245 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4238' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4239 = $auto$rtlil.cc:1648:Sub$4237 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4246' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4247 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4220' (3'010, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4221 = 3'000'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4226' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4224' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4225 = $auto$rtlil.cc:1648:Sub$4221 [1]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4228' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4229 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4222' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4223 = $auto$rtlil.cc:1648:Sub$4221 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4230' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4231 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[3][0][0]$4232' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[3][0][0]$y$4233 = 1'0'.
Replacing $mux cell `$memory\global_REGS$wrmux[3][0][0]$4234' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[3][0][0]$y$4235 = \global_REGS[3]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4210' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4208' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4209 = $auto$rtlil.cc:1648:Sub$4205 [1]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4206' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4188' (3'111, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4189 = 3'101'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4194' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4192' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4193 = $auto$rtlil.cc:1648:Sub$4189 [1]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4196' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4197 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4190' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4198' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4199 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[2][5][0]$4200' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[2][5][0]$y$4201 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4172' (3'110, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4173 = 3'100'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4178' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4176' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4177 = $auto$rtlil.cc:1648:Sub$4173 [1]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4180' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4181 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4174' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4182' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4183 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[2][4][0]$4184' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[2][4][0]$y$4185 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4156' (3'101, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4157 = 3'011'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4162' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4160' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4161 = $auto$rtlil.cc:1648:Sub$4157 [1]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4158' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4140' (3'100, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4141 = 3'010'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4146' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4144' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4145 = $auto$rtlil.cc:1648:Sub$4141 [1]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4142' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4124' (3'011, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4125 = 3'001'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4130' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4128' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4129 = $auto$rtlil.cc:1648:Sub$4125 [1]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4132' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4133 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4126' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4134' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4135 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[2][1][0]$4136' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[2][1][0]$y$4137 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4108' (3'010, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4109 = 3'000'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4114' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4112' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4113 = $auto$rtlil.cc:1648:Sub$4109 [1]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4116' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4117 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4110' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4118' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4119 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[2][0][0]$4120' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[2][0][0]$y$4121 = 1'0'.
Replacing $mux cell `$memory\global_REGS$wrmux[2][0][0]$4122' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[2][0][0]$y$4123 = \global_REGS[2]'.
Replacing $mux cell `$memory\global_REGS$wrmux[2][1][0]$4138' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[2][1][0]$y$4139 = $memory\global_REGS$wrmux[2][0][0]$y$4123'.
Replacing $mux cell `$memory\global_REGS$wrmux[2][4][0]$4186' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[2][4][0]$y$4187 = $memory\global_REGS$wrmux[2][3][0]$y$4171'.
Replacing $mux cell `$memory\global_REGS$wrmux[2][5][0]$4202' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[2][5][0]$y$4203 = $memory\global_REGS$wrmux[2][4][0]$y$4187'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4098' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4096' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4094' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4095 = $auto$rtlil.cc:1648:Sub$4093 [0]'.
Replacing $and cell `$memory\global_REGS$wren[3][1][0]$4248' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[3][1][0]$y$4249 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4450' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4451 = $auto$rtlil.cc:1648:Sub$4445 [2]'.
Replacing $and cell `$memory\FIRQ_REGS$wren[4][7][0]$3076' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[4][7][0]$y$3077 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[4][7][0]$3078' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[4][7][0]$y$3079 = $memory\FIRQ_REGS$wrmux[4][6][0]$y$3073'.
Replacing $mux cell `$memory\USR_REGS$wrmux[1][7][0]$3512' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[1][7][0]$y$3513 = $memory\USR_REGS$wrmux[1][6][0]$y$3509'.
Replacing $and cell `$memory\FIRQ_REGS$wren[5][0][0]$3092' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[5][0][0]$y$3093 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[5][0][0]$3094' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[5][0][0]$y$3095 = \FIRQ_REGS[5]'.
Replacing $and cell `$memory\FIRQ_REGS$wren[5][1][0]$3098' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[5][1][0]$y$3099 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[5][1][0]$3100' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[5][1][0]$y$3101 = $memory\FIRQ_REGS$wrmux[5][0][0]$y$3095'.
Replacing $and cell `$memory\FIRQ_REGS$wren[5][2][0]$3104' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[5][2][0]$y$3105 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[5][2][0]$3106' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[5][2][0]$y$3107 = $memory\FIRQ_REGS$wrmux[5][1][0]$y$3101'.
Replacing $and cell `$memory\FIRQ_REGS$wren[5][3][0]$3110' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[5][3][0]$y$3111 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[5][3][0]$3112' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[5][3][0]$y$3113 = $memory\FIRQ_REGS$wrmux[5][2][0]$y$3107'.
Replacing $and cell `$memory\USR_REGS$wren[3][4][0]$3570' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[3][4][0]$y$3571 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[3][2][0]$3562' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[3][2][0]$y$3563 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[3][1][0]$3558' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[3][1][0]$y$3559 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[3][0][0]$3554' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[3][0][0]$y$3555 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[3][0][0]$3556' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[3][0][0]$y$3557 = \USR_REGS[3]'.
Replacing $mux cell `$memory\USR_REGS$wrmux[3][1][0]$3560' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[3][1][0]$y$3561 = $memory\USR_REGS$wrmux[3][0][0]$y$3557'.
Replacing $mux cell `$memory\USR_REGS$wrmux[3][2][0]$3564' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[3][2][0]$y$3565 = $memory\USR_REGS$wrmux[3][1][0]$y$3561'.
Replacing $mux cell `$memory\USR_REGS$wrmux[3][4][0]$3572' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[3][4][0]$y$3573 = $memory\USR_REGS$wrmux[3][3][0]$y$3569'.
Replacing $and cell `$memory\USR_REGS$wren[3][5][0]$3574' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[3][5][0]$y$3575 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[3][5][0]$3576' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[3][5][0]$y$3577 = $memory\USR_REGS$wrmux[3][4][0]$y$3573'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3986' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3984' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3982' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$3964' (3'111, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3965 = 3'101'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3970' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3968' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3966' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$3948' (3'110, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3949 = 3'100'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3954' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3952' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3950' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$3932' (3'101, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3933 = 3'011'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3938' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3936' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3934' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$3916' (3'100, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3917 = 3'010'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3922' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3920' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3918' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$3900' (3'011, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3901 = 3'001'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3906' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3904' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3902' in module `NRISC_REGs' with inverter.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$3884' (3'010, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3885 = 3'000'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3890' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3888' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$3886' in module `NRISC_REGs' with inverter.
Replacing $and cell `$memory\FIRQ_REGS$wren[5][4][0]$3116' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[5][4][0]$y$3117 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[5][4][0]$3118' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[5][4][0]$y$3119 = $memory\FIRQ_REGS$wrmux[5][3][0]$y$3113'.
Replacing $and cell `$memory\FIRQ_REGS$wren[5][6][0]$3128' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[5][6][0]$y$3129 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[2][5][0]$3538' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[2][5][0]$y$3539 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[2][3][0]$3530' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[2][3][0]$y$3531 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[2][0][0]$3518' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[2][0][0]$y$3519 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[2][0][0]$3520' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[2][0][0]$y$3521 = \USR_REGS[2]'.
Replacing $and cell `$memory\USR_REGS$wren[2][1][0]$3522' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[2][1][0]$y$3523 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[2][1][0]$3524' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[2][1][0]$y$3525 = $memory\USR_REGS$wrmux[2][0][0]$y$3521'.
Replacing $mux cell `$memory\USR_REGS$wrmux[2][3][0]$3532' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[2][3][0]$y$3533 = $memory\USR_REGS$wrmux[2][2][0]$y$3529'.
Replacing $and cell `$memory\USR_REGS$wren[2][4][0]$3534' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[2][4][0]$y$3535 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[2][4][0]$3536' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[2][4][0]$y$3537 = $memory\USR_REGS$wrmux[2][3][0]$y$3533'.
Replacing $mux cell `$memory\USR_REGS$wrmux[2][5][0]$3540' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[2][5][0]$y$3541 = $memory\USR_REGS$wrmux[2][4][0]$y$3537'.
Replacing $and cell `$memory\USR_REGS$wren[2][6][0]$3542' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[2][6][0]$y$3543 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[2][6][0]$3544' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[2][6][0]$y$3545 = $memory\USR_REGS$wrmux[2][5][0]$y$3541'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[5][6][0]$3130' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[5][6][0]$y$3131 = $memory\FIRQ_REGS$wrmux[5][5][0]$y$3125'.
Replacing $and cell `$memory\FIRQ_REGS$wren[5][7][0]$3134' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[5][7][0]$y$3135 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[5][7][0]$3136' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[5][7][0]$y$3137 = $memory\FIRQ_REGS$wrmux[5][6][0]$y$3131'.
Replacing $and cell `$memory\FIRQ_REGS$wren[6][0][0]$3148' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[6][0][0]$y$3149 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[6][0][0]$3150' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[6][0][0]$y$3151 = \FIRQ_REGS[6]'.
Replacing $and cell `$memory\FIRQ_REGS$wren[6][1][0]$3154' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[6][1][0]$y$3155 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[6][1][0]$3156' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[6][1][0]$y$3157 = $memory\FIRQ_REGS$wrmux[6][0][0]$y$3151'.
Replacing $and cell `$memory\FIRQ_REGS$wren[6][2][0]$3162' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[6][2][0]$y$3163 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[6][2][0]$3164' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[6][2][0]$y$3165 = $memory\FIRQ_REGS$wrmux[6][1][0]$y$3157'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3166' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3167 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[6][3][0]$3168' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[6][3][0]$y$3169 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[6][3][0]$3170' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[6][3][0]$y$3171 = $memory\FIRQ_REGS$wrmux[6][2][0]$y$3165'.
Replacing $and cell `$memory\USR_REGS$wren[2][7][0]$3546' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[2][7][0]$y$3547 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[2][7][0]$3548' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[2][7][0]$y$3549 = $memory\USR_REGS$wrmux[2][6][0]$y$3545'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3174' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3175 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[6][4][0]$3176' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[6][4][0]$y$3177 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[6][4][0]$3178' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[6][4][0]$y$3179 = $memory\FIRQ_REGS$wrmux[6][3][0]$y$3171'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3180' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3181 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[6][5][0]$3182' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[6][5][0]$y$3183 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[6][5][0]$3184' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[6][5][0]$y$3185 = $memory\FIRQ_REGS$wrmux[6][4][0]$y$3179'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3188' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3189 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3194' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3195 = 1'0'.
Replacing $and cell `$memory\FIRQ_REGS$wren[6][7][0]$3196' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[6][7][0]$y$3197 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[6][7][0]$3198' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[6][7][0]$y$3199 = $memory\FIRQ_REGS$wrmux[6][6][0]$y$3193'.
Replacing $and cell `$memory\FIRQ_REGS$wren[7][0][0]$3210' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[7][0][0]$y$3211 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[4][7][0]$3618' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[4][7][0]$y$3619 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[4][6][0]$3614' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[4][6][0]$y$3615 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[4][5][0]$3610' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[4][5][0]$y$3611 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[4][3][0]$3602' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[4][3][0]$y$3603 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[4][2][0]$3598' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[4][2][0]$y$3599 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[4][1][0]$3594' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[4][1][0]$y$3595 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[4][0][0]$3590' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[4][0][0]$y$3591 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[4][0][0]$3592' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[4][0][0]$y$3593 = \USR_REGS[4]'.
Replacing $mux cell `$memory\USR_REGS$wrmux[4][1][0]$3596' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[4][1][0]$y$3597 = $memory\USR_REGS$wrmux[4][0][0]$y$3593'.
Replacing $mux cell `$memory\USR_REGS$wrmux[4][2][0]$3600' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[4][2][0]$y$3601 = $memory\USR_REGS$wrmux[4][1][0]$y$3597'.
Replacing $mux cell `$memory\USR_REGS$wrmux[4][3][0]$3604' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[4][3][0]$y$3605 = $memory\USR_REGS$wrmux[4][2][0]$y$3601'.
Replacing $mux cell `$memory\USR_REGS$wrmux[4][5][0]$3612' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[4][5][0]$y$3613 = $memory\USR_REGS$wrmux[4][4][0]$y$3609'.
Replacing $mux cell `$memory\USR_REGS$wrmux[4][6][0]$3616' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[4][6][0]$y$3617 = $memory\USR_REGS$wrmux[4][5][0]$y$3613'.
Replacing $mux cell `$memory\USR_REGS$wrmux[4][7][0]$3620' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[4][7][0]$y$3621 = $memory\USR_REGS$wrmux[4][6][0]$y$3617'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[7][0][0]$3212' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[7][0][0]$y$3213 = \FIRQ_REGS[7]'.
Replacing $and cell `$memory\FIRQ_REGS$wren[7][1][0]$3216' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[7][1][0]$y$3217 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[7][1][0]$3218' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[7][1][0]$y$3219 = $memory\FIRQ_REGS$wrmux[7][0][0]$y$3213'.
Replacing $and cell `$memory\FIRQ_REGS$wren[7][2][0]$3222' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[7][2][0]$y$3223 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[7][2][0]$3224' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[7][2][0]$y$3225 = $memory\FIRQ_REGS$wrmux[7][1][0]$y$3219'.
Replacing $and cell `$memory\FIRQ_REGS$wren[7][3][0]$3228' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[7][3][0]$y$3229 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[7][3][0]$3230' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[7][3][0]$y$3231 = $memory\FIRQ_REGS$wrmux[7][2][0]$y$3225'.
Replacing $and cell `$memory\FIRQ_REGS$wren[7][4][0]$3234' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[7][4][0]$y$3235 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[7][4][0]$3236' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[7][4][0]$y$3237 = $memory\FIRQ_REGS$wrmux[7][3][0]$y$3231'.
Replacing $and cell `$memory\FIRQ_REGS$wren[7][5][0]$3240' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[7][5][0]$y$3241 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[7][5][0]$3242' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[7][5][0]$y$3243 = $memory\FIRQ_REGS$wrmux[7][4][0]$y$3237'.
Replacing $and cell `$memory\FIRQ_REGS$wren[7][6][0]$3246' (const_and) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[7][6][0]$y$3247 = 1'0'.
Replacing $mux cell `$memory\FIRQ_REGS$wrmux[7][6][0]$3248' (0) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wrmux[7][6][0]$y$3249 = $memory\FIRQ_REGS$wrmux[7][5][0]$y$3243'.
Replacing $and cell `$memory\USR_REGS$wren[3][7][0]$3582' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[3][7][0]$y$3583 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[3][6][0]$3578' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[3][6][0]$y$3579 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[3][6][0]$3580' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[3][6][0]$y$3581 = $memory\USR_REGS$wrmux[3][5][0]$y$3577'.
Replacing $mux cell `$memory\USR_REGS$wrmux[3][7][0]$3584' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[3][7][0]$y$3585 = $memory\USR_REGS$wrmux[3][6][0]$y$3581'.
Replacing $sub cell `$auto$memory_map.cc:196:handle_cell$3861' (3'111, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3862 = 3'101'.
Replacing $mux cell `$memory\global_REGS$rdmux[5][2][3]$3881' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[5][1][1]$b$3871 = $memory\global_REGS$rdmux[5][2][3]$b$3883'.
Replacing $mux cell `$memory\global_REGS$rdmux[5][2][2]$3878' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[5][1][1]$a$3870 = $memory\global_REGS$rdmux[5][2][2]$b$3880'.
Replacing $mux cell `$memory\global_REGS$rdmux[5][2][1]$3875' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[5][1][0]$b$3868 = $memory\global_REGS$rdmux[5][2][1]$b$3877'.
Replacing $mux cell `$memory\global_REGS$rdmux[5][2][0]$3872' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[5][1][0]$a$3867 = $memory\global_REGS$rdmux[5][2][0]$b$3874'.
Replacing $mux cell `$memory\global_REGS$rdmux[5][1][1]$3869' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[5][0][0]$b$3865 = $memory\global_REGS$rdmux[5][1][1]$a$3870'.
Replacing $mux cell `$memory\global_REGS$rdmux[5][1][0]$3866' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[5][0][0]$a$3864 = $memory\global_REGS$rdmux[5][1][0]$a$3867'.
Replacing $mux cell `$memory\global_REGS$rdmux[5][0][0]$3863' (1) in module `\NRISC_REGs' with constant driver `\REGS[7] = $memory\global_REGS$rdmux[5][0][0]$b$3865'.
Replacing $sub cell `$auto$memory_map.cc:196:handle_cell$3838' (3'110, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3839 = 3'100'.
Replacing $mux cell `$memory\global_REGS$rdmux[4][2][3]$3858' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[4][1][1]$b$3848 = $memory\global_REGS$rdmux[4][2][3]$a$3859'.
Replacing $mux cell `$memory\global_REGS$rdmux[4][2][2]$3855' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[4][1][1]$a$3847 = $memory\global_REGS$rdmux[4][2][2]$a$3856'.
Replacing $mux cell `$memory\global_REGS$rdmux[4][2][1]$3852' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[4][1][0]$b$3845 = $memory\global_REGS$rdmux[4][2][1]$a$3853'.
Replacing $mux cell `$memory\global_REGS$rdmux[4][2][0]$3849' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[4][1][0]$a$3844 = $memory\global_REGS$rdmux[4][2][0]$a$3850'.
Replacing $mux cell `$memory\global_REGS$rdmux[4][1][1]$3846' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[4][0][0]$b$3842 = $memory\global_REGS$rdmux[4][1][1]$a$3847'.
Replacing $mux cell `$memory\global_REGS$rdmux[4][1][0]$3843' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[4][0][0]$a$3841 = $memory\global_REGS$rdmux[4][1][0]$a$3844'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4546' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4547 = $auto$rtlil.cc:1648:Sub$4541 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4544' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4542' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4543 = $auto$rtlil.cc:1648:Sub$4541 [0]'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4524' (3'111, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4525 = 3'101'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4530' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4531 = $auto$rtlil.cc:1648:Sub$4525 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4528' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4526' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4527 = $auto$rtlil.cc:1648:Sub$4525 [0]'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4508' (3'110, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4509 = 3'100'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4514' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4515 = $auto$rtlil.cc:1648:Sub$4509 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4512' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4510' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4511 = $auto$rtlil.cc:1648:Sub$4509 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4518' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4519 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[5][4][0]$4520' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[5][4][0]$y$4521 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4492' (3'101, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4493 = 3'011'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4498' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4499 = $auto$rtlil.cc:1648:Sub$4493 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4496' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4500' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4501 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4494' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4495 = $auto$rtlil.cc:1648:Sub$4493 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4502' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4503 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[5][3][0]$4504' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[5][3][0]$y$4505 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4476' (3'100, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4477 = 3'010'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4482' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4483 = $auto$rtlil.cc:1648:Sub$4477 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4480' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4484' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4485 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4478' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4479 = $auto$rtlil.cc:1648:Sub$4477 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4486' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4487 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[5][2][0]$4488' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[5][2][0]$y$4489 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4460' (3'011, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4461 = 3'001'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4466' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4467 = $auto$rtlil.cc:1648:Sub$4461 [2]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4464' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4468' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4469 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4462' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4463 = $auto$rtlil.cc:1648:Sub$4461 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4470' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4471 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[5][1][0]$4472' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[5][1][0]$y$4473 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4448' in module `NRISC_REGs' with inverter.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4452' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4453 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4454' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4455 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[5][0][0]$4456' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[5][0][0]$y$4457 = 1'0'.
Replacing $mux cell `$memory\global_REGS$wrmux[5][0][0]$4458' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[5][0][0]$y$4459 = \global_REGS[5]'.
Replacing $mux cell `$memory\global_REGS$wrmux[5][1][0]$4474' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[5][1][0]$y$4475 = $memory\global_REGS$wrmux[5][0][0]$y$4459'.
Replacing $mux cell `$memory\global_REGS$wrmux[5][2][0]$4490' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[5][2][0]$y$4491 = $memory\global_REGS$wrmux[5][1][0]$y$4475'.
Replacing $mux cell `$memory\global_REGS$wrmux[5][3][0]$4506' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[5][3][0]$y$4507 = $memory\global_REGS$wrmux[5][2][0]$y$4491'.
Replacing $mux cell `$memory\global_REGS$wrmux[5][4][0]$4522' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[5][4][0]$y$4523 = $memory\global_REGS$wrmux[5][3][0]$y$4507'.
Replacing $mux cell `$memory\global_REGS$rdmux[4][0][0]$3840' (1) in module `\NRISC_REGs' with constant driver `\REGS[6] = $memory\global_REGS$rdmux[4][0][0]$b$3842'.
Replacing $sub cell `$auto$memory_map.cc:196:handle_cell$3815' (3'101, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$3816 = 3'011'.
Replacing $mux cell `$memory\global_REGS$rdmux[3][2][3]$3835' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[3][1][1]$b$3825 = $memory\global_REGS$rdmux[3][2][3]$b$3837'.
Replacing $mux cell `$memory\global_REGS$rdmux[3][2][2]$3832' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[3][1][1]$a$3824 = $memory\global_REGS$rdmux[3][2][2]$b$3834'.
Replacing $mux cell `$memory\global_REGS$rdmux[3][2][1]$3829' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[3][1][0]$b$3822 = $memory\global_REGS$rdmux[3][2][1]$b$3831'.
Replacing $mux cell `$memory\global_REGS$rdmux[3][2][0]$3826' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[3][1][0]$a$3821 = $memory\global_REGS$rdmux[3][2][0]$b$3828'.
Replacing $mux cell `$memory\global_REGS$rdmux[3][1][1]$3823' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[3][0][0]$b$3819 = $memory\global_REGS$rdmux[3][1][1]$b$3825'.
Replacing $mux cell `$memory\global_REGS$rdmux[3][1][0]$3820' (1) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$rdmux[3][0][0]$a$3818 = $memory\global_REGS$rdmux[3][1][0]$b$3822'.
Replacing $mux cell `$memory\global_REGS$rdmux[3][0][0]$3817' (0) in module `\NRISC_REGs' with constant driver `\REGS[5] = $memory\global_REGS$rdmux[3][0][0]$a$3818'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4322' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4320' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4321 = $auto$rtlil.cc:1648:Sub$4317 [1]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4318' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4319 = $auto$rtlil.cc:1648:Sub$4317 [0]'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4300' (3'111, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4301 = 3'101'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4306' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4304' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4305 = $auto$rtlil.cc:1648:Sub$4301 [1]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4308' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4309 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4302' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4303 = $auto$rtlil.cc:1648:Sub$4301 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4310' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4311 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[3][5][0]$4312' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[3][5][0]$y$4313 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4284' (3'110, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4285 = 3'100'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4290' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4288' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4289 = $auto$rtlil.cc:1648:Sub$4285 [1]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4292' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4293 = 1'0'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4286' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4287 = $auto$rtlil.cc:1648:Sub$4285 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4294' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4295 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[3][4][0]$4296' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[3][4][0]$y$4297 = 1'0'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4268' (3'101, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4269 = 3'011'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4274' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4272' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4273 = $auto$rtlil.cc:1648:Sub$4269 [1]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4270' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4271 = $auto$rtlil.cc:1648:Sub$4269 [0]'.
Replacing $sub cell `$auto$memory_map.cc:285:handle_cell$4252' (3'100, 3'010) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1648:Sub$4253 = 3'010'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4258' in module `NRISC_REGs' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4256' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4257 = $auto$rtlil.cc:1648:Sub$4253 [1]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$4254' (1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4255 = $auto$rtlil.cc:1648:Sub$4253 [0]'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4262' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4263 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[3][2][0]$4264' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[3][2][0]$y$4265 = 1'0'.
Replacing $mux cell `$memory\global_REGS$wrmux[3][1][0]$4250' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[3][1][0]$y$4251 = $memory\global_REGS$wrmux[3][0][0]$y$4235'.
Replacing $mux cell `$memory\global_REGS$wrmux[3][2][0]$4266' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[3][2][0]$y$4267 = $memory\global_REGS$wrmux[3][1][0]$y$4251'.
Replacing $mux cell `$memory\global_REGS$wrmux[3][4][0]$4298' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[3][4][0]$y$4299 = $memory\global_REGS$wrmux[3][3][0]$y$4283'.
Replacing $mux cell `$memory\global_REGS$wrmux[3][5][0]$4314' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[3][5][0]$y$4315 = $memory\global_REGS$wrmux[3][4][0]$y$4299'.
Replacing $and cell `$memory\USR_REGS$wren[6][4][0]$3678' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[6][4][0]$y$3679 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[6][3][0]$3674' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[6][3][0]$y$3675 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[6][2][0]$3672' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[6][2][0]$y$3673 = $memory\USR_REGS$wrmux[6][1][0]$y$3669'.
Replacing $mux cell `$memory\USR_REGS$wrmux[6][3][0]$3676' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[6][3][0]$y$3677 = $memory\USR_REGS$wrmux[6][2][0]$y$3673'.
Replacing $and cell `$memory\USR_REGS$wren[6][7][0]$3690' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[6][7][0]$y$3691 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[6][5][0]$3682' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[6][5][0]$y$3683 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[6][4][0]$3680' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[6][4][0]$y$3681 = $memory\USR_REGS$wrmux[6][3][0]$y$3677'.
Replacing $mux cell `$memory\USR_REGS$wrmux[6][5][0]$3684' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[6][5][0]$y$3685 = $memory\USR_REGS$wrmux[6][4][0]$y$3681'.
Replacing $mux cell `$memory\USR_REGS$wrmux[6][7][0]$3692' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[6][7][0]$y$3693 = $memory\USR_REGS$wrmux[6][6][0]$y$3689'.
Replacing $and cell `$memory\USR_REGS$wren[0][7][0]$3474' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[0][7][0]$y$3475 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[0][6][0]$3470' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[0][6][0]$y$3471 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[0][5][0]$3466' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[0][5][0]$y$3467 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[0][4][0]$3462' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[0][4][0]$y$3463 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[0][3][0]$3458' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[0][3][0]$y$3459 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[0][2][0]$3454' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[0][2][0]$y$3455 = 1'0'.
Replacing $and cell `$memory\USR_REGS$wren[0][1][0]$3450' (const_and) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wren[0][1][0]$y$3451 = 1'0'.
Replacing $mux cell `$memory\USR_REGS$wrmux[0][1][0]$3452' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[0][1][0]$y$3453 = $memory\USR_REGS$wrmux[0][0][0]$y$3449'.
Replacing $mux cell `$memory\USR_REGS$wrmux[0][2][0]$3456' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[0][2][0]$y$3457 = $memory\USR_REGS$wrmux[0][1][0]$y$3453'.
Replacing $mux cell `$memory\USR_REGS$wrmux[0][3][0]$3460' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[0][3][0]$y$3461 = $memory\USR_REGS$wrmux[0][2][0]$y$3457'.
Replacing $mux cell `$memory\USR_REGS$wrmux[0][4][0]$3464' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[0][4][0]$y$3465 = $memory\USR_REGS$wrmux[0][3][0]$y$3461'.
Replacing $mux cell `$memory\USR_REGS$wrmux[0][5][0]$3468' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[0][5][0]$y$3469 = $memory\USR_REGS$wrmux[0][4][0]$y$3465'.
Replacing $mux cell `$memory\USR_REGS$wrmux[0][6][0]$3472' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[0][6][0]$y$3473 = $memory\USR_REGS$wrmux[0][5][0]$y$3469'.
Replacing $mux cell `$memory\USR_REGS$wrmux[0][7][0]$3476' (0) in module `\NRISC_REGs' with constant driver `$memory\USR_REGS$wrmux[0][7][0]$y$3477 = $memory\USR_REGS$wrmux[0][6][0]$y$3473'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4034' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4035 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4032' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4033 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4036' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4037 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4018' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4019 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4016' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4017 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4020' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4021 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4022' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4023 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4082' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4083 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4080' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4081 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4084' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4085 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4066' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4067 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4064' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4065 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4068' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4069 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4050' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4051 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4048' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4049 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4052' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4053 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4054' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4055 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[1][3][0]$4056' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[1][3][0]$y$4057 = 1'0'.
Replacing $mux cell `$memory\global_REGS$wrmux[1][3][0]$4058' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[1][3][0]$y$4059 = $memory\global_REGS$wrmux[1][2][0]$y$4043'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4416' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4417 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4420' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4421 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4414' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4415 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4422' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4423 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[4][5][0]$4424' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[4][5][0]$y$4425 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4400' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4401 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4404' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4405 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4398' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4399 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4406' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4407 = 1'1'.
Replacing $mux cell `$memory\global_REGS$wrmux[4][5][0]$4426' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[4][5][0]$y$4427 = $memory\global_REGS$wrmux[4][4][0]$y$4411'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4242' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4243 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4226' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4227 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4162' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4163 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4164' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4165 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4158' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4159 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4166' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4167 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[2][3][0]$4168' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[2][3][0]$y$4169 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4146' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4147 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4148' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4149 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4142' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4143 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4150' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4151 = 1'1'.
Replacing $mux cell `$memory\global_REGS$wrmux[2][3][0]$4170' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[2][3][0]$y$4171 = $memory\global_REGS$wrmux[2][2][0]$y$4155'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4194' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4195 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4190' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4191 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4178' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4179 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4174' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4175 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4130' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4131 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4126' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4127 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4114' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4115 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4110' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4111 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4086' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4087 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[1][5][0]$4088' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[1][5][0]$y$4089 = 1'0'.
Replacing $mux cell `$memory\global_REGS$wrmux[1][5][0]$4090' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[1][5][0]$y$4091 = $memory\global_REGS$wrmux[1][4][0]$y$4075'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4002' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4003 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4000' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4001 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4004' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4005 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3970' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3971 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3968' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3969 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3972' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3973 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3966' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3967 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3974' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3975 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[0][5][0]$3976' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[0][5][0]$y$3977 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3954' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3955 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3952' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3953 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3956' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3957 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3950' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3951 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3958' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3959 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[0][4][0]$3960' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[0][4][0]$y$3961 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3938' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3939 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3936' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3937 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3940' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3941 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3934' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3935 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3942' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3943 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[0][3][0]$3944' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[0][3][0]$y$3945 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3922' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3923 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3920' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3921 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3924' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3925 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3918' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3919 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3926' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3927 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[0][2][0]$3928' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[0][2][0]$y$3929 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3906' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3907 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3904' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3905 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3908' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3909 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3902' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3903 = 1'0'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3910' (const_and) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3911 = 1'0'.
Replacing $and cell `$memory\global_REGS$wren[0][1][0]$3912' (const_and) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wren[0][1][0]$y$3913 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3890' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3891 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3888' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3889 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3892' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3893 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$3886' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$3887 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$3894' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$3895 = 1'1'.
Replacing $mux cell `$memory\global_REGS$wrmux[0][1][0]$3914' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[0][1][0]$y$3915 = $memory\global_REGS$wrmux[0][0][0]$y$3899'.
Replacing $mux cell `$memory\global_REGS$wrmux[0][2][0]$3930' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[0][2][0]$y$3931 = $memory\global_REGS$wrmux[0][1][0]$y$3915'.
Replacing $mux cell `$memory\global_REGS$wrmux[0][3][0]$3946' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[0][3][0]$y$3947 = $memory\global_REGS$wrmux[0][2][0]$y$3931'.
Replacing $mux cell `$memory\global_REGS$wrmux[0][4][0]$3962' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[0][4][0]$y$3963 = $memory\global_REGS$wrmux[0][3][0]$y$3947'.
Replacing $mux cell `$memory\global_REGS$wrmux[0][5][0]$3978' (0) in module `\NRISC_REGs' with constant driver `$memory\global_REGS$wrmux[0][5][0]$y$3979 = $memory\global_REGS$wrmux[0][4][0]$y$3963'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4528' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4529 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4532' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4533 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4534' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4535 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4512' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4513 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4516' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4517 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4496' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4497 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4480' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4481 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4464' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4465 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4384' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4385 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4382' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4383 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4368' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4369 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4366' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4367 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4352' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4353 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4350' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4351 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4336' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4337 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4334' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4335 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4274' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4275 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4276' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4277 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4278' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4279 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4306' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4307 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4290' (1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4291 = 1'0'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4448' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4449 = 1'1'.
Replacing $not cell `$auto$memory_map.cc:65:addr_decode$4258' (1'0) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1641:Eq$4259 = 1'1'.
Replacing $and cell `$auto$memory_map.cc:70:addr_decode$4260' (1'1, 1'1) in module `\NRISC_REGs' with constant driver `$auto$rtlil.cc:1629:And$4261 = 1'1'.

7.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
  Cell `$memory\USR_REGS$wren[0][0][0]$3446' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\USR_REGS$wren[0][0][0]$y$3447 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\USR_REGS$wren[0][0][0]$3446' from module `\NRISC_REGs'.
  Cell `$memory\global_REGS$wren[2][2][0]$4152' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\global_REGS$wren[2][2][0]$y$4153 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\global_REGS$wren[2][2][0]$4152' from module `\NRISC_REGs'.
  Cell `$memory\FIRQ_REGS$wren[2][2][0]$2922' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\FIRQ_REGS$wren[2][2][0]$y$2923 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\FIRQ_REGS$wren[2][2][0]$2922' from module `\NRISC_REGs'.
  Cell `$memory\FIRQ_REGS$wren[7][7][0]$3252' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\FIRQ_REGS$wren[7][7][0]$y$3253 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\FIRQ_REGS$wren[7][7][0]$3252' from module `\NRISC_REGs'.
  Cell `$memory\FIRQ_REGS$wren[1][1][0]$2856' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\FIRQ_REGS$wren[1][1][0]$y$2857 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\FIRQ_REGS$wren[1][1][0]$2856' from module `\NRISC_REGs'.
  Cell `$memory\FIRQ_REGS$wren[6][6][0]$3190' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\FIRQ_REGS$wren[6][6][0]$y$3191 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\FIRQ_REGS$wren[6][6][0]$3190' from module `\NRISC_REGs'.
  Cell `$memory\FIRQ_REGS$wren[5][5][0]$3122' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\FIRQ_REGS$wren[5][5][0]$y$3123 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\FIRQ_REGS$wren[5][5][0]$3122' from module `\NRISC_REGs'.
  Cell `$memory\USR_REGS$wren[2][2][0]$3526' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\USR_REGS$wren[2][2][0]$y$3527 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\USR_REGS$wren[2][2][0]$3526' from module `\NRISC_REGs'.
  Cell `$memory\USR_REGS$wren[3][3][0]$3566' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\USR_REGS$wren[3][3][0]$y$3567 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\USR_REGS$wren[3][3][0]$3566' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:285:handle_cell$4428' is identical to cell `$auto$memory_map.cc:285:handle_cell$4092'.
    Redirecting output \Y: $auto$rtlil.cc:1648:Sub$4429 = $auto$rtlil.cc:1648:Sub$4093
    Removing $sub cell `$auto$memory_map.cc:285:handle_cell$4428' from module `\NRISC_REGs'.
  Cell `$memory\FIRQ_REGS$wren[0][0][0]$2776' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\FIRQ_REGS$wren[0][0][0]$y$2777 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\FIRQ_REGS$wren[0][0][0]$2776' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:65:addr_decode$4432' is identical to cell `$auto$memory_map.cc:65:addr_decode$4096'.
    Redirecting output \Y: $auto$rtlil.cc:1641:Eq$4433 = $auto$rtlil.cc:1641:Eq$4097
    Removing $not cell `$auto$memory_map.cc:65:addr_decode$4432' from module `\NRISC_REGs'.
  Cell `$memory\FIRQ_REGS$wren[3][3][0]$2990' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\FIRQ_REGS$wren[3][3][0]$y$2991 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\FIRQ_REGS$wren[3][3][0]$2990' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:285:handle_cell$4316' is identical to cell `$auto$memory_map.cc:285:handle_cell$4092'.
    Redirecting output \Y: $auto$rtlil.cc:1648:Sub$4317 = $auto$rtlil.cc:1648:Sub$4093
    Removing $sub cell `$auto$memory_map.cc:285:handle_cell$4316' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:285:handle_cell$3980' is identical to cell `$auto$memory_map.cc:285:handle_cell$4092'.
    Redirecting output \Y: $auto$rtlil.cc:1648:Sub$3981 = $auto$rtlil.cc:1648:Sub$4093
    Removing $sub cell `$auto$memory_map.cc:285:handle_cell$3980' from module `\NRISC_REGs'.
  Cell `$memory\USR_REGS$wren[7][7][0]$3726' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\USR_REGS$wren[7][7][0]$y$3727 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\USR_REGS$wren[7][7][0]$3726' from module `\NRISC_REGs'.
  Cell `$memory\USR_REGS$wren[6][6][0]$3686' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\USR_REGS$wren[6][6][0]$y$3687 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\USR_REGS$wren[6][6][0]$3686' from module `\NRISC_REGs'.
  Cell `$memory\global_REGS$wren[1][1][0]$4024' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\global_REGS$wren[1][1][0]$y$4025 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\global_REGS$wren[1][1][0]$4024' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:65:addr_decode$3984' is identical to cell `$auto$memory_map.cc:65:addr_decode$4096'.
    Redirecting output \Y: $auto$rtlil.cc:1641:Eq$3985 = $auto$rtlil.cc:1641:Eq$4097
    Removing $not cell `$auto$memory_map.cc:65:addr_decode$3984' from module `\NRISC_REGs'.
  Cell `$memory\global_REGS$wren[0][0][0]$3896' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\global_REGS$wren[0][0][0]$y$3897 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\global_REGS$wren[0][0][0]$3896' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:65:addr_decode$3982' is identical to cell `$auto$memory_map.cc:65:addr_decode$4430'.
    Redirecting output \Y: $auto$rtlil.cc:1641:Eq$3983 = $auto$rtlil.cc:1641:Eq$4431
    Removing $not cell `$auto$memory_map.cc:65:addr_decode$3982' from module `\NRISC_REGs'.
  Cell `$memory\global_REGS$wren[4][4][0]$4408' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\global_REGS$wren[4][4][0]$y$4409 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\global_REGS$wren[4][4][0]$4408' from module `\NRISC_REGs'.
  Cell `$memory\global_REGS$wren[5][5][0]$4536' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\global_REGS$wren[5][5][0]$y$4537 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\global_REGS$wren[5][5][0]$4536' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:285:handle_cell$4204' is identical to cell `$auto$memory_map.cc:285:handle_cell$4092'.
    Redirecting output \Y: $auto$rtlil.cc:1648:Sub$4205 = $auto$rtlil.cc:1648:Sub$4093
    Removing $sub cell `$auto$memory_map.cc:285:handle_cell$4204' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:285:handle_cell$4540' is identical to cell `$auto$memory_map.cc:285:handle_cell$4092'.
    Redirecting output \Y: $auto$rtlil.cc:1648:Sub$4541 = $auto$rtlil.cc:1648:Sub$4093
    Removing $sub cell `$auto$memory_map.cc:285:handle_cell$4540' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:65:addr_decode$4544' is identical to cell `$auto$memory_map.cc:65:addr_decode$4096'.
    Redirecting output \Y: $auto$rtlil.cc:1641:Eq$4545 = $auto$rtlil.cc:1641:Eq$4097
    Removing $not cell `$auto$memory_map.cc:65:addr_decode$4544' from module `\NRISC_REGs'.
  Cell `$memory\USR_REGS$wren[5][5][0]$3646' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\USR_REGS$wren[5][5][0]$y$3647 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\USR_REGS$wren[5][5][0]$3646' from module `\NRISC_REGs'.
  Cell `$memory\USR_REGS$wren[4][4][0]$3606' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\USR_REGS$wren[4][4][0]$y$3607 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\USR_REGS$wren[4][4][0]$3606' from module `\NRISC_REGs'.
  Cell `$memory\global_REGS$wren[3][3][0]$4280' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\global_REGS$wren[3][3][0]$y$4281 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\global_REGS$wren[3][3][0]$4280' from module `\NRISC_REGs'.
  Cell `$memory\FIRQ_REGS$wren[4][4][0]$3056' is identical to cell `$memory\USR_REGS$wren[1][1][0]$3486'.
    Redirecting output \Y: $memory\FIRQ_REGS$wren[4][4][0]$y$3057 = $memory\USR_REGS$wren[1][1][0]$y$3487
    Removing $and cell `$memory\FIRQ_REGS$wren[4][4][0]$3056' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:65:addr_decode$4098' is identical to cell `$auto$memory_map.cc:65:addr_decode$4210'.
    Redirecting output \Y: $auto$rtlil.cc:1641:Eq$4099 = $auto$rtlil.cc:1641:Eq$4211
    Removing $not cell `$auto$memory_map.cc:65:addr_decode$4098' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:65:addr_decode$4322' is identical to cell `$auto$memory_map.cc:65:addr_decode$4210'.
    Redirecting output \Y: $auto$rtlil.cc:1641:Eq$4323 = $auto$rtlil.cc:1641:Eq$4211
    Removing $not cell `$auto$memory_map.cc:65:addr_decode$4322' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:65:addr_decode$4430' is identical to cell `$auto$memory_map.cc:65:addr_decode$4206'.
    Redirecting output \Y: $auto$rtlil.cc:1641:Eq$4431 = $auto$rtlil.cc:1641:Eq$4207
    Removing $not cell `$auto$memory_map.cc:65:addr_decode$4430' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:65:addr_decode$3986' is identical to cell `$auto$memory_map.cc:65:addr_decode$4210'.
    Redirecting output \Y: $auto$rtlil.cc:1641:Eq$3987 = $auto$rtlil.cc:1641:Eq$4211
    Removing $not cell `$auto$memory_map.cc:65:addr_decode$3986' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:70:addr_decode$4548' is identical to cell `$auto$memory_map.cc:70:addr_decode$4436'.
    Redirecting output \Y: $auto$rtlil.cc:1629:And$4549 = $auto$rtlil.cc:1629:And$4437
    Removing $and cell `$auto$memory_map.cc:70:addr_decode$4548' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:70:addr_decode$4212' is identical to cell `$auto$memory_map.cc:70:addr_decode$4324'.
    Redirecting output \Y: $auto$rtlil.cc:1629:And$4213 = $auto$rtlil.cc:1629:And$4325
    Removing $and cell `$auto$memory_map.cc:70:addr_decode$4212' from module `\NRISC_REGs'.
  Cell `$auto$memory_map.cc:70:addr_decode$4100' is identical to cell `$auto$memory_map.cc:70:addr_decode$3988'.
    Redirecting output \Y: $auto$rtlil.cc:1629:And$4101 = $auto$rtlil.cc:1629:And$3989
    Removing $and cell `$auto$memory_map.cc:70:addr_decode$4100' from module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 37 cells.

7.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\somaUla\TAM=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_InstructionDecoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1244 (pure)
    Root of a mux tree: $procmux$1832 (pure)
    Root of a mux tree: $procmux$1908 (pure)
    Root of a mux tree: $procmux$1956 (pure)
    Root of a mux tree: $procmux$1962 (pure)
    Root of a mux tree: $procmux$1987 (pure)
    Root of a mux tree: $procmux$1990 (pure)
    Root of a mux tree: $procmux$1993 (pure)
    Root of a mux tree: $procmux$1996 (pure)
    Root of a mux tree: $procmux$1999 (pure)
    Root of a mux tree: $procmux$2002 (pure)
    Root of a mux tree: $procmux$2005 (pure)
    Root of a mux tree: $procmux$2008 (pure)
    Root of a mux tree: $procmux$2011 (pure)
    Root of a mux tree: $procmux$2014 (pure)
    Root of a mux tree: $procmux$2017 (pure)
    Root of a mux tree: $procmux$2020 (pure)
    Root of a mux tree: $procmux$2023 (pure)
    Root of a mux tree: $procmux$2026 (pure)
    Root of a mux tree: $procmux$2029 (pure)
    Root of a mux tree: $procmux$2032 (pure)
    Root of a mux tree: $procmux$2035 (pure)
    Root of a mux tree: $procmux$2038 (pure)
    Root of a mux tree: $procmux$2041 (pure)
    Root of a mux tree: $procmux$2044 (pure)
    Root of a mux tree: $procmux$984 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_PC_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$825 (pure)
    Root of a mux tree: $procmux$926 (pure)
    Root of a mux tree: $procmux$933 (pure)
    Root of a mux tree: $procmux$936 (pure)
    Root of a mux tree: $procmux$939 (pure)
    Root of a mux tree: $procmux$942 (pure)
    Root of a mux tree: $procmux$945 (pure)
    Root of a mux tree: $procmux$948 (pure)
    Root of a mux tree: $procmux$975 (pure)
    Root of a mux tree: $procmux$978 (pure)
    Root of a mux tree: $procmux$981 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_REGs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $memory\USR_REGS$wrmux[2][8][0]$3552 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[5][8][0]$3660 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[1][8][0]$3516 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[0][8][0]$2842 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[5][8][0]$3142 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[3][8][0]$3588 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[4][6][0]$4442 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[4][8][0]$3624 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[0][8][0]$3480 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[2][6][0]$4218 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[0][6][0]$3994 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[4][8][0]$3088 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[6][8][0]$3696 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[3][8][0]$3022 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[1][8][0]$2902 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[2][8][0]$2968 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[3][6][0]$4330 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[1][6][0]$4106 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[6][8][0]$3206 (pure)
    Root of a mux tree: $procmux$2049 (pure)
    Root of a mux tree: $procmux$2066 (pure)
    Root of a mux tree: $ternary$NRISC_REGs.v:49$387
    Root of a mux tree: $ternary$NRISC_REGs.v:50$390
    Root of a mux tree: $ternary$NRISC_REGs.v:51$393
    Root of a mux tree: $ternary$NRISC_REGs.v:52$396
    Root of a mux tree: $ternary$NRISC_REGs.v:53$399
    Root of a mux tree: $ternary$NRISC_REGs.v:54$402
    Root of a mux tree: $ternary$NRISC_REGs.v:55$405
    Root of a mux tree: $ternary$NRISC_REGs.v:56$408
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[7][8][0]$3260 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[7][8][0]$3732 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[5][6][0]$4554 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_ULA..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2353 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:78$106 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_UP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:120$1 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$7 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$8 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:145$9 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

7.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\somaUla\TAM=32.
  Optimizing cells in module \NRISC_InstructionDecoder.
  Optimizing cells in module \NRISC_PC_ctrl.
  Optimizing cells in module \NRISC_REGs.
  Optimizing cells in module \NRISC_ULA.
    Consolidated identical input bits for $mux cell $ternary$NRISC_ULA.v:78$106:
      Old ports: A=\ULA_B [4:0], B={ \aux_rotate [4:1] \ULA_B [0] }, Y=$ternary$NRISC_ULA.v:78$106_Y
      New ports: A=\ULA_B [4:1], B=\aux_rotate [4:1], Y=$ternary$NRISC_ULA.v:78$106_Y [4:1]
      New connections: $ternary$NRISC_ULA.v:78$106_Y [0] = \ULA_B [0]
  Optimizing cells in module \NRISC_ULA.
  Optimizing cells in module \NRISC_UP.
    Consolidated identical input bits for $mux cell $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:143$6:
      Old ports: A={ 27'000000000000000000000000000 \InstructionIN [3:0] }, B={ $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y \InstructionIN }, Y=$auto$wreduce.cc:347:run$2571 [30:0]
      New ports: A=5'00000, B={ $and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5_Y \InstructionIN [7:4] }, Y=$auto$wreduce.cc:347:run$2571 [8:4]
      New connections: { $auto$wreduce.cc:347:run$2571 [30:9] $auto$wreduce.cc:347:run$2571 [3:0] } = { $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] $auto$wreduce.cc:347:run$2571 [8] \InstructionIN [3:0] }
  Optimizing cells in module \NRISC_UP.
Performed a total of 2 changes.

7.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 0 cells.

7.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

7.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.17.8. Executing OPT_EXPR pass (perform const folding).

7.17.9. Rerunning OPT passes. (Maybe there is more to do..)

7.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\somaUla\TAM=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_InstructionDecoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$1244 (pure)
    Root of a mux tree: $procmux$1832 (pure)
    Root of a mux tree: $procmux$1908 (pure)
    Root of a mux tree: $procmux$1956 (pure)
    Root of a mux tree: $procmux$1962 (pure)
    Root of a mux tree: $procmux$1987 (pure)
    Root of a mux tree: $procmux$1990 (pure)
    Root of a mux tree: $procmux$1993 (pure)
    Root of a mux tree: $procmux$1996 (pure)
    Root of a mux tree: $procmux$1999 (pure)
    Root of a mux tree: $procmux$2002 (pure)
    Root of a mux tree: $procmux$2005 (pure)
    Root of a mux tree: $procmux$2008 (pure)
    Root of a mux tree: $procmux$2011 (pure)
    Root of a mux tree: $procmux$2014 (pure)
    Root of a mux tree: $procmux$2017 (pure)
    Root of a mux tree: $procmux$2020 (pure)
    Root of a mux tree: $procmux$2023 (pure)
    Root of a mux tree: $procmux$2026 (pure)
    Root of a mux tree: $procmux$2029 (pure)
    Root of a mux tree: $procmux$2032 (pure)
    Root of a mux tree: $procmux$2035 (pure)
    Root of a mux tree: $procmux$2038 (pure)
    Root of a mux tree: $procmux$2041 (pure)
    Root of a mux tree: $procmux$2044 (pure)
    Root of a mux tree: $procmux$984 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_PC_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$825 (pure)
    Root of a mux tree: $procmux$926 (pure)
    Root of a mux tree: $procmux$933 (pure)
    Root of a mux tree: $procmux$936 (pure)
    Root of a mux tree: $procmux$939 (pure)
    Root of a mux tree: $procmux$942 (pure)
    Root of a mux tree: $procmux$945 (pure)
    Root of a mux tree: $procmux$948 (pure)
    Root of a mux tree: $procmux$975 (pure)
    Root of a mux tree: $procmux$978 (pure)
    Root of a mux tree: $procmux$981 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_REGs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[0][8][0]$2842 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[1][8][0]$2902 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[2][8][0]$2968 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[3][8][0]$3022 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[4][8][0]$3088 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[5][8][0]$3142 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[6][8][0]$3206 (pure)
    Root of a mux tree: $memory\FIRQ_REGS$wrmux[7][8][0]$3260 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[0][8][0]$3480 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[1][8][0]$3516 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[2][8][0]$3552 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[3][8][0]$3588 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[4][8][0]$3624 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[5][8][0]$3660 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[6][8][0]$3696 (pure)
    Root of a mux tree: $memory\USR_REGS$wrmux[7][8][0]$3732 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[0][6][0]$3994 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[1][6][0]$4106 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[2][6][0]$4218 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[3][6][0]$4330 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[4][6][0]$4442 (pure)
    Root of a mux tree: $memory\global_REGS$wrmux[5][6][0]$4554 (pure)
    Root of a mux tree: $procmux$2049 (pure)
    Root of a mux tree: $procmux$2066 (pure)
    Root of a mux tree: $ternary$NRISC_REGs.v:49$387
    Root of a mux tree: $ternary$NRISC_REGs.v:50$390
    Root of a mux tree: $ternary$NRISC_REGs.v:51$393
    Root of a mux tree: $ternary$NRISC_REGs.v:52$396
    Root of a mux tree: $ternary$NRISC_REGs.v:53$399
    Root of a mux tree: $ternary$NRISC_REGs.v:54$402
    Root of a mux tree: $ternary$NRISC_REGs.v:55$405
    Root of a mux tree: $ternary$NRISC_REGs.v:56$408
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_ULA..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$2353 (pure)
    Root of a mux tree: $ternary$NRISC_ULA.v:78$106 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \NRISC_UP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:120$1 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$7 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$8 (pure)
    Root of a mux tree: $ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:145$9 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

7.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\somaUla\TAM=32.
  Optimizing cells in module \NRISC_InstructionDecoder.
  Optimizing cells in module \NRISC_PC_ctrl.
  Optimizing cells in module \NRISC_REGs.
  Optimizing cells in module \NRISC_ULA.
  Optimizing cells in module \NRISC_UP.
Performed a total of 0 changes.

7.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 0 cells.

7.17.13. Executing OPT_RMDFF pass (remove dff with constant values).

7.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

7.17.15. Executing OPT_EXPR pass (perform const folding).

7.17.16. Finished OPT passes. (There is nothing left to do.)

7.18. Executing TECHMAP pass (map to technology primitives).

7.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping NRISC_UP.$ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:120$1 ($mux) with simplemap.
Mapping NRISC_UP.$or$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:140$4 ($or) with simplemap.
Mapping NRISC_UP.$and$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:142$5 ($and) with simplemap.
Mapping NRISC_UP.$ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:143$6 ($mux) with simplemap.
Mapping NRISC_UP.$ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$7 ($mux) with simplemap.
Mapping NRISC_UP.$ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:144$8 ($mux) with simplemap.
Mapping NRISC_UP.$ternary$/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/source/NRISC_UP.v:145$9 ($mux) with simplemap.
Mapping NRISC_UP.$procdff$2474 ($dff) with simplemap.
Mapping NRISC_UP.$procdff$2475 ($dff) with simplemap.
Mapping NRISC_UP.$procdff$2476 ($dff) with simplemap.
Mapping NRISC_UP.$procdff$2481 ($dff) with simplemap.
Mapping NRISC_UP.$procdff$2482 ($dff) with simplemap.
Mapping NRISC_UP.$procdff$2484 ($dff) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$779_CMP0 ($logic_not) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$773 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$760 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$748 ($mux) with simplemap.

7.18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 8
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=8\S_WIDTH=3'.

7.18.3. Continuing TECHMAP pass.
Mapping NRISC_PC_ctrl.$procmux$860 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=3.
Mapping NRISC_PC_ctrl.$procmux$736 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$852 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=3.
Mapping NRISC_PC_ctrl.$procmux$730_CMP0 ($eq) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$844 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=3.
Mapping NRISC_PC_ctrl.$procmux$724 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$836 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=3.
Mapping NRISC_PC_ctrl.$procmux$712 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$825 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=3.
Mapping NRISC_PC_ctrl.$procmux$701 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$812 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$690 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$799 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$685_CMP0 ($eq) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$683_CMP0 ($logic_not) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$682_CMP0 ($eq) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$681_CMP0 ($eq) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$679 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$680_CMP0 ($eq) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$676_CMP0 ($eq) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$786 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$675_CMP0 ($eq) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$673 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=3.
Mapping NRISC_PC_ctrl.$or$NRISC_PC_ctrl.v:48$468 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$or$NRISC_PC_ctrl.v:48$469 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$or$NRISC_PC_ctrl.v:48$470 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$and$NRISC_PC_ctrl.v:48$472 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$or$NRISC_PC_ctrl.v:52$473 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$or$NRISC_PC_ctrl.v:52$474 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$not$NRISC_PC_ctrl.v:52$475 ($not) with simplemap.
Mapping NRISC_PC_ctrl.$and$NRISC_PC_ctrl.v:52$476 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$or$NRISC_PC_ctrl.v:73$494 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$not$NRISC_PC_ctrl.v:73$495 ($not) with simplemap.
Mapping NRISC_PC_ctrl.$and$NRISC_PC_ctrl.v:73$496 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$674_CMP0 ($eq) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$927_CMP0 ($eq) with simplemap.

7.18.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 4
Parameter \B_WIDTH = 1
Parameter \Y_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4'.

7.18.5. Continuing TECHMAP pass.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2578 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4.

7.18.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 4
Parameter \Y_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4'.

7.18.7. Continuing TECHMAP pass.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2575 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4.

7.18.8. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 4
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=4\S_WIDTH=2'.

7.18.9. Continuing TECHMAP pass.
Mapping NRISC_PC_ctrl.$procmux$926 using $paramod\_90_pmux\WIDTH=4\S_WIDTH=2.
Mapping NRISC_PC_ctrl.$procmux$928_CMP0 ($eq) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$928_CMP1 ($eq) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$928_ANY ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$933 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$936 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$939 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$942 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$945 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$948 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$975 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$978 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$procmux$981 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$auto$opt_reduce.cc:126:opt_mux$2547 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$auto$opt_reduce.cc:126:opt_mux$2543 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$auto$opt_reduce.cc:126:opt_mux$2541 ($reduce_or) with simplemap.

7.18.10. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 8
Parameter \Y_WIDTH = 8
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8'.

7.18.11. Continuing TECHMAP pass.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2572 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8.
Mapping NRISC_PC_ctrl.$procdff$2362 ($dff) with simplemap.
Mapping NRISC_PC_ctrl.$procdff$2363 ($dff) with simplemap.
Mapping NRISC_PC_ctrl.$procdff$2364 ($dff) with simplemap.
Mapping NRISC_PC_ctrl.$procdff$2365 ($dff) with simplemap.
Mapping NRISC_PC_ctrl.$procdff$2366 ($dff) with simplemap.
Mapping NRISC_PC_ctrl.$procdff$2367 ($dff) with simplemap.
Mapping NRISC_PC_ctrl.$procdff$2368 ($dff) with simplemap.
Mapping NRISC_PC_ctrl.$procdff$2369 ($dff) with simplemap.
Mapping NRISC_PC_ctrl.$auto$opt_expr.cc:158:group_cell_inputs$2585 ($not) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$926.$reduce_or$<techmap.v>:445$5026 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$and$<techmap.v>:434$4811 ($and) with simplemap.

7.18.12. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=4'.

7.18.13. Executing PROC pass (convert processes to netlists).

7.18.13.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.18.13.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.18.13.3. Executing PROC_INIT pass (extract init attributes).

7.18.13.4. Executing PROC_ARST pass (detect async resets in processes).

7.18.13.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$5206'.
     1/8: $0\p[3:0] [2]
     2/8: $0\g[3:0] [2]
     3/8: $0\p[3:0] [3]
     4/8: $0\g[3:0] [3]
     5/8: $0\p[3:0] [1]
     6/8: $0\g[3:0] [1]
     7/8: $0\g[3:0] [0]
     8/8: $0\p[3:0] [0]

7.18.13.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=4.\p' from process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$5206'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=4.\g' from process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$5206'.

7.18.13.7. Executing PROC_DFF pass (convert process syncs to FFs).

7.18.13.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$5206'.
Cleaned up 0 empty switches.

7.18.14. Executing OPT pass (performing simple optimizations).

7.18.14.1. Executing OPT_EXPR pass (perform const folding).

7.18.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=4'.
Removed a total of 0 cells.

7.18.14.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.18.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=4..
  removing unused `$and' cell `$and$<techmap.v>:222$5217'.
  removing unused `$and' cell `$and$<techmap.v>:222$5211'.
  removing unused `$and' cell `$and$<techmap.v>:230$5220'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

7.18.14.5. Finished fast OPT passes.

7.18.15. Continuing TECHMAP pass.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2578.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$ternary$<techmap.v>:445$4810 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.$and$<techmap.v>:260$5018 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$reduce_or$<techmap.v>:445$4809 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.$xor$<techmap.v>:263$5020 ($xor) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$and$<techmap.v>:434$4812 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.$ternary$<techmap.v>:258$5017 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.$xor$<techmap.v>:262$5019 ($xor) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$reduce_or$<techmap.v>:441$4821 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$reduce_or$<techmap.v>:441$4819 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$reduce_or$<techmap.v>:441$4818 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$reduce_or$<techmap.v>:441$4817 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$reduce_or$<techmap.v>:441$4816 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$reduce_or$<techmap.v>:441$4815 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$reduce_or$<techmap.v>:441$4814 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$and$<techmap.v>:434$4813 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$and$<techmap.v>:434$4812 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$and$<techmap.v>:434$4811 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$ternary$<techmap.v>:445$4810 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$reduce_or$<techmap.v>:445$4809 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$673.$reduce_or$<techmap.v>:441$4820 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$926.$ternary$<techmap.v>:445$5027 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$926.$and$<techmap.v>:434$5028 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$926.$and$<techmap.v>:434$5029 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$926.$reduce_or$<techmap.v>:441$5030 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$926.$reduce_or$<techmap.v>:441$5031 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$926.$reduce_or$<techmap.v>:441$5032 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$926.$reduce_or$<techmap.v>:441$5033 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$and$<techmap.v>:434$4811 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2572.A_conv ($pos) with simplemap.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2572.B_conv ($pos) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$reduce_or$<techmap.v>:441$4820 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.$not$<techmap.v>:258$5128 ($not) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$reduce_or$<techmap.v>:441$4821 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$reduce_or$<techmap.v>:441$4819 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.$ternary$<techmap.v>:258$5129 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$reduce_or$<techmap.v>:441$4818 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$reduce_or$<techmap.v>:441$4817 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$reduce_or$<techmap.v>:441$4816 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$reduce_or$<techmap.v>:441$4815 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$reduce_or$<techmap.v>:441$4814 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$and$<techmap.v>:434$4813 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$reduce_or$<techmap.v>:445$4809 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$ternary$<techmap.v>:445$4810 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$and$<techmap.v>:434$4811 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$and$<techmap.v>:434$4812 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$and$<techmap.v>:434$4812 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$and$<techmap.v>:434$4813 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$reduce_or$<techmap.v>:441$4814 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$reduce_or$<techmap.v>:441$4815 ($reduce_or) with simplemap.

7.18.16. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 8
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=8'.

7.18.17. Executing PROC pass (convert processes to netlists).

7.18.17.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.18.17.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.18.17.3. Executing PROC_INIT pass (extract init attributes).

7.18.17.4. Executing PROC_ARST pass (detect async resets in processes).

7.18.17.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$5479'.
     1/16: $0\p[7:0] [6]
     2/16: $0\g[7:0] [6]
     3/16: $0\p[7:0] [4]
     4/16: $0\g[7:0] [4]
     5/16: $0\p[7:0] [2]
     6/16: $0\g[7:0] [2]
     7/16: $0\p[7:0] [5]
     8/16: $0\g[7:0] [5]
     9/16: $0\p[7:0] [7]
    10/16: $0\g[7:0] [7]
    11/16: $0\p[7:0] [3]
    12/16: $0\g[7:0] [3]
    13/16: $0\p[7:0] [1]
    14/16: $0\g[7:0] [1]
    15/16: $0\g[7:0] [0]
    16/16: $0\p[7:0] [0]

7.18.17.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=8.\p' from process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$5479'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=8.\g' from process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$5479'.

7.18.17.7. Executing PROC_DFF pass (convert process syncs to FFs).

7.18.17.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$5479'.
Cleaned up 0 empty switches.

7.18.18. Executing OPT pass (performing simple optimizations).

7.18.18.1. Executing OPT_EXPR pass (perform const folding).

7.18.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=8'.
Removed a total of 0 cells.

7.18.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.18.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=8..
  removing unused `$and' cell `$and$<techmap.v>:230$5514'.
  removing unused `$and' cell `$and$<techmap.v>:230$5511'.
  removing unused `$and' cell `$and$<techmap.v>:230$5508'.
  removing unused `$and' cell `$and$<techmap.v>:230$5505'.
  removing unused `$and' cell `$and$<techmap.v>:222$5502'.
  removing unused `$and' cell `$and$<techmap.v>:222$5496'.
  removing unused `$and' cell `$and$<techmap.v>:222$5484'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

7.18.18.5. Finished fast OPT passes.

7.18.19. Continuing TECHMAP pass.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2572.lcu using $paramod\_90_lcu\WIDTH=8.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$reduce_or$<techmap.v>:441$4816 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$reduce_or$<techmap.v>:441$4817 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$reduce_or$<techmap.v>:441$4818 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.$and$<techmap.v>:260$5130 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$reduce_or$<techmap.v>:441$4819 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:263$5132 ($xor) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$reduce_or$<techmap.v>:441$4821 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$ternary$<techmap.v>:445$4810 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$825.$reduce_or$<techmap.v>:441$4820 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$852.$reduce_or$<techmap.v>:445$4809 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$reduce_or$<techmap.v>:445$4809 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$ternary$<techmap.v>:445$4810 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$and$<techmap.v>:434$4812 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$and$<techmap.v>:434$4811 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$and$<techmap.v>:434$4813 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$reduce_or$<techmap.v>:441$4814 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$reduce_or$<techmap.v>:441$4815 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$reduce_or$<techmap.v>:441$4816 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$reduce_or$<techmap.v>:441$4817 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$reduce_or$<techmap.v>:441$4818 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$reduce_or$<techmap.v>:441$4819 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$reduce_or$<techmap.v>:441$4821 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$836.$reduce_or$<techmap.v>:441$4820 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:262$5131 ($xor) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.$not$<techmap.v>:258$5016 ($not) with simplemap.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2578.B_conv ($pos) with simplemap.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2578.A_conv ($pos) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.$xor$<techmap.v>:262$5024 ($xor) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.$xor$<techmap.v>:263$5025 ($xor) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.$and$<techmap.v>:260$5023 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2575.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$reduce_or$<techmap.v>:441$4815 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.$ternary$<techmap.v>:258$5022 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.$not$<techmap.v>:258$5021 ($not) with simplemap.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2575.B_conv ($pos) with simplemap.
Mapping NRISC_PC_ctrl.$auto$alumacc.cc:470:replace_alu$2575.A_conv ($pos) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$reduce_or$<techmap.v>:441$4814 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$reduce_or$<techmap.v>:441$4820 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$reduce_or$<techmap.v>:441$4821 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$and$<techmap.v>:434$4813 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$reduce_or$<techmap.v>:441$4819 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$reduce_or$<techmap.v>:441$4818 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$reduce_or$<techmap.v>:441$4817 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$860.$reduce_or$<techmap.v>:441$4816 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$reduce_or$<techmap.v>:441$4820 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$reduce_or$<techmap.v>:441$4821 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$reduce_or$<techmap.v>:441$4819 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$reduce_or$<techmap.v>:441$4818 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$reduce_or$<techmap.v>:441$4817 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$reduce_or$<techmap.v>:441$4816 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$reduce_or$<techmap.v>:441$4815 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$reduce_or$<techmap.v>:441$4814 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$and$<techmap.v>:434$4813 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$and$<techmap.v>:434$4812 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$and$<techmap.v>:434$4811 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$ternary$<techmap.v>:445$4810 ($mux) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$procmux$844.$reduce_or$<techmap.v>:445$4809 ($reduce_or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:229$5513 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:229$5510 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:229$5507 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:229$5504 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:221$5501 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$or$<techmap.v>:221$5213 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$or$<techmap.v>:229$5219 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:221$5498 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$or$<techmap.v>:221$5216 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:221$5495 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$or$<techmap.v>:221$5210 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:221$5492 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:221$5489 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$or$<techmap.v>:212$5208 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:221$5486 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:229$5218 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:221$5483 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:212$5481 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:222$5214 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:221$5215 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:221$5209 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:221$5212 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$or$<techmap.v>:229$5219 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$or$<techmap.v>:221$5216 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$or$<techmap.v>:221$5213 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:229$5512 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$or$<techmap.v>:221$5210 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:229$5509 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:229$5506 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:229$5503 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:222$5499 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:222$5493 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:222$5490 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:222$5487 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5500 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5497 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5494 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5491 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5488 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5485 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5482 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:212$5480 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$or$<techmap.v>:212$5208 ($or) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$and$<techmap.v>:229$5218 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:212$5207 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$and$<techmap.v>:222$5214 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$and$<techmap.v>:221$5215 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$and$<techmap.v>:221$5212 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$and$<techmap.v>:221$5209 ($and) with simplemap.
Mapping NRISC_PC_ctrl.$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$and$<techmap.v>:212$5207 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2505 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2511 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2495 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2501 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2503 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2509 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$ternary$NRISC_InstructionDecoder.v:177$441 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$not$NRISC_InstructionDecoder.v:190$442 ($not) with simplemap.
Mapping NRISC_InstructionDecoder.$and$NRISC_InstructionDecoder.v:190$443 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$eq$NRISC_InstructionDecoder.v:416$444 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$eq$NRISC_InstructionDecoder.v:417$445 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$or$NRISC_InstructionDecoder.v:417$446 ($or) with simplemap.
Mapping NRISC_InstructionDecoder.$not$NRISC_InstructionDecoder.v:417$447 ($not) with simplemap.
Mapping NRISC_InstructionDecoder.$and$NRISC_InstructionDecoder.v:417$448 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$eq$NRISC_InstructionDecoder.v:441$449 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$ne$NRISC_InstructionDecoder.v:441$450 ($reduce_bool) with simplemap.
Mapping NRISC_InstructionDecoder.$and$NRISC_InstructionDecoder.v:441$451 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$eq$NRISC_InstructionDecoder.v:442$452 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$and$NRISC_InstructionDecoder.v:442$454 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$eq$NRISC_InstructionDecoder.v:444$455 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$eq$NRISC_InstructionDecoder.v:445$456 ($logic_not) with simplemap.
Mapping NRISC_InstructionDecoder.$and$NRISC_InstructionDecoder.v:445$457 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$or$NRISC_InstructionDecoder.v:445$458 ($or) with simplemap.
Mapping NRISC_InstructionDecoder.$and$NRISC_InstructionDecoder.v:445$459 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$not$NRISC_InstructionDecoder.v:450$461 ($not) with simplemap.
Mapping NRISC_InstructionDecoder.$and$NRISC_InstructionDecoder.v:450$462 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$984 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$987_CMP0 ($eq) with simplemap.

7.18.20. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 4
Parameter \S_WIDTH = 7
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=4\S_WIDTH=7'.

7.18.21. Continuing TECHMAP pass.
Mapping NRISC_InstructionDecoder.$procmux$986 using $paramod\_90_pmux\WIDTH=4\S_WIDTH=7.
Mapping NRISC_InstructionDecoder.$procmux$988_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$989_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1005_CMP0 ($eq) with simplemap.

7.18.22. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 3
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=3\S_WIDTH=3'.

7.18.23. Continuing TECHMAP pass.
Mapping NRISC_InstructionDecoder.$procmux$1004 using $paramod\_90_pmux\WIDTH=3\S_WIDTH=3.
Mapping NRISC_InstructionDecoder.$procmux$1006_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1007_CMP0 ($logic_not) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1009_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1021_CMP0 ($eq) with simplemap.

7.18.24. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=2'.

7.18.25. Continuing TECHMAP pass.
Mapping NRISC_InstructionDecoder.$procmux$1020 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping NRISC_InstructionDecoder.$procmux$1022_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1023_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1024_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1025_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1028_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2527 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2525 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1039 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.

7.18.26. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 3
Parameter \S_WIDTH = 5
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=3\S_WIDTH=5'.

7.18.27. Continuing TECHMAP pass.
Mapping NRISC_InstructionDecoder.$procmux$1058 using $paramod\_90_pmux\WIDTH=3\S_WIDTH=5.
Mapping NRISC_InstructionDecoder.$procmux$1078_CMP0 ($eq) with simplemap.

7.18.28. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=3'.

7.18.29. Continuing TECHMAP pass.
Mapping NRISC_InstructionDecoder.$procmux$1077 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=3.
Mapping NRISC_InstructionDecoder.$procmux$1079_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1080_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1083_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1083_CMP1 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1083_CMP2 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1083_CMP3 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1083_ANY ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1085_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1104_CMP0 ($logic_not) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1104_CMP1 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1104_CMP2 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1104_CMP3 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1104_ANY ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1118 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1134 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1150 using $paramod\_90_pmux\WIDTH=4\S_WIDTH=2.
Mapping NRISC_InstructionDecoder.$procmux$1168_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1168_CMP1 ($eq) with simplemap.

7.18.30. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 2
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=2\S_WIDTH=2'.

7.18.31. Continuing TECHMAP pass.
Mapping NRISC_InstructionDecoder.$procmux$1167 using $paramod\_90_pmux\WIDTH=2\S_WIDTH=2.
Mapping NRISC_InstructionDecoder.$procmux$1169_CMP0 ($logic_not) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1169_CMP1 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1169_CMP2 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1173_CMP0 ($logic_not) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1186 using $paramod\_90_pmux\WIDTH=2\S_WIDTH=2.
Mapping NRISC_InstructionDecoder.$procmux$1206 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1225 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2523 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2519 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1244 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1264_ANY ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1263 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1282 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1301_ANY ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1300 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1322 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1346_CMP0 ($eq) with simplemap.

7.18.32. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 2
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=2\S_WIDTH=3'.

7.18.33. Continuing TECHMAP pass.
Mapping NRISC_InstructionDecoder.$procmux$1345 using $paramod\_90_pmux\WIDTH=2\S_WIDTH=3.
Mapping NRISC_InstructionDecoder.$procmux$1347_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1348_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1370 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1390_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1389 using $paramod\_90_pmux\WIDTH=2\S_WIDTH=3.
Mapping NRISC_InstructionDecoder.$procmux$1411 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1434 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping NRISC_InstructionDecoder.$procmux$1436_CMP0 ($logic_not) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1454 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1470 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1550 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1566 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1582 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1598 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1614 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1630 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1646 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1662 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1678 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1691_CMP0 ($eq) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1690 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping NRISC_InstructionDecoder.$procmux$1703 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping NRISC_InstructionDecoder.$procmux$1716 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping NRISC_InstructionDecoder.$procmux$1729 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping NRISC_InstructionDecoder.$procmux$1742 using $paramod\_90_pmux\WIDTH=2\S_WIDTH=2.
Mapping NRISC_InstructionDecoder.$procmux$1759 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1768 using $paramod\_90_pmux\WIDTH=2\S_WIDTH=3.
Mapping NRISC_InstructionDecoder.$procmux$1781 using $paramod\_90_pmux\WIDTH=2\S_WIDTH=2.
Mapping NRISC_InstructionDecoder.$procmux$1794 using $paramod\_90_pmux\WIDTH=4\S_WIDTH=2.

7.18.34. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 4
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=4\S_WIDTH=3'.

7.18.35. Continuing TECHMAP pass.
Mapping NRISC_InstructionDecoder.$procmux$1807 using $paramod\_90_pmux\WIDTH=4\S_WIDTH=3.

7.18.36. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 4
Parameter \S_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=4\S_WIDTH=4'.

7.18.37. Continuing TECHMAP pass.
Mapping NRISC_InstructionDecoder.$procmux$1819 using $paramod\_90_pmux\WIDTH=4\S_WIDTH=4.
Mapping NRISC_InstructionDecoder.$procmux$1832 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=3.

7.18.38. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 2
Parameter \S_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=2\S_WIDTH=4'.

7.18.39. Continuing TECHMAP pass.
Mapping NRISC_InstructionDecoder.$procmux$1845 using $paramod\_90_pmux\WIDTH=2\S_WIDTH=4.
Mapping NRISC_InstructionDecoder.$procmux$1861 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1870 using $paramod\_90_pmux\WIDTH=3\S_WIDTH=3.
Mapping NRISC_InstructionDecoder.$procmux$1881 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1890 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1896 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1902 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1908 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1914 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1920 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1926 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1932 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1938 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1944 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1950 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1956 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1962 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1968 ($or) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1974 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1980 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1987 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1990 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1993 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1996 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$1999 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2002 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2005 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2008 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2011 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2014 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2017 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2020 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2023 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2026 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2029 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2032 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2035 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2038 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2041 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$procmux$2044 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2561 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$auto$opt_reduce.cc:126:opt_mux$2559 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2378 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2379 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2380 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2381 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2382 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2383 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2384 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2385 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2386 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2387 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2388 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2389 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2390 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2391 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2392 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2393 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2394 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2395 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2396 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$procdff$2397 ($dff) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1039.$and$<techmap.v>:434$6069 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1039.$ternary$<techmap.v>:445$6068 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1039.$reduce_or$<techmap.v>:445$6067 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1058.$reduce_or$<techmap.v>:441$6164 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1058.$and$<techmap.v>:434$6163 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1058.$and$<techmap.v>:434$6162 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1058.$and$<techmap.v>:434$6161 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1058.$and$<techmap.v>:434$6160 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1058.$and$<techmap.v>:434$6159 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1058.$ternary$<techmap.v>:445$6158 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1058.$reduce_or$<techmap.v>:445$6157 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1058.$reduce_or$<techmap.v>:441$6166 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1058.$reduce_or$<techmap.v>:441$6165 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1077.$reduce_or$<techmap.v>:445$6177 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1077.$ternary$<techmap.v>:445$6178 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1077.$and$<techmap.v>:434$6179 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1077.$and$<techmap.v>:434$6180 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1077.$reduce_or$<techmap.v>:441$6182 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1077.$and$<techmap.v>:434$6181 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1039.$and$<techmap.v>:434$6070 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1039.$reduce_or$<techmap.v>:441$6071 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1004.$reduce_or$<techmap.v>:445$6018 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1004.$ternary$<techmap.v>:445$6019 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1004.$and$<techmap.v>:434$6020 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1004.$and$<techmap.v>:434$6021 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1004.$and$<techmap.v>:434$6022 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1004.$reduce_or$<techmap.v>:441$6023 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1004.$reduce_or$<techmap.v>:441$6024 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1004.$reduce_or$<techmap.v>:441$6025 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$reduce_or$<techmap.v>:445$5969 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$ternary$<techmap.v>:445$5970 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$and$<techmap.v>:434$5971 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$and$<techmap.v>:434$5972 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$and$<techmap.v>:434$5973 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$and$<techmap.v>:434$5974 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$and$<techmap.v>:434$5975 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$and$<techmap.v>:434$5976 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$and$<techmap.v>:434$5977 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$reduce_or$<techmap.v>:441$5978 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$reduce_or$<techmap.v>:441$5979 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$reduce_or$<techmap.v>:441$5980 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$986.$reduce_or$<techmap.v>:441$5981 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1020.$reduce_or$<techmap.v>:445$6067 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1020.$ternary$<techmap.v>:445$6068 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1020.$and$<techmap.v>:434$6069 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1020.$and$<techmap.v>:434$6070 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1020.$reduce_or$<techmap.v>:441$6071 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1150.$and$<techmap.v>:434$5028 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1150.$and$<techmap.v>:434$5029 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1150.$reduce_or$<techmap.v>:441$5030 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1150.$reduce_or$<techmap.v>:441$5031 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1150.$reduce_or$<techmap.v>:441$5032 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1150.$reduce_or$<techmap.v>:441$5033 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1150.$reduce_or$<techmap.v>:445$5026 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1150.$ternary$<techmap.v>:445$5027 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1167.$reduce_or$<techmap.v>:441$6372 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1167.$reduce_or$<techmap.v>:441$6371 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1167.$and$<techmap.v>:434$6370 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1167.$and$<techmap.v>:434$6369 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1167.$ternary$<techmap.v>:445$6368 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1167.$reduce_or$<techmap.v>:445$6367 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1186.$reduce_or$<techmap.v>:441$6372 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1186.$reduce_or$<techmap.v>:441$6371 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1186.$and$<techmap.v>:434$6370 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1186.$and$<techmap.v>:434$6369 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1186.$ternary$<techmap.v>:445$6368 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1186.$reduce_or$<techmap.v>:445$6367 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1345.$reduce_or$<techmap.v>:441$6474 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1345.$reduce_or$<techmap.v>:441$6473 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1345.$and$<techmap.v>:434$6472 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1345.$and$<techmap.v>:434$6471 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1345.$and$<techmap.v>:434$6470 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1345.$ternary$<techmap.v>:445$6469 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1345.$reduce_or$<techmap.v>:445$6468 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1389.$reduce_or$<techmap.v>:441$6474 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1389.$reduce_or$<techmap.v>:441$6473 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1389.$and$<techmap.v>:434$6472 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1389.$and$<techmap.v>:434$6471 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1389.$and$<techmap.v>:434$6470 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1389.$ternary$<techmap.v>:445$6469 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1389.$reduce_or$<techmap.v>:445$6468 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1434.$reduce_or$<techmap.v>:441$6071 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1434.$and$<techmap.v>:434$6070 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1434.$and$<techmap.v>:434$6069 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1434.$ternary$<techmap.v>:445$6068 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1434.$reduce_or$<techmap.v>:445$6067 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1690.$reduce_or$<techmap.v>:441$6071 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1690.$and$<techmap.v>:434$6070 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1690.$and$<techmap.v>:434$6069 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1690.$ternary$<techmap.v>:445$6068 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1690.$reduce_or$<techmap.v>:445$6067 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1703.$reduce_or$<techmap.v>:441$6071 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1703.$and$<techmap.v>:434$6070 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1703.$and$<techmap.v>:434$6069 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1703.$ternary$<techmap.v>:445$6068 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1703.$reduce_or$<techmap.v>:445$6067 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1716.$reduce_or$<techmap.v>:441$6071 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1716.$and$<techmap.v>:434$6070 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1716.$and$<techmap.v>:434$6069 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1716.$ternary$<techmap.v>:445$6068 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1716.$reduce_or$<techmap.v>:445$6067 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1729.$reduce_or$<techmap.v>:441$6071 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1729.$and$<techmap.v>:434$6070 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1729.$and$<techmap.v>:434$6069 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1729.$ternary$<techmap.v>:445$6068 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1729.$reduce_or$<techmap.v>:445$6067 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1742.$reduce_or$<techmap.v>:441$6372 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1742.$reduce_or$<techmap.v>:441$6371 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1742.$and$<techmap.v>:434$6370 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1742.$and$<techmap.v>:434$6369 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1742.$ternary$<techmap.v>:445$6368 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1742.$reduce_or$<techmap.v>:445$6367 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1768.$reduce_or$<techmap.v>:441$6474 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1768.$reduce_or$<techmap.v>:441$6473 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1768.$and$<techmap.v>:434$6472 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1768.$and$<techmap.v>:434$6471 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1768.$and$<techmap.v>:434$6470 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1768.$ternary$<techmap.v>:445$6469 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1768.$reduce_or$<techmap.v>:445$6468 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1781.$reduce_or$<techmap.v>:441$6372 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1781.$reduce_or$<techmap.v>:441$6371 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1781.$and$<techmap.v>:434$6370 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1781.$and$<techmap.v>:434$6369 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1781.$ternary$<techmap.v>:445$6368 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1781.$reduce_or$<techmap.v>:445$6367 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1794.$and$<techmap.v>:434$5028 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1794.$and$<techmap.v>:434$5029 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1794.$reduce_or$<techmap.v>:441$5030 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1794.$reduce_or$<techmap.v>:441$5031 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1794.$reduce_or$<techmap.v>:441$5032 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1794.$reduce_or$<techmap.v>:441$5033 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1794.$reduce_or$<techmap.v>:445$5026 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1794.$ternary$<techmap.v>:445$5027 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1807.$reduce_or$<techmap.v>:441$6618 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1807.$reduce_or$<techmap.v>:441$6617 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1807.$reduce_or$<techmap.v>:441$6616 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1807.$reduce_or$<techmap.v>:441$6615 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1807.$and$<techmap.v>:434$6614 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1807.$and$<techmap.v>:434$6613 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1807.$and$<techmap.v>:434$6612 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1807.$ternary$<techmap.v>:445$6611 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1807.$reduce_or$<techmap.v>:445$6610 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1819.$reduce_or$<techmap.v>:441$6628 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1819.$reduce_or$<techmap.v>:441$6627 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1819.$reduce_or$<techmap.v>:441$6626 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1819.$reduce_or$<techmap.v>:441$6625 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1819.$and$<techmap.v>:434$6624 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1819.$and$<techmap.v>:434$6623 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1819.$and$<techmap.v>:434$6622 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1819.$and$<techmap.v>:434$6621 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1819.$ternary$<techmap.v>:445$6620 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1819.$reduce_or$<techmap.v>:445$6619 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1832.$reduce_or$<techmap.v>:441$6182 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1832.$and$<techmap.v>:434$6181 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1832.$and$<techmap.v>:434$6180 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1832.$and$<techmap.v>:434$6179 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1832.$ternary$<techmap.v>:445$6178 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1832.$reduce_or$<techmap.v>:445$6177 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1845.$reduce_or$<techmap.v>:441$6636 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1845.$reduce_or$<techmap.v>:441$6635 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1845.$and$<techmap.v>:434$6634 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1845.$and$<techmap.v>:434$6633 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1845.$and$<techmap.v>:434$6632 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1845.$and$<techmap.v>:434$6631 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1845.$ternary$<techmap.v>:445$6630 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1845.$reduce_or$<techmap.v>:445$6629 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1870.$reduce_or$<techmap.v>:441$6025 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1870.$reduce_or$<techmap.v>:441$6024 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1870.$reduce_or$<techmap.v>:441$6023 ($reduce_or) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1870.$and$<techmap.v>:434$6022 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1870.$and$<techmap.v>:434$6021 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1870.$and$<techmap.v>:434$6020 ($and) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1870.$ternary$<techmap.v>:445$6019 ($mux) with simplemap.
Mapping NRISC_InstructionDecoder.$techmap$procmux$1870.$reduce_or$<techmap.v>:445$6018 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[1][1][0]$4026 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[5][8][0]$3660 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wren[5][8][0]$3658 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS[1]$2588 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS[2]$2590 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[7][8][0]$3732 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[4][4][0]$3058 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[3][3][0]$2992 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS[1]$3736 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS[2]$3738 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS[3]$3740 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS[4]$3742 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS[5]$3744 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[2][8][0]$2968 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wren[2][8][0]$2966 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$2964 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$2962 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[3][8][0]$3022 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS[7]$2600 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wren[3][8][0]$3020 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$3018 ($and) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS[0]$3734 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS[0]$3262 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[2][2][0]$2924 ($mux) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$2898 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wren[1][8][0]$2900 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[1][8][0]$2902 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[0][8][0]$2842 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS[0]$2586 ($dff) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:65:addr_decode$2830 ($not) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:65:addr_decode$2832 ($not) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:65:addr_decode$2834 ($not) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[1][1][0]$2858 ($mux) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$2836 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$2838 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wren[0][8][0]$2840 ($and) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[4][6][0]$4442 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wren[4][6][0]$4440 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$4438 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$4436 ($and) with simplemap.
Mapping NRISC_REGs.$ternary$NRISC_REGs.v:49$387 ($mux) with simplemap.
Mapping NRISC_REGs.$ternary$NRISC_REGs.v:50$390 ($mux) with simplemap.
Mapping NRISC_REGs.$ternary$NRISC_REGs.v:51$393 ($mux) with simplemap.
Mapping NRISC_REGs.$ternary$NRISC_REGs.v:52$396 ($mux) with simplemap.
Mapping NRISC_REGs.$ternary$NRISC_REGs.v:53$399 ($mux) with simplemap.
Mapping NRISC_REGs.$ternary$NRISC_REGs.v:54$402 ($mux) with simplemap.
Mapping NRISC_REGs.$ternary$NRISC_REGs.v:55$405 ($mux) with simplemap.
Mapping NRISC_REGs.$ternary$NRISC_REGs.v:56$408 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[4][4][0]$4410 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[2][6][0]$4218 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wren[2][6][0]$4216 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$4214 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:65:addr_decode$4210 ($not) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:65:addr_decode$4206 ($not) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[2][2][0]$4154 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[1][6][0]$4106 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wren[1][6][0]$4104 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$4102 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:65:addr_decode$4096 ($not) with simplemap.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.

7.18.40. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $macc model for $sub ($sub).
  creating $alu model for $macc $sub.
  creating $alu cell for $sub: $auto$alumacc.cc:470:replace_alu$8459
  created 1 $alu and 0 $macc cells.

7.18.41. Continuing TECHMAP pass.
Mapping NRISC_REGs.$auto$memory_map.cc:285:handle_cell$4092 using $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$3082 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$3084 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wren[4][8][0]$3086 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[4][8][0]$3088 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[1][8][0]$3516 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[5][5][0]$3648 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[0][6][0]$3994 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wren[0][6][0]$3992 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$3990 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$3988 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[5][5][0]$3124 ($mux) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$3138 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wren[5][8][0]$3140 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[5][8][0]$3142 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS[5]$2596 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[6][6][0]$3192 ($mux) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$3200 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$3202 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wren[6][8][0]$3204 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[6][8][0]$3206 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[4][8][0]$3624 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wren[4][8][0]$3622 ($and) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[4][4][0]$3608 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[7][7][0]$3254 ($mux) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$3256 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wren[7][8][0]$3258 ($and) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[7][8][0]$3260 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[3][8][0]$3588 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS[1]$3264 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS[2]$3266 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wren[3][8][0]$3586 ($and) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS[3]$3268 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS[4]$3270 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS[5]$3272 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS[6]$3274 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS[7]$3276 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[3][3][0]$3568 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[0][0][0]$3898 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[2][8][0]$3552 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wren[2][8][0]$3550 ($and) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[2][2][0]$3528 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wren[1][8][0]$3514 ($and) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[5][6][0]$4554 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wren[5][6][0]$4552 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$4550 ($and) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[5][5][0]$4538 ($mux) with simplemap.
Mapping NRISC_REGs.$procmux$2050_CMP0 ($eq) with simplemap.

7.18.42. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 32
Parameter \S_WIDTH = 15
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=32\S_WIDTH=15'.

7.18.43. Continuing TECHMAP pass.
Mapping NRISC_REGs.$procmux$2049 using $paramod\_90_pmux\WIDTH=32\S_WIDTH=15.
Mapping NRISC_REGs.$procmux$2051_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2052_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2053_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2054_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2055_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2056_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2057_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2058_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2059_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2060_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2061_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2062_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2063_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2064_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2067_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2066 using $paramod\_90_pmux\WIDTH=32\S_WIDTH=15.
Mapping NRISC_REGs.$procmux$2068_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2069_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2070_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2071_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2072_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2073_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2074_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2075_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2076_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2077_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2078_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2079_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2080_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2081_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS[4]$2594 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS$wrmux[0][0][0]$2778 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[3][6][0]$4330 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wren[3][6][0]$4328 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$4326 ($and) with simplemap.
Mapping NRISC_REGs.$auto$memory_map.cc:70:addr_decode$4324 ($and) with simplemap.
Mapping NRISC_REGs.$memory\global_REGS$wrmux[3][3][0]$4282 ($mux) with simplemap.
Mapping NRISC_REGs.$procmux$2285_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2285_CMP1 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2285_CMP2 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2285_CMP3 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2285_CMP4 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2285_CMP5 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2285_ANY ($reduce_or) with simplemap.
Mapping NRISC_REGs.$procmux$2286 ($and) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wren[7][8][0]$3730 ($and) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[7][7][0]$3728 ($mux) with simplemap.
Mapping NRISC_REGs.$procmux$2305 ($not) with simplemap.
Mapping NRISC_REGs.$procmux$2308_CMP0 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2308_CMP1 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2308_CMP2 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2308_CMP3 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2308_CMP4 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2308_CMP5 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2308_CMP6 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2308_CMP7 ($eq) with simplemap.
Mapping NRISC_REGs.$procmux$2308_ANY ($reduce_or) with simplemap.
Mapping NRISC_REGs.$procmux$2307 ($and) with simplemap.
Mapping NRISC_REGs.$procmux$2309 ($and) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[6][8][0]$3696 ($mux) with simplemap.
Mapping NRISC_REGs.$procmux$2333 ($and) with simplemap.
Mapping NRISC_REGs.$procmux$2335 ($and) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wren[6][8][0]$3694 ($and) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[6][6][0]$3688 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS[3]$2592 ($dff) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wren[1][1][0]$3486 ($and) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[1][1][0]$3488 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[0][8][0]$3480 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wren[0][8][0]$3478 ($and) with simplemap.
Mapping NRISC_REGs.$memory\USR_REGS$wrmux[0][0][0]$3448 ($mux) with simplemap.
Mapping NRISC_REGs.$memory\FIRQ_REGS[6]$2598 ($dff) with simplemap.

7.18.44. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 3
Parameter \B_WIDTH = 3
Parameter \Y_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=3\Y_WIDTH=3'.

7.18.45. Continuing TECHMAP pass.
Mapping NRISC_REGs.$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=3\Y_WIDTH=3.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9408 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9407 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9406 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9405 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9404 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9403 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9402 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9401 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9400 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9399 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9398 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9397 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9396 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9395 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9394 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9393 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9392 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9391 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9390 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9389 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9388 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9387 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9386 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9385 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9384 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9383 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9382 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9381 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9380 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9379 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9378 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:441$9377 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9376 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9375 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9374 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9373 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9372 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9371 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9370 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9369 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9368 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9367 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9366 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9365 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9364 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9363 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$and$<techmap.v>:434$9362 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$ternary$<techmap.v>:445$9361 ($mux) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2049.$reduce_or$<techmap.v>:445$9360 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9408 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9407 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9406 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9405 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9404 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9403 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9402 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9401 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9400 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9399 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9398 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9397 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9396 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9395 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9394 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9393 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9392 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9391 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9390 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9389 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9388 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9387 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9386 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9385 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9384 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9383 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9382 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9381 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9380 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9379 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9378 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:441$9377 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9376 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9375 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9374 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9373 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9372 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9371 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9370 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9369 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9368 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9367 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9366 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9365 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9364 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9363 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$and$<techmap.v>:434$9362 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$ternary$<techmap.v>:445$9361 ($mux) with simplemap.
Mapping NRISC_REGs.$techmap$procmux$2066.$reduce_or$<techmap.v>:445$9360 ($reduce_or) with simplemap.
Mapping NRISC_REGs.$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:263$10473 ($xor) with simplemap.
Mapping NRISC_REGs.$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472 ($xor) with simplemap.
Mapping NRISC_REGs.$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$and$<techmap.v>:260$10471 ($and) with simplemap.

7.18.46. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=3'.

7.18.47. Executing PROC pass (convert processes to netlists).

7.18.47.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.18.47.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.18.47.3. Executing PROC_INIT pass (extract init attributes).

7.18.47.4. Executing PROC_ARST pass (detect async resets in processes).

7.18.47.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$12702'.
     1/6: $0\p[2:0] [2]
     2/6: $0\g[2:0] [2]
     3/6: $0\p[2:0] [1]
     4/6: $0\g[2:0] [1]
     5/6: $0\g[2:0] [0]
     6/6: $0\p[2:0] [0]

7.18.47.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=3.\p' from process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$12702'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=3.\g' from process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$12702'.

7.18.47.7. Executing PROC_DFF pass (convert process syncs to FFs).

7.18.47.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$12702'.
Cleaned up 0 empty switches.

7.18.48. Executing OPT pass (performing simple optimizations).

7.18.48.1. Executing OPT_EXPR pass (perform const folding).

7.18.48.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=3'.
Removed a total of 0 cells.

7.18.48.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.18.48.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=3..
  removing unused `$and' cell `$and$<techmap.v>:222$12707'.
  removing unused `$and' cell `$and$<techmap.v>:230$12710'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

7.18.48.5. Finished fast OPT passes.

7.18.49. Continuing TECHMAP pass.
Mapping NRISC_REGs.$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.lcu using $paramod\_90_lcu\WIDTH=3.
Mapping NRISC_REGs.$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$ternary$<techmap.v>:258$10470 ($mux) with simplemap.
Mapping NRISC_REGs.$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$not$<techmap.v>:258$10469 ($not) with simplemap.
Mapping NRISC_REGs.$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.B_conv ($pos) with simplemap.
Mapping NRISC_REGs.$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.A_conv ($pos) with simplemap.
Mapping NRISC_REGs.$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.lcu.$or$<techmap.v>:229$12709 ($or) with simplemap.
Mapping NRISC_REGs.$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.lcu.$or$<techmap.v>:221$12706 ($or) with simplemap.
Mapping NRISC_REGs.$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.lcu.$or$<techmap.v>:212$12704 ($or) with simplemap.
Mapping NRISC_REGs.$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.lcu.$and$<techmap.v>:229$12708 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.lcu.$and$<techmap.v>:221$12705 ($and) with simplemap.
Mapping NRISC_REGs.$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.lcu.$and$<techmap.v>:212$12703 ($and) with simplemap.
Mapping NRISC_ULA.$not$NRISC_ULA.v:90$17 ($not) with simplemap.
Mapping NRISC_ULA.$not$NRISC_ULA.v:90$18 ($not) with simplemap.
Mapping NRISC_ULA.$xor$NRISC_ULA.v:90$19 ($xor) with simplemap.
Mapping NRISC_ULA.$not$NRISC_ULA.v:91$20 ($not) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:91$23 ($and) with simplemap.
Mapping NRISC_ULA.$xor$NRISC_ULA.v:91$24 ($xor) with simplemap.
Mapping NRISC_ULA.$not$NRISC_ULA.v:92$25 ($not) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:92$28 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:92$30 ($and) with simplemap.
Mapping NRISC_ULA.$xor$NRISC_ULA.v:92$31 ($xor) with simplemap.
Mapping NRISC_ULA.$not$NRISC_ULA.v:93$32 ($not) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:93$35 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:93$37 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:93$39 ($and) with simplemap.
Mapping NRISC_ULA.$xor$NRISC_ULA.v:93$40 ($xor) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:101$42 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:101$43 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:101$44 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:101$46 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:102$48 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:102$49 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:102$51 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:102$52 ($and) with simplemap.
Mapping NRISC_ULA.$eq$NRISC_ULA.v:103$53 ($logic_not) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:103$55 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:103$57 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:103$59 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:105$60 ($and) with simplemap.
Mapping NRISC_ULA.$or$NRISC_ULA.v:105$61 ($or) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:105$62 ($and) with simplemap.
Mapping NRISC_ULA.$or$NRISC_ULA.v:105$63 ($or) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:105$65 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:105$67 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:105$69 ($and) with simplemap.
Mapping NRISC_ULA.$not$NRISC_ULA.v:106$71 ($not) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:106$73 ($and) with simplemap.
Mapping NRISC_ULA.$or$NRISC_ULA.v:106$74 ($or) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:106$76 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:106$78 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:106$79 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:107$81 ($and) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:107$83 ($and) with simplemap.
Mapping NRISC_ULA.$not$NRISC_ULA.v:107$84 ($not) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:107$85 ($and) with simplemap.
Mapping NRISC_ULA.$or$NRISC_ULA.v:107$86 ($or) with simplemap.
Mapping NRISC_ULA.$or$NRISC_ULA.v:107$87 ($or) with simplemap.
Mapping NRISC_ULA.$reduce_bool$NRISC_ULA.v:108$88 ($reduce_bool) with simplemap.
Mapping NRISC_ULA.$ternary$NRISC_ULA.v:108$89 ($not) with simplemap.
Mapping NRISC_ULA.$or$NRISC_ULA.v:109$90 ($or) with simplemap.
Mapping NRISC_ULA.$and$NRISC_ULA.v:71$100 ($and) with simplemap.
Mapping NRISC_ULA.$not$NRISC_ULA.v:71$101 ($not) with simplemap.
Mapping NRISC_ULA.$ternary$NRISC_ULA.v:71$103 ($mux) with simplemap.
Mapping NRISC_ULA.$or$NRISC_ULA.v:74$104 ($or) with simplemap.
Mapping NRISC_ULA.$xor$NRISC_ULA.v:75$105 ($xor) with simplemap.
Mapping NRISC_ULA.$ternary$NRISC_ULA.v:78$106 ($mux) with simplemap.

7.18.50. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 32
Parameter \B_WIDTH = 5
Parameter \Y_WIDTH = 32
Parameter \_TECHMAP_CELLTYPE_ = 611543154
Generating RTLIL representation for module `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr'.

7.18.51. Executing PROC pass (convert processes to netlists).

7.18.51.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 10 empty switches in `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13012'.
Cleaned up 10 empty switches.

7.18.51.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.18.51.3. Executing PROC_INIT pass (extract init attributes).

7.18.51.4. Executing PROC_ARST pass (detect async resets in processes).

7.18.51.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13012'.
     1/17: $15\buffer[31:0]
     2/17: $14\buffer[31:0]
     3/17: $13\buffer[31:0]
     4/17: $12\buffer[31:0]
     5/17: $11\buffer[31:0]
     6/17: $10\buffer[31:0]
     7/17: $9\buffer[31:0]
     8/17: $8\buffer[31:0]
     9/17: $7\buffer[31:0]
    10/17: $6\buffer[31:0]
    11/17: $5\buffer[31:0]
    12/17: $4\buffer[31:0]
    13/17: $3\buffer[31:0]
    14/17: $2\buffer[31:0]
    15/17: $1\buffer[31:0]
    16/17: $0\buffer[31:0]
    17/17: $0\overflow[0:0]

7.18.51.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.\buffer' from process `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13012'.
No latch inferred for signal `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.\overflow' from process `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13012'.

7.18.51.7. Executing PROC_DFF pass (convert process syncs to FFs).

7.18.51.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13012'.
Removing empty process `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13012'.
Cleaned up 5 empty switches.
Removed 0 unused cells and 35 unused wires.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13057 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13054 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13051 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13048 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13045 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13042 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13039 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13036 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13033 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13030 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13027 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13024 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13021 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13018 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13015 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:104$13013 ($mux) with simplemap.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr'.

7.18.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.18.53. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13567' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [28] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13150' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [27] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13118' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [27] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13566' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [27] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13244' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [25] = $1\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13561' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [22] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13144' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [21] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13560' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [21] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13143' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [20] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13559' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [20] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13142' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [19] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13558' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [19] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13141' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [18] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13557' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [18] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13140' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [17] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13556' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [17] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13139' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [16] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13555' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [16] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13138' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [15] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13554' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [15] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13137' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [14] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13553' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [14] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13136' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [13] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13552' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [13] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13135' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [12] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13551' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [12] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13134' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [11] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13550' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [11] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13133' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [10] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13549' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [10] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13132' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [9] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13548' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [9] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13131' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [8] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13547' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [8] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13130' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [7] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13546' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [7] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13129' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [6] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13545' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [6] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13128' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [5] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13544' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [5] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13127' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [4] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13543' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [4] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13126' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [3] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13542' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [3] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13125' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [2] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13541' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [2] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13124' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [1] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13540' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [1] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13123' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [0] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13154' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13122' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13570' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13153' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13121' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13569' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [30] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13152' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [29] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13120' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [29] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13568' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [29] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13151' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [28] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13119' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [28] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13149' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [26] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13117' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [26] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13565' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [26] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13148' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [25] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13116' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [25] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13564' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [25] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13147' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [24] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13115' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [24] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13563' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [24] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13146' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [23] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13114' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [23] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13562' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [23] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13145' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [22] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13113' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [22] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13112' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [21] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13111' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [20] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13110' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [19] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13109' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [18] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13108' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [17] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13107' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [16] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13106' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [15] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13105' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [14] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13104' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [13] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13103' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [12] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13102' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [11] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13101' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [10] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13100' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [9] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13099' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [8] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13098' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [7] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13097' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [6] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13096' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [5] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13095' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [4] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13094' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [3] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13093' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [2] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13092' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [1] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13091' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [0] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13539' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13013_Y [0] = \A [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13212' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [25] = $1\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13336' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [21] = $4\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13304' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [21] = $4\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13240' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [21] = $1\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13208' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [21] = $1\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13424' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [13] = $7\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13243' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [24] = $1\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13242' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [23] = $1\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13241' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [22] = $1\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13239' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [20] = $1\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13238' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [19] = $1\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13211' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [24] = $1\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13335' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [20] = $4\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13303' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [20] = $4\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13207' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [20] = $1\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13423' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [12] = $7\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13442' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13410' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13346' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13314' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13250' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13218' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13538' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13506' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13441' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13409' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13345' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13313' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13249' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13217' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13537' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13505' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13237' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [18] = $1\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13236' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [17] = $1\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13440' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13408' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13344' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13312' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13248' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [29] = $1\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13216' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [29] = $1\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13536' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13504' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13439' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13407' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13343' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13311' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13247' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [28] = $1\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13215' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [28] = $1\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13535' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13503' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13235' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [16] = $1\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13234' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [15] = $1\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13210' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [23] = $1\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13334' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [19] = $4\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13302' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [19] = $4\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13206' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [19] = $1\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13422' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [11] = $7\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13209' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [22] = $1\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13333' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [18] = $4\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13301' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [18] = $4\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13205' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [18] = $1\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13421' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [10] = $7\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13332' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [17] = $4\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13300' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [17] = $4\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13204' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [17] = $1\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13420' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [9] = $7\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13331' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [16] = $4\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13299' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [16] = $4\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13203' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [16] = $1\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13419' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [8] = $7\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13438' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13406' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13342' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [27] = $4\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13310' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [27] = $4\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13246' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [27] = $1\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13214' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [27] = $1\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13534' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13502' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13233' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [14] = $1\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13232' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [13] = $1\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13437' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13405' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13341' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [26] = $4\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13309' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [26] = $4\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13245' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [26] = $1\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13213' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [26] = $1\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13533' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13501' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13436' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13404' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13340' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [25] = $4\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13308' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [25] = $4\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13532' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13500' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13435' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13403' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13339' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [24] = $4\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13307' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [24] = $4\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13531' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13499' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13434' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [23] = $7\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13402' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [23] = $7\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13338' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [23] = $4\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13306' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [23] = $4\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13530' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [23] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13498' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [23] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13433' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [22] = $7\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13401' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [22] = $7\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13337' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [22] = $4\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13305' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [22] = $4\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13529' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [22] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13497' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [22] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13432' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [21] = $7\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13400' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [21] = $7\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13528' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [21] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13496' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [21] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13431' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [20] = $7\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13399' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [20] = $7\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13527' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [20] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13495' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [20] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13430' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [19] = $7\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13398' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [19] = $7\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13526' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [19] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13494' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [19] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13429' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [18] = $7\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13397' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [18] = $7\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13525' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [18] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13493' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [18] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13428' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [17] = $7\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13396' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [17] = $7\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13524' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [17] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13492' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [17] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13427' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [16] = $7\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13395' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [16] = $7\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13523' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [16] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13491' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [16] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13426' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [15] = $7\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13394' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [15] = $7\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13330' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [15] = $4\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13298' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [15] = $4\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13202' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [15] = $1\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13522' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [15] = $10\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13490' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [15] = $10\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13425' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [14] = $7\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13393' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [14] = $7\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13329' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [14] = $4\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13297' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [14] = $4\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13201' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [14] = $1\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13521' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [14] = $10\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13489' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [14] = $10\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13392' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [13] = $7\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13328' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [13] = $4\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13296' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [13] = $4\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13200' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [13] = $1\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13520' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [13] = $10\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13488' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [13] = $10\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13391' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [12] = $7\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13327' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [12] = $4\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13295' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [12] = $4\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13231' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [12] = $1\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13199' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [12] = $1\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13519' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [12] = $10\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13487' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [12] = $10\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13390' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [11] = $7\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13326' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [11] = $4\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13294' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [11] = $4\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13230' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [11] = $1\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13198' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [11] = $1\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13518' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [11] = $10\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13486' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [11] = $10\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13389' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [10] = $7\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13325' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [10] = $4\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13293' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [10] = $4\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13229' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [10] = $1\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13197' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [10] = $1\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13517' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [10] = $10\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13485' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [10] = $10\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13418' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [7] = $7\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13417' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [6] = $7\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13416' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [5] = $7\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13415' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [4] = $7\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13414' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [3] = $7\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13413' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [2] = $7\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13324' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [9] = $4\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13292' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [9] = $4\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13228' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [9] = $1\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13196' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [9] = $1\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13412' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [1] = $7\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13323' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [8] = $4\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13291' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [8] = $4\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13227' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [8] = $1\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13195' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [8] = $1\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13411' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [0] = $7\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13226' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [7] = $1\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13225' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [6] = $1\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13224' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [5] = $1\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13388' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [9] = $7\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13516' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [9] = $10\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13484' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [9] = $10\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13387' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [8] = $7\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13515' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [8] = $10\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13483' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [8] = $10\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13386' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [7] = $7\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13322' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [7] = $4\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13290' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [7] = $4\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13194' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [7] = $1\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13514' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [7] = $10\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13482' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [7] = $10\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13385' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [6] = $7\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13384' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [5] = $7\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13383' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [4] = $7\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13382' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [3] = $7\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13381' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [2] = $7\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13380' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [1] = $7\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13379' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [0] = $7\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13223' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [4] = $1\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13222' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [3] = $1\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13221' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [2] = $1\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13220' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [1] = $1\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13219' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [0] = $1\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13321' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [6] = $4\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13289' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [6] = $4\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13193' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [6] = $1\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13513' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [6] = $10\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13481' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [6] = $10\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13320' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [5] = $4\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13288' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [5] = $4\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13192' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [5] = $1\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13512' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [5] = $10\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13480' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [5] = $10\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13319' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [4] = $4\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13287' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [4] = $4\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13191' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [4] = $1\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13318' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [3] = $4\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13286' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [3] = $4\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13190' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [3] = $1\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13317' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [2] = $4\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13285' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [2] = $4\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13189' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [2] = $1\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13316' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [1] = $4\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13284' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [1] = $4\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13188' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [1] = $1\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13315' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [0] = $4\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13283' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [0] = $4\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13187' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [0] = $1\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13511' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [4] = $10\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13479' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [4] = $10\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13510' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [3] = $10\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13478' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [3] = $10\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13509' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [2] = $10\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13477' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [2] = $10\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13508' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [1] = $10\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13476' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [1] = $10\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13507' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [0] = $10\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13475' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [0] = $10\buffer[31:0] [16]'.
Removed 0 unused cells and 13 unused wires.

7.18.54. Continuing TECHMAP pass.
Mapping NRISC_ULA.$shr$NRISC_ULA.v:78$107 using $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.

7.18.55. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 32
Parameter \B_WIDTH = 5
Parameter \Y_WIDTH = 32
Parameter \_TECHMAP_CELLTYPE_ = 40'0010010001110011011100110110100001110010
Generating RTLIL representation for module `$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr'.

7.18.56. Executing PROC pass (convert processes to netlists).

7.18.56.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 10 empty switches in `$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13578'.
Cleaned up 10 empty switches.

7.18.56.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.18.56.3. Executing PROC_INIT pass (extract init attributes).

7.18.56.4. Executing PROC_ARST pass (detect async resets in processes).

7.18.56.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13578'.
     1/17: $15\buffer[31:0]
     2/17: $14\buffer[31:0]
     3/17: $13\buffer[31:0]
     4/17: $12\buffer[31:0]
     5/17: $11\buffer[31:0]
     6/17: $10\buffer[31:0]
     7/17: $9\buffer[31:0]
     8/17: $8\buffer[31:0]
     9/17: $7\buffer[31:0]
    10/17: $6\buffer[31:0]
    11/17: $5\buffer[31:0]
    12/17: $4\buffer[31:0]
    13/17: $3\buffer[31:0]
    14/17: $2\buffer[31:0]
    15/17: $1\buffer[31:0]
    16/17: $0\buffer[31:0]
    17/17: $0\overflow[0:0]

7.18.56.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.\buffer' from process `$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13578'.
No latch inferred for signal `$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.\overflow' from process `$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13578'.

7.18.56.7. Executing PROC_DFF pass (convert process syncs to FFs).

7.18.56.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13578'.
Removing empty process `$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$13578'.
Cleaned up 5 empty switches.
Removed 0 unused cells and 35 unused wires.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:104$13579 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13581 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13584 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13587 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13590 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13593 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13596 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13599 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13602 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13605 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13608 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13611 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13614 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13617 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13620 ($mux) with simplemap.
Recursively mapping $paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$13623 ($mux) with simplemap.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr'.

7.18.57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.18.58. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13626' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [1] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13656' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14072' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14104' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13974' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [29] = $1\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14006' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [29] = $1\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13654' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [29] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13655' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [30] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14070' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [29] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14102' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [29] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13874' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [25] = $4\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13906' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [25] = $4\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13652' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [27] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13653' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [28] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14068' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [27] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14100' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [27] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13970' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [25] = $1\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14002' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [25] = $1\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13650' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [25] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13651' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [26] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14066' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [25] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14098' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [25] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13770' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [17] = $7\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13802' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [17] = $7\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13648' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [23] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13649' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [24] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14064' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [23] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14096' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [23] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13966' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [21] = $1\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13998' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [21] = $1\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13646' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [21] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13647' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [22] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14062' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [21] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14094' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [21] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13866' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [17] = $4\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13898' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [17] = $4\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13644' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [19] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13645' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [20] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14060' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [19] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14092' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [19] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13962' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [17] = $1\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13994' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [17] = $1\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13642' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [17] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13643' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [18] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14058' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [17] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14090' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [17] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13658' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [1] = $10\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14071' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14103' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13973' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [28] = $1\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14005' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [28] = $1\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14069' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [28] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14101' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [28] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13873' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [24] = $4\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13905' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [24] = $4\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14067' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [26] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14099' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [26] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13969' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [24] = $1\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14001' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [24] = $1\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14065' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [24] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14097' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [24] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13769' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [16] = $7\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13801' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [16] = $7\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14063' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [22] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14095' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [22] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13965' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [20] = $1\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13997' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [20] = $1\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14061' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [20] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14093' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [20] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13865' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [16] = $4\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13897' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [16] = $4\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14059' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [18] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14091' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [18] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13961' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [16] = $1\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13993' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [16] = $1\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13641' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [16] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14057' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [16] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14089' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [16] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13657' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [0] = $10\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13640' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [15] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13638' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [13] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13639' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [14] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13636' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [11] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13637' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [12] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13634' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [9] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13635' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [10] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13632' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [7] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13633' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [8] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13630' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [5] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13631' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [6] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13628' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [3] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13629' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [4] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13625' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [0] = \A [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13627' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$13579_Y [2] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13975' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14007' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13875' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [26] = $4\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13907' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [26] = $4\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13971' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [26] = $1\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14003' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [26] = $1\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13771' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [18] = $7\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13803' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [18] = $7\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13967' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [22] = $1\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13999' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [22] = $1\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13867' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [18] = $4\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13899' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [18] = $4\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13963' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [18] = $1\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13995' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [18] = $1\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13659' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [2] = $10\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13976' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14008' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13876' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [27] = $4\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13908' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [27] = $4\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13972' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [27] = $1\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14004' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [27] = $1\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13772' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [19] = $7\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13804' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [19] = $7\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13968' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [23] = $1\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14000' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [23] = $1\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13868' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [19] = $4\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13900' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [19] = $4\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13964' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [19] = $1\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13996' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [19] = $1\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13660' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [3] = $10\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13877' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13909' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13773' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [20] = $7\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13805' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [20] = $7\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13869' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [20] = $4\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13901' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [20] = $4\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13661' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [4] = $10\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13878' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13910' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13774' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [21] = $7\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13806' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [21] = $7\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13870' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [21] = $4\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13902' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [21] = $4\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13662' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [5] = $10\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13879' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13911' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13775' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [22] = $7\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13807' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [22] = $7\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13871' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [22] = $4\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13903' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [22] = $4\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13663' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [6] = $10\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13880' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13912' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13776' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [23] = $7\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13808' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [23] = $7\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13872' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [23] = $4\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13904' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [23] = $4\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13664' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [7] = $10\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13777' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13809' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13665' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [8] = $10\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13778' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13810' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13666' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [9] = $10\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13779' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13811' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13667' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [10] = $10\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13780' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13812' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13668' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [11] = $10\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13781' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13813' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13669' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [12] = $10\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13782' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13814' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13670' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [13] = $10\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13783' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13815' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13671' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [14] = $10\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13784' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13816' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13672' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [15] = $10\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13673' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [16] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13674' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [17] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13675' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [18] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13676' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [19] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13677' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [20] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13678' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [21] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13679' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [22] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13680' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [23] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13681' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13682' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13683' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13684' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13685' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13686' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13687' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13688' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13689' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [0] = $10\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13690' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [1] = $10\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13691' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [2] = $10\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13692' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [3] = $10\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13693' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [4] = $10\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13694' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [5] = $10\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13695' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [6] = $10\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13696' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [7] = $10\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13697' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [8] = $10\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13698' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [9] = $10\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13699' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [10] = $10\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13700' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [11] = $10\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13701' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [12] = $10\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13702' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [13] = $10\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13703' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [14] = $10\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13704' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [15] = $10\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13705' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [16] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13706' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [17] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13707' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [18] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13708' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [19] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13709' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [20] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13710' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [21] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13711' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [22] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13712' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [23] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13713' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13714' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13715' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13716' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13717' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13718' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13719' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13720' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14055' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [14] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14087' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [14] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13957' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [12] = $1\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13989' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [12] = $1\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14053' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [12] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14085' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [12] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13857' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [8] = $4\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13889' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [8] = $4\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14051' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [10] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14083' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [10] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13953' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [8] = $1\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13985' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [8] = $1\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14049' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [8] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14081' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [8] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13753' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [0] = $7\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13785' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [0] = $7\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14047' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [6] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14079' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [6] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13949' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [4] = $1\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13981' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [4] = $1\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14045' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [4] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14077' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [4] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13849' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [0] = $4\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13881' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [0] = $4\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14043' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [2] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14075' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [2] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13945' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [0] = $1\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13977' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [0] = $1\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14041' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [0] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14073' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [0] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14056' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [15] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14088' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [15] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13958' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [13] = $1\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13990' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [13] = $1\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14054' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [13] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14086' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [13] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13858' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [9] = $4\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13890' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [9] = $4\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14052' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [11] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14084' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [11] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13954' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [9] = $1\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13986' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [9] = $1\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14050' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [9] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14082' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [9] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13754' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [1] = $7\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13786' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [1] = $7\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14048' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [7] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14080' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [7] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13950' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [5] = $1\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13982' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [5] = $1\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14046' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [5] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14078' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [5] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13850' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [1] = $4\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13882' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [1] = $4\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14044' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [3] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14076' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [3] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13946' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [1] = $1\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13978' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [1] = $1\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14042' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [1] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14074' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [1] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13959' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [14] = $1\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13991' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [14] = $1\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13859' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [10] = $4\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13891' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [10] = $4\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13955' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [10] = $1\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13987' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [10] = $1\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13755' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [2] = $7\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13787' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [2] = $7\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13951' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [6] = $1\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13983' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [6] = $1\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13851' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [2] = $4\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13883' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [2] = $4\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13947' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [2] = $1\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13979' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [2] = $1\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13960' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [15] = $1\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13992' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [15] = $1\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13860' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [11] = $4\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13892' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [11] = $4\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13956' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [11] = $1\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13988' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [11] = $1\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13756' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [3] = $7\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13788' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [3] = $7\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13952' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [7] = $1\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13984' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [7] = $1\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13852' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [3] = $4\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13884' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [3] = $4\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13948' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [3] = $1\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13980' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [3] = $1\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13861' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [12] = $4\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13893' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [12] = $4\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13757' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [4] = $7\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13789' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [4] = $7\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13853' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [4] = $4\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13885' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [4] = $4\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13862' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [13] = $4\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13894' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [13] = $4\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13758' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [5] = $7\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13790' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [5] = $7\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13854' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [5] = $4\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13886' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [5] = $4\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13863' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [14] = $4\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13895' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [14] = $4\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13759' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [6] = $7\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13791' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [6] = $7\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13855' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [6] = $4\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13887' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [6] = $4\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13864' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [15] = $4\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13896' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [15] = $4\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13760' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [7] = $7\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13792' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [7] = $7\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13856' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [7] = $4\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13888' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [7] = $4\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13761' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [8] = $7\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13793' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [8] = $7\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13762' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [9] = $7\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13794' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [9] = $7\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13763' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [10] = $7\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13795' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [10] = $7\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13764' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [11] = $7\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13796' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [11] = $7\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13765' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [12] = $7\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13797' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [12] = $7\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13766' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [13] = $7\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13798' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [13] = $7\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13767' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [14] = $7\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13799' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [14] = $7\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13768' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [15] = $7\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$13800' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [15] = $7\buffer[31:0] [23]'.
Removed 0 unused cells and 13 unused wires.

7.18.59. Continuing TECHMAP pass.
Mapping NRISC_ULA.$sshr$NRISC_ULA.v:81$108 using $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr.

7.18.60. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 32
Parameter \B_WIDTH = 5
Parameter \Y_WIDTH = 32
Parameter \_TECHMAP_CELLTYPE_ = 611543148
Generating RTLIL representation for module `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr'.

7.18.61. Executing PROC pass (convert processes to netlists).

7.18.61.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$14144'.
Cleaned up 5 empty switches.

7.18.61.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.18.61.3. Executing PROC_INIT pass (extract init attributes).

7.18.61.4. Executing PROC_ARST pass (detect async resets in processes).

7.18.61.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$14144'.
     1/12: $10\buffer[31:0]
     2/12: $9\buffer[31:0]
     3/12: $8\buffer[31:0]
     4/12: $7\buffer[31:0]
     5/12: $6\buffer[31:0]
     6/12: $5\buffer[31:0]
     7/12: $4\buffer[31:0]
     8/12: $3\buffer[31:0]
     9/12: $2\buffer[31:0]
    10/12: $1\buffer[31:0]
    11/12: $0\buffer[31:0]
    12/12: $0\overflow[0:0]

7.18.61.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.\buffer' from process `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$14144'.
No latch inferred for signal `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.\overflow' from process `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$14144'.

7.18.61.7. Executing PROC_DFF pass (convert process syncs to FFs).

7.18.61.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$14144'.
Removing empty process `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$14144'.
Cleaned up 5 empty switches.
Removed 0 unused cells and 25 unused wires.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:104$14145 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$14147 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$14150 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$14153 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$14156 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$14159 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$14162 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$14165 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$14168 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$14171 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$14174 ($mux) with simplemap.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr'.

7.18.62. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.18.63. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14177' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [1] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14198' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [22] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14197' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [21] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14195' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [19] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14196' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [20] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14193' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [17] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14194' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [18] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14191' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [15] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14192' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [16] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14189' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [13] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14190' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [14] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14187' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [11] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14188' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [12] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14185' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [9] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14186' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [10] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14183' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [7] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14184' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [8] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14181' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [5] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14182' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [6] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14179' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [3] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14180' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [4] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14176' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [0] = \A [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14178' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [2] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14199' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [23] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14200' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [24] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14201' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [25] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14202' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [26] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14203' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [27] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14204' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [28] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14205' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [29] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14206' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [30] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14207' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$14145_Y [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14208' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14209' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14210' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14211' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14212' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14213' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14214' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14215' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [7] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14216' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [8] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14217' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [9] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14218' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [10] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14219' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [11] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14220' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [12] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14221' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [13] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14222' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [14] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14223' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [15] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14272' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14336' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14400' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14464' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14224' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [16] = $7\buffer[31:0] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14273' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14337' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14401' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14465' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [1] = \A [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14225' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [17] = $7\buffer[31:0] [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14274' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14338' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14402' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [2] = $1\buffer[31:0] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14466' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [2] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14226' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [18] = $7\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14275' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14339' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14403' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [3] = $1\buffer[31:0] [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14467' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [3] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14227' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [19] = $7\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14276' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14340' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [4] = $3\buffer[31:0] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14404' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [4] = $1\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14468' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [4] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14228' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [20] = $7\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14277' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14341' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [5] = $3\buffer[31:0] [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14405' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [5] = $1\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14469' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [5] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14229' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [21] = $7\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14278' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14342' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [6] = $3\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14406' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [6] = $1\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14470' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [6] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14230' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [22] = $7\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14279' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [7] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14343' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [7] = $3\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14407' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [7] = $1\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14471' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [7] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14231' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [23] = $7\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14280' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [8] = $5\buffer[31:0] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14344' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [8] = $3\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14408' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [8] = $1\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14472' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [8] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14232' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [24] = $7\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14281' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [9] = $5\buffer[31:0] [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14345' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [9] = $3\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14409' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [9] = $1\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14473' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [9] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14233' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [25] = $7\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14282' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [10] = $5\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14346' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [10] = $3\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14410' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [10] = $1\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14474' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [10] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14234' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [26] = $7\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14283' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [11] = $5\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14347' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [11] = $3\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14411' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [11] = $1\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14475' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [11] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14235' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [27] = $7\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14284' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [12] = $5\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14348' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [12] = $3\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14412' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [12] = $1\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14476' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [12] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14236' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [28] = $7\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14285' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [13] = $5\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14349' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [13] = $3\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14413' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [13] = $1\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14477' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [13] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14237' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [29] = $7\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14286' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [14] = $5\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14350' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [14] = $3\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14414' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [14] = $1\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14478' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [14] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14238' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [30] = $7\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14287' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [15] = $5\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14351' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [15] = $3\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14415' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [15] = $1\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14479' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [15] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14239' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [31] = $7\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14288' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [16] = $5\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14352' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [16] = $3\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14416' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [16] = $1\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14480' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [16] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14289' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [17] = $5\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14353' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [17] = $3\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14417' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [17] = $1\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14481' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [17] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14290' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [18] = $5\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14354' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [18] = $3\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14418' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [18] = $1\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14482' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [18] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14291' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [19] = $5\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14355' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [19] = $3\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14419' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [19] = $1\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14483' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [19] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14292' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [20] = $5\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14356' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [20] = $3\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14420' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [20] = $1\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14484' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [20] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14293' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [21] = $5\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14357' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [21] = $3\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14421' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [21] = $1\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14485' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [21] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14294' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [22] = $5\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14358' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [22] = $3\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14422' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [22] = $1\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14486' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [22] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14295' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [23] = $5\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14359' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [23] = $3\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14423' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [23] = $1\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14487' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [23] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14296' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [24] = $5\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14360' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [24] = $3\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14424' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [24] = $1\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14488' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [24] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14297' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [25] = $5\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14361' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [25] = $3\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14425' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [25] = $1\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14489' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [25] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14298' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [26] = $5\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14362' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [26] = $3\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14426' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [26] = $1\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14490' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [26] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14299' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [27] = $5\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14363' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [27] = $3\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14427' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [27] = $1\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14491' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [27] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14300' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [28] = $5\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14364' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [28] = $3\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14428' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [28] = $1\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14492' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [28] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14301' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [29] = $5\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14365' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [29] = $3\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14429' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [29] = $1\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14493' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [29] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14302' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [30] = $5\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14366' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [30] = $3\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14430' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [30] = $1\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14494' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [30] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14303' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [31] = $5\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14367' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [31] = $3\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14431' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [31] = $1\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$14495' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [31] = \A [30]'.
Removed 0 unused cells and 8 unused wires.

7.18.64. Continuing TECHMAP pass.
Mapping NRISC_ULA.$shl$NRISC_ULA.v:84$109 using $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.
Mapping NRISC_ULA.$or$NRISC_ULA.v:95$110 ($or) with simplemap.
Mapping NRISC_ULA.$procmux$2354_CMP0 ($eq) with simplemap.

7.18.65. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 32
Parameter \S_WIDTH = 7
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=32\S_WIDTH=7'.

7.18.66. Continuing TECHMAP pass.
Mapping NRISC_ULA.$procmux$2353 using $paramod\_90_pmux\WIDTH=32\S_WIDTH=7.
Mapping NRISC_ULA.$procmux$2355_CMP0 ($eq) with simplemap.
Mapping NRISC_ULA.$procmux$2356_CMP0 ($eq) with simplemap.
Mapping NRISC_ULA.$procmux$2357_CMP0 ($eq) with simplemap.
Mapping NRISC_ULA.$procmux$2358_CMP0 ($eq) with simplemap.
Mapping NRISC_ULA.$procmux$2359_CMP0 ($eq) with simplemap.
Mapping NRISC_ULA.$procmux$2360_CMP0 ($eq) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14615 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14614 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14613 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14612 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14611 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14610 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14609 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14608 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14607 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14606 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14605 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14604 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14603 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14602 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14601 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14600 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14599 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14598 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14597 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14596 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14595 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14594 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14593 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14592 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14591 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14590 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14589 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14588 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14587 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14586 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14585 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:441$14584 ($reduce_or) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$and$<techmap.v>:434$14583 ($and) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$and$<techmap.v>:434$14582 ($and) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$and$<techmap.v>:434$14581 ($and) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$and$<techmap.v>:434$14580 ($and) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$and$<techmap.v>:434$14579 ($and) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$and$<techmap.v>:434$14578 ($and) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$and$<techmap.v>:434$14577 ($and) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$ternary$<techmap.v>:445$14576 ($mux) with simplemap.
Mapping NRISC_ULA.$techmap$procmux$2353.$reduce_or$<techmap.v>:445$14575 ($reduce_or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:144$512 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:147$513 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:148$514 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:149$515 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:150$516 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:151$517 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$518 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$519 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$520 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$521 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$522 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$523 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$524 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$525 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$526 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$527 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$528 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$529 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$530 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$531 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$532 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$533 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$534 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$535 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$536 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$537 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$538 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$539 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$540 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$541 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$542 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$543 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$544 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$545 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$546 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$547 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$548 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$549 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$550 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$551 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$552 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$553 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$554 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$555 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$556 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$557 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$558 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$559 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$560 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$561 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$562 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$563 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$564 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$565 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$566 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$567 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$568 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$569 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$570 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$571 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$572 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$573 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$574 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$575 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$576 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$577 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$578 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$579 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$580 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$581 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$582 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$583 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$584 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$585 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$586 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$587 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$588 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$589 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$590 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$591 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$592 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$593 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$594 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$595 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$596 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$597 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$598 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$599 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$600 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$601 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$602 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$603 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$604 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$605 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$606 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$607 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$608 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$609 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$610 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$611 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$612 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$613 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$614 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$615 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$616 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$617 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$618 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$619 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$620 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$621 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$622 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$623 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$624 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$625 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$626 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$627 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$628 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$629 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$630 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$631 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$632 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$633 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$634 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$635 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$636 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$637 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$638 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$639 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$640 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$641 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$642 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$643 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$644 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$645 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$646 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$647 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$648 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$649 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$650 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$651 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$652 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$653 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$654 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$655 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$656 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$657 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$658 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$659 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$660 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$661 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$662 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:158$663 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$664 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$and$NRISC_ULA.v:160$665 ($and) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$666 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$or$NRISC_ULA.v:162$667 ($or) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:159$669 ($xor) with simplemap.
Mapping $paramod\somaUla\TAM=32.$xor$NRISC_ULA.v:161$671 ($xor) with simplemap.
No more expansions possible.

7.19. Executing OPT pass (performing simple optimizations).

7.19.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6136' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6132 [2] = \CORE_InstructionIN [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6134' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6132 [0] = \CORE_InstructionIN [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6043' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6039 [2] = \CORE_InstructionIN [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6591' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6589 [0] = \CORE_InstructionIN [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6592' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6589 [1] = \CORE_InstructionIN [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7239' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1819.$and$<techmap.v>:434$6621_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7211' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7210 [0] = $techmap$procmux$1819.$and$<techmap.v>:434$6622_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6382' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6378 [2] = \CORE_InstructionIN [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6381' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6378 [1] = \CORE_InstructionIN [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6395' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6391 [2] = \CORE_InstructionIN [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6393' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6391 [0] = \CORE_InstructionIN [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6272' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6268 [2] = \CORE_InstructionIN [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6271' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6268 [1] = \CORE_InstructionIN [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6253' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6248 [3] = \CORE_InstructionIN [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6238' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6233 [3] = \CORE_InstructionIN [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6235' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6233 [0] = \CORE_InstructionIN [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6223' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6218 [3] = \CORE_InstructionIN [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6221' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6218 [1] = \CORE_InstructionIN [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6208' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6203 [3] = \CORE_InstructionIN [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6206' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6203 [1] = \CORE_InstructionIN [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6205' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6203 [0] = \CORE_InstructionIN [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6984' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1150.$and$<techmap.v>:434$5028_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6304' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6302 [0] = \CORE_InstructionIN [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6306' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6302 [2] = \CORE_InstructionIN [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6307' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6302 [3] = \CORE_InstructionIN [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6321' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6317 [2] = \CORE_InstructionIN [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6322' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6317 [3] = \CORE_InstructionIN [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6290' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6287 [1] = \CORE_InstructionIN [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6291' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6287 [2] = \CORE_InstructionIN [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6292' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6287 [3] = \CORE_InstructionIN [11]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6995' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1150.$reduce_or$<techmap.v>:441$5032_Y = $techmap$procmux$1150.$and$<techmap.v>:434$5029_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7240' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1819.$and$<techmap.v>:434$6621_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7206' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7205 [0] = $techmap$procmux$1819.$and$<techmap.v>:434$6622_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6985' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1150.$and$<techmap.v>:434$5028_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6997' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1150.$reduce_or$<techmap.v>:441$5033_Y = $techmap$procmux$1150.$and$<techmap.v>:434$5029_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7238' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1819.$and$<techmap.v>:434$6621_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7216' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7215 [0] = $techmap$procmux$1819.$and$<techmap.v>:434$6622_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6983' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1150.$and$<techmap.v>:434$5028_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6993' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1150.$reduce_or$<techmap.v>:441$5031_Y = $techmap$procmux$1150.$and$<techmap.v>:434$5029_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7237' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1819.$and$<techmap.v>:434$6621_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7221' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7220 [0] = $techmap$procmux$1819.$and$<techmap.v>:434$6622_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6982' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1150.$and$<techmap.v>:434$5028_Y [0] = $procmux$1083_CTRL'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5854' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5850 [2] = \CORE_InstructionIN [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5852' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5850 [0] = \CORE_InstructionIN [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7192' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1807.$and$<techmap.v>:434$6613_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7170' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7169 = $techmap$procmux$1807.$and$<techmap.v>:434$6612_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7191' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1807.$and$<techmap.v>:434$6613_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7174' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7173 = $techmap$procmux$1807.$and$<techmap.v>:434$6612_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7190' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1807.$and$<techmap.v>:434$6613_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7178' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7177 = $techmap$procmux$1807.$and$<techmap.v>:434$6612_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7189' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1807.$and$<techmap.v>:434$6613_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7182' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7181 = $techmap$procmux$1807.$and$<techmap.v>:434$6612_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5869' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5865 [2] = \CORE_InstructionIN [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5922' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5920 [0] = \CORE_InstructionIN [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5924' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5920 [2] = \CORE_InstructionIN [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5925' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5920 [3] = \CORE_InstructionIN [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6057' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6052 [3] = \CORE_InstructionIN [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6055' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6052 [1] = \CORE_InstructionIN [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6196' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6193 [1] = \CORE_InstructionIN [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6185' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6183 [0] = \CORE_InstructionIN [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6528' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6524 [2] = \CORE_InstructionIN [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6122' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6117 [3] = \CORE_InstructionIN [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6121' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6117 [2] = \CORE_InstructionIN [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6120' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6117 [1] = \CORE_InstructionIN [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6029' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6026 [1] = \CORE_InstructionIN [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6107' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6102 [3] = \CORE_InstructionIN [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6106' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6102 [2] = \CORE_InstructionIN [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6104' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6102 [0] = \CORE_InstructionIN [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6010' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6008 [0] = \CORE_InstructionIN [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5998' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5995 [1] = \CORE_InstructionIN [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6092' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6087 [3] = \CORE_InstructionIN [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6091' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6087 [2] = \CORE_InstructionIN [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5984' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5982 [0] = \CORE_InstructionIN [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6077' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6072 [3] = \CORE_InstructionIN [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6074' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6072 [0] = \CORE_InstructionIN [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6075' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6072 [1] = \CORE_InstructionIN [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6343' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6341 [0] = \CORE_InstructionIN [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6477' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6475 [0] = \CORE_InstructionIN [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6479' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6475 [2] = \CORE_InstructionIN [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6480' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6475 [3] = \CORE_InstructionIN [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6481' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6475 [4] = \CORE_InstructionIN [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6482' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6475 [5] = \CORE_InstructionIN [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6483' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6475 [6] = \CORE_InstructionIN [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6484' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6475 [7] = \CORE_InstructionIN [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7038' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1345.$and$<techmap.v>:434$6471_Y [0] = $procmux$1347_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6448' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6444 [2] = \CORE_InstructionIN [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6449' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6444 [3] = \CORE_InstructionIN [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6450' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6444 [4] = \CORE_InstructionIN [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6451' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6444 [5] = \CORE_InstructionIN [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6452' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6444 [6] = \CORE_InstructionIN [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6453' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6444 [7] = \CORE_InstructionIN [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7040' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1345.$and$<techmap.v>:434$6470_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7033' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7032 = $procmux$1347_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6502' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6499 [1] = \CORE_InstructionIN [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6503' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6499 [2] = \CORE_InstructionIN [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6504' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6499 [3] = \CORE_InstructionIN [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6505' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6499 [4] = \CORE_InstructionIN [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6506' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6499 [5] = \CORE_InstructionIN [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6507' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6499 [6] = \CORE_InstructionIN [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6508' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6499 [7] = \CORE_InstructionIN [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7036' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1345.$and$<techmap.v>:434$6472_Y [0] = $procmux$1348_CMP'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6442' in module `NRISC_InstructionDecoder'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7039' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1345.$and$<techmap.v>:434$6471_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7041' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1345.$and$<techmap.v>:434$6470_Y [1] = $procmux$1346_CMP'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7029' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7028 = $procmux$1346_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7037' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1345.$and$<techmap.v>:434$6472_Y [1] = $procmux$1348_CMP'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6443' in module `NRISC_InstructionDecoder'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7070' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1434.$and$<techmap.v>:434$6070_Y = $procmux$1436_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7071' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1434.$and$<techmap.v>:434$6069_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7069' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1434.$reduce_or$<techmap.v>:441$6071_Y = $procmux$1436_CMP'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6523' in module `NRISC_InstructionDecoder'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7008' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1167.$and$<techmap.v>:434$6370_Y [0] = $procmux$1169_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7010' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1167.$and$<techmap.v>:434$6369_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7007' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1167.$reduce_or$<techmap.v>:441$6371_Y = $procmux$1169_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7009' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1167.$and$<techmap.v>:434$6370_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7011' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1167.$and$<techmap.v>:434$6369_Y [1] = $procmux$1168_CTRL'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7005' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1167.$reduce_or$<techmap.v>:441$6372_Y = $procmux$1168_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7020' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1186.$and$<techmap.v>:434$6370_Y [0] = $procmux$1169_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7022' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1186.$and$<techmap.v>:434$6369_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7019' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1186.$reduce_or$<techmap.v>:441$6371_Y = $procmux$1169_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7021' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1186.$and$<techmap.v>:434$6370_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7023' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1186.$and$<techmap.v>:434$6369_Y [1] = $procmux$1168_CTRL'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7017' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1186.$reduce_or$<techmap.v>:441$6372_Y = $procmux$1168_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7058' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1389.$and$<techmap.v>:434$6471_Y [0] = $procmux$1169_CMP [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7060' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1389.$and$<techmap.v>:434$6470_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7053' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7052 = $procmux$1169_CMP [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7056' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1389.$and$<techmap.v>:434$6472_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7055' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1389.$reduce_or$<techmap.v>:441$6473_Y = $procmux$1169_CMP [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7059' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1389.$and$<techmap.v>:434$6471_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7061' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1389.$and$<techmap.v>:434$6470_Y [1] = $procmux$1390_CMP'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7049' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7048 = $procmux$1390_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7057' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1389.$and$<techmap.v>:434$6472_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7051' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1389.$reduce_or$<techmap.v>:441$6474_Y = $procmux$1390_CMP'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6602' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6603' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6604' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6605' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6606' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6607' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6608' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6609' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6637' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6638' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6639' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6640' in module `NRISC_InstructionDecoder'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6877' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1004.$and$<techmap.v>:434$6020_Y [0] = $procmux$1005_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7305' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1870.$and$<techmap.v>:434$6020_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7296' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7295 = $techmap$procmux$1870.$and$<techmap.v>:434$6021_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6825' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6160_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6828' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6159_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6810' (00) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6809 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6819' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6162_Y [0] = $procmux$1024_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6822' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6161_Y [0] = $procmux$1023_CMP'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6813' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6812 = $auto$simplemap.cc:127:simplemap_reduce$6809 [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6816' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6163_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6815' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$reduce_or$<techmap.v>:441$6164_Y = $auto$simplemap.cc:127:simplemap_reduce$6809 [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6878' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1004.$and$<techmap.v>:434$6020_Y [1] = $procmux$1005_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6881' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1004.$and$<techmap.v>:434$6021_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6891' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6890 = $procmux$1005_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7306' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1870.$and$<techmap.v>:434$6020_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7292' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7291 = $techmap$procmux$1870.$and$<techmap.v>:434$6021_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6817' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6163_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6826' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6160_Y [1] = $procmux$1022_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6829' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6159_Y [1] = $procmux$1021_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6820' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6162_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6823' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6161_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6850' (00) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6848 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6852' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6851 = $auto$simplemap.cc:127:simplemap_reduce$6848 [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6854' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$reduce_or$<techmap.v>:441$6165_Y = $auto$simplemap.cc:127:simplemap_reduce$6848 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6885' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1004.$and$<techmap.v>:434$6022_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6879' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1004.$and$<techmap.v>:434$6020_Y [2] = $procmux$1005_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6882' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1004.$and$<techmap.v>:434$6021_Y [2] = $procmux$1006_CMP'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6897' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1004.$reduce_or$<techmap.v>:441$6025_Y = $auto$simplemap.cc:127:simplemap_reduce$6894'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7307' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1870.$and$<techmap.v>:434$6020_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7288' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7287 = $techmap$procmux$1870.$and$<techmap.v>:434$6021_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6818' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6163_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6827' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6160_Y [2] = $procmux$1022_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6830' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6159_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6842' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6841 [0] = $procmux$1022_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6821' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6162_Y [2] = $procmux$1024_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6824' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$and$<techmap.v>:434$6161_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6843' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6841 [1] = $procmux$1024_CMP'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6847' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1058.$reduce_or$<techmap.v>:441$6166_Y = $auto$simplemap.cc:127:simplemap_reduce$6844'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6805' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1039.$and$<techmap.v>:434$6069_Y = $auto$opt_reduce.cc:132:opt_mux$2508'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6867' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1039.$and$<techmap.v>:434$6070_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6869' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1039.$reduce_or$<techmap.v>:441$6071_Y = $auto$opt_reduce.cc:132:opt_mux$2508'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7078' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1690.$and$<techmap.v>:434$6069_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7076' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1690.$reduce_or$<techmap.v>:441$6071_Y = $techmap$procmux$1690.$and$<techmap.v>:434$6070_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7084' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1703.$and$<techmap.v>:434$6070_Y = $procmux$1009_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7085' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1703.$and$<techmap.v>:434$6069_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7083' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1703.$reduce_or$<techmap.v>:441$6071_Y = $procmux$1009_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6978' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1020.$and$<techmap.v>:434$6069_Y = $auto$opt_reduce.cc:132:opt_mux$2508'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6979' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1020.$and$<techmap.v>:434$6070_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6981' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1020.$reduce_or$<techmap.v>:441$6071_Y = $auto$opt_reduce.cc:132:opt_mux$2508'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7092' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1716.$and$<techmap.v>:434$6069_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7090' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1716.$reduce_or$<techmap.v>:441$6071_Y = $techmap$procmux$1716.$and$<techmap.v>:434$6070_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7098' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1729.$and$<techmap.v>:434$6070_Y = $procmux$1009_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7099' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1729.$and$<techmap.v>:434$6069_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7097' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1729.$reduce_or$<techmap.v>:441$6071_Y = $procmux$1009_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7109' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1742.$and$<techmap.v>:434$6369_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7106' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1742.$reduce_or$<techmap.v>:441$6371_Y = $techmap$procmux$1742.$and$<techmap.v>:434$6370_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7110' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1742.$and$<techmap.v>:434$6369_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7104' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1742.$reduce_or$<techmap.v>:441$6372_Y = $techmap$procmux$1742.$and$<techmap.v>:434$6370_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7127' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1768.$and$<techmap.v>:434$6470_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7120' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7119 = $techmap$procmux$1768.$and$<techmap.v>:434$6471_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7128' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1768.$and$<techmap.v>:434$6470_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7116' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7115 = $techmap$procmux$1768.$and$<techmap.v>:434$6471_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7141' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1781.$and$<techmap.v>:434$6369_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7138' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1781.$reduce_or$<techmap.v>:441$6371_Y = $techmap$procmux$1781.$and$<techmap.v>:434$6370_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7142' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1781.$and$<techmap.v>:434$6369_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7136' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1781.$reduce_or$<techmap.v>:441$6372_Y = $techmap$procmux$1781.$and$<techmap.v>:434$6370_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6911' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5971_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6915' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5972_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6940' (00) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6939 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6919' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5973_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6923' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5974_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6941' (00) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6939 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6944' (00) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6943 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6935' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5977_Y [0] = $procmux$1085_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6927' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5975_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6942' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6939 [2] = $techmap$procmux$986.$and$<techmap.v>:434$5976_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6947' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$reduce_or$<techmap.v>:441$5978_Y = $auto$simplemap.cc:127:simplemap_reduce$6943 [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7147' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1794.$and$<techmap.v>:434$5028_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7156' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1794.$reduce_or$<techmap.v>:441$5030_Y = $techmap$procmux$1794.$and$<techmap.v>:434$5029_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6912' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5971_Y [1] = $procmux$987_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6916' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5972_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6949' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6948 [0] = $procmux$987_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6920' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5973_Y [1] = $procmux$989_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6924' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5974_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6950' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6948 [1] = $procmux$989_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6936' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5977_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6932' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5976_Y [1] = $procmux$1028_CMP'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6954' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6952 [1] = $auto$simplemap.cc:127:simplemap_reduce$6948 [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7148' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1794.$and$<techmap.v>:434$5028_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7158' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1794.$reduce_or$<techmap.v>:441$5031_Y = $techmap$procmux$1794.$and$<techmap.v>:434$5029_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6913' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5971_Y [2] = $procmux$987_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6917' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5972_Y [2] = $procmux$988_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6921' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5973_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6925' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5974_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6959' (00) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6957 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6962' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6961 [0] = $auto$simplemap.cc:127:simplemap_reduce$6957 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6937' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5977_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6929' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5975_Y [2] = $procmux$1009_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6933' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5976_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6960' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6957 [2] = $procmux$1009_CMP'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6963' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6961 [1] = $procmux$1009_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7149' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1794.$and$<techmap.v>:434$5028_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7160' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1794.$reduce_or$<techmap.v>:441$5032_Y = $techmap$procmux$1794.$and$<techmap.v>:434$5029_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6914' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5971_Y [3] = $procmux$987_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6918' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5972_Y [3] = $procmux$988_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6922' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5973_Y [3] = $procmux$989_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6926' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5974_Y [3] = $procmux$1691_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6938' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5977_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6930' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5975_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6934' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$and$<techmap.v>:434$5976_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6969' (00) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6966 [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6972' (00) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6970 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6974' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$986.$reduce_or$<techmap.v>:441$5981_Y = $auto$simplemap.cc:127:simplemap_reduce$6970 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7150' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1794.$and$<techmap.v>:434$5028_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7162' (0?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1794.$reduce_or$<techmap.v>:441$5033_Y = $techmap$procmux$1794.$and$<techmap.v>:434$5029_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7255' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1832.$and$<techmap.v>:434$6180_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7256' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1832.$and$<techmap.v>:434$6179_Y = $auto$opt_reduce.cc:132:opt_mux$2504'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7251' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7250 = $auto$opt_reduce.cc:132:opt_mux$2504'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7276' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1845.$and$<techmap.v>:434$6632_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7268' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7267 [0] = $techmap$procmux$1845.$and$<techmap.v>:434$6631_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7277' (const_and) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1845.$and$<techmap.v>:434$6632_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7279' (1?) in module `\NRISC_InstructionDecoder' with constant driver `$techmap$procmux$1845.$and$<techmap.v>:434$6631_Y [1] = $procmux$1691_CMP'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7263' (?0) in module `\NRISC_InstructionDecoder' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7262 [0] = $procmux$1691_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4959' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4957 [0] = \PC_pointer [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4942' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4939 [1] = \PC_pointer [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4890' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4888 [0] = \CORE_PC_ctrl [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5049' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5047 [0] = \CORE_STACK_ctrl [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5050' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5047 [1] = \CORE_STACK_ctrl [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5038' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5034 [2] = \INTERRUPT_flag'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5037' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5034 [1] = \CORE_STACK_ctrl [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5665' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$ternary$<techmap.v>:258$5022_Y [0] = \PC_pointer [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5821' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:212$5207_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5657' (1?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$and$<techmap.v>:260$5023_Y [0] = \PC_pointer [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5790' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2577 [0] = \PC_pointer [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5666' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$ternary$<techmap.v>:258$5022_Y [1] = \PC_pointer [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5649' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$xor$<techmap.v>:262$5024_Y [1] = \PC_pointer [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5005' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5003 [0] = \CORE_STACK_ctrl [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5007' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5003 [2] = \INTERRUPT_flag'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5644' (1) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$not$<techmap.v>:258$5016_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5250' (101) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$ternary$<techmap.v>:258$5017_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5254' (?0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$xor$<techmap.v>:262$5019_Y [0] = \PC_pointer [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5826' (?1) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.lcu.$and$<techmap.v>:212$5207_Y = \PC_pointer [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5229' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$and$<techmap.v>:260$5018_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5819' (0?) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2580 [0] = \PC_pointer [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5645' (0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$not$<techmap.v>:258$5016_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5251' (011) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$ternary$<techmap.v>:258$5017_Y [1] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5652' (?0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$xor$<techmap.v>:263$5025_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$2575.$xor$<techmap.v>:262$5024_Y [0]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4878' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4828' in module `NRISC_PC_ctrl'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4833' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4830 [1] = \INTERRUPT_flag'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4913' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4911 [0] = $techmap$procmux$926.$ternary$<techmap.v>:445$5027_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4904' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4901 [1] = $techmap$procmux$926.$ternary$<techmap.v>:445$5027_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5379' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$ternary$<techmap.v>:258$5129_Y [5] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5532' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$and$<techmap.v>:260$5130_Y [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5378' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$ternary$<techmap.v>:258$5129_Y [4] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5531' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$and$<techmap.v>:260$5130_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5641' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:262$5131_Y [5] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5815' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5488_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5789' (00) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:221$5489_Y = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5377' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$ternary$<techmap.v>:258$5129_Y [3] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5530' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$and$<techmap.v>:260$5130_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5376' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$ternary$<techmap.v>:258$5129_Y [2] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5529' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$and$<techmap.v>:260$5130_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5639' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:262$5131_Y [3] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5816' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5485_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5791' (00) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:221$5486_Y = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5375' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$ternary$<techmap.v>:258$5129_Y [1] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5528' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$and$<techmap.v>:260$5130_Y [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5374' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$ternary$<techmap.v>:258$5129_Y [0] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5527' (1?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$and$<techmap.v>:260$5130_Y [0] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5818' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:212$5480_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5794' (?0) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2574 [0] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5637' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:262$5131_Y [1] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [1]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5793' (0?) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2574 [1] = $techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5482_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5638' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:262$5131_Y [2] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5786' (0?) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2574 [3] = $techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5494_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5640' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:262$5131_Y [4] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [4]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5780' (0?) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2574 [5] = $techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:229$5503_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5380' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$ternary$<techmap.v>:258$5129_Y [6] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5642' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:262$5131_Y [6] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [6]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4955' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4827' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4829' in module `NRISC_PC_ctrl'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5779' (0?) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2574 [2] = $techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:229$5506_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5539' (?0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:263$5132_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:262$5131_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5381' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$ternary$<techmap.v>:258$5129_Y [7] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5534' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$and$<techmap.v>:260$5130_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5778' (0?) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2574 [4] = $techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:229$5509_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4872' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4822' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4949' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4879' in module `NRISC_PC_ctrl'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5643' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:262$5131_Y [7] = $techmap$procmux$825.$ternary$<techmap.v>:445$4810_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5533' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$and$<techmap.v>:260$5130_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5777' (0?) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2574 [6] = $techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:229$5512_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4956' in module `NRISC_PC_ctrl'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5647' (0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$not$<techmap.v>:258$5016_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5253' (011) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$ternary$<techmap.v>:258$5017_Y [3] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5646' (0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$not$<techmap.v>:258$5016_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5252' (011) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$ternary$<techmap.v>:258$5017_Y [2] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5230' (?1) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$and$<techmap.v>:260$5018_Y [1] = \PC_pointer [1]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4826' in module `NRISC_PC_ctrl'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5231' (?1) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$and$<techmap.v>:260$5018_Y [2] = \PC_pointer [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5814' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5491_Y = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5668' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$ternary$<techmap.v>:258$5022_Y [3] = \PC_pointer [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5651' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$xor$<techmap.v>:262$5024_Y [3] = \PC_pointer [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5667' (??0) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$ternary$<techmap.v>:258$5022_Y [2] = \PC_pointer [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5650' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$xor$<techmap.v>:262$5024_Y [2] = \PC_pointer [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5788' (00) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:221$5492_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5812' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5497_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5658' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$and$<techmap.v>:260$5023_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5787' (0?) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2577 [1] = $techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:221$5209_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5659' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$and$<techmap.v>:260$5023_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5783' (0?) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2577 [2] = $techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:229$5218_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5798' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:221$5212_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5660' (const_and) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$and$<techmap.v>:260$5023_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5782' (00) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$or$<techmap.v>:221$5213_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5785' (0?) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2577 [3] = $techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:221$5215_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5784' (00) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$or$<techmap.v>:221$5498_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5781' (0?) in module `\NRISC_PC_ctrl' with constant driver `$auto$alumacc.cc:484:replace_alu$2574 [7] = $techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5500_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5232' (?1) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$and$<techmap.v>:260$5018_Y [3] = \PC_pointer [3]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4951' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4824' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4874' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4876' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4953' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4877' in module `NRISC_PC_ctrl'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5241' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2578.$xor$<techmap.v>:263$5020_Y [4] = $auto$alumacc.cc:484:replace_alu$2580 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5547' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2572.$xor$<techmap.v>:263$5132_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$2572.lcu.$and$<techmap.v>:221$5500_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4954' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4952' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4950' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4875' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4873' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4825' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4823' in module `NRISC_PC_ctrl'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5656' (0?) in module `\NRISC_PC_ctrl' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$2575.$xor$<techmap.v>:263$5025_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$2575.lcu.$and$<techmap.v>:221$5215_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$10339' (1?) in module `\NRISC_REGs' with constant driver `$memory\FIRQ_REGS$wren[0][0][0]$y$2777 = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10200' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10198 [0] = \REG_RFD [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10170' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10168 [0] = \REG_RFD [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10171' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10168 [1] = \REG_RFD [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10186' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10183 [1] = \REG_RFD [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10140' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10138 [0] = \REG_RFD [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10142' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10138 [2] = \REG_RFD [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10157' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10153 [2] = \REG_RFD [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10110' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10108 [0] = \REG_RFD [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10111' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10108 [1] = \REG_RFD [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10112' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10108 [2] = \REG_RFD [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10126' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10123 [1] = \REG_RFD [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10127' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10123 [2] = \REG_RFD [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$12714' (0) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$not$<techmap.v>:258$10469_Y [0] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$12711' (011) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$ternary$<techmap.v>:258$10470_Y [0] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12722' (?1) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.lcu.$and$<techmap.v>:212$12703_Y = $techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12693' (?1) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$and$<techmap.v>:260$10471_Y [0] = \REG_RFD [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$12715' (1) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$not$<techmap.v>:258$10469_Y [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$12712' (101) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$ternary$<techmap.v>:258$10470_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$12691' (?0) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472_Y [1] = \REG_RFD [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12694' (const_and) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$and$<techmap.v>:260$10471_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$12718' (0?) in module `\NRISC_REGs' with constant driver `$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:484:replace_alu$8461 [1] = $techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.lcu.$and$<techmap.v>:221$12705_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$12716' (0) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$not$<techmap.v>:258$10469_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$12713' (011) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$ternary$<techmap.v>:258$10470_Y [2] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9977' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9975 [0] = \REG_RFD [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9979' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9975 [2] = \REG_RFD [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9980' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9975 [3] = \REG_RFD [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9994' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9990 [2] = \REG_RFD [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9995' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9990 [3] = \REG_RFD [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10037' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10035 [0] = \REG_RFD [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10040' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10035 [3] = \REG_RFD [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10055' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10050 [3] = \REG_RFD [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10007' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10005 [0] = \REG_RFD [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10008' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10005 [1] = \REG_RFD [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10010' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10005 [3] = \REG_RFD [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10023' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10020 [1] = \REG_RFD [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10025' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$10020 [3] = \REG_RFD [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9411' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9409 [0] = \REG_RF2 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9427' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9424 [1] = \REG_RF2 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9441' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9439 [0] = \REG_RF2 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9442' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9439 [1] = \REG_RF2 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9458' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9454 [2] = \REG_RF2 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9471' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9469 [0] = \REG_RF2 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9473' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9469 [2] = \REG_RF2 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9487' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9484 [1] = \REG_RF2 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9488' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9484 [2] = \REG_RF2 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9501' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9499 [0] = \REG_RF2 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9502' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9499 [1] = \REG_RF2 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9503' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9499 [2] = \REG_RF2 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9519' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9514 [3] = \REG_RF2 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9531' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9529 [0] = \REG_RF2 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9534' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9529 [3] = \REG_RF2 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9547' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9544 [1] = \REG_RF2 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9549' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9544 [3] = \REG_RF2 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9561' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9559 [0] = \REG_RF2 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9562' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9559 [1] = \REG_RF2 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9564' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9559 [3] = \REG_RF2 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9578' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9574 [2] = \REG_RF2 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9579' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9574 [3] = \REG_RF2 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9591' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9589 [0] = \REG_RF2 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9593' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9589 [2] = \REG_RF2 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9594' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9589 [3] = \REG_RF2 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9607' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9604 [1] = \REG_RF2 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9608' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9604 [2] = \REG_RF2 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9609' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9604 [3] = \REG_RF2 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9636' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9634 [0] = \REG_RF1 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12695' (?1) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$and$<techmap.v>:260$10471_Y [2] = \REG_RFD [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9652' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9649 [1] = \REG_RF1 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9666' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9664 [0] = \REG_RF1 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9667' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9664 [1] = \REG_RF1 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9683' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9679 [2] = \REG_RF1 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9696' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9694 [0] = \REG_RF1 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9698' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9694 [2] = \REG_RF1 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9712' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9709 [1] = \REG_RF1 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9713' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9709 [2] = \REG_RF1 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9726' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9724 [0] = \REG_RF1 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9727' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9724 [1] = \REG_RF1 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9728' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9724 [2] = \REG_RF1 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9744' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9739 [3] = \REG_RF1 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9756' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9754 [0] = \REG_RF1 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9759' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9754 [3] = \REG_RF1 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9772' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9769 [1] = \REG_RF1 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9774' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9769 [3] = \REG_RF1 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9786' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9784 [0] = \REG_RF1 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9787' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9784 [1] = \REG_RF1 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9789' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9784 [3] = \REG_RF1 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9803' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9799 [2] = \REG_RF1 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9804' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9799 [3] = \REG_RF1 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9816' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9814 [0] = \REG_RF1 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9818' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9814 [2] = \REG_RF1 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9819' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9814 [3] = \REG_RF1 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9832' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9829 [1] = \REG_RF1 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9833' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9829 [2] = \REG_RF1 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9834' (?0) in module `\NRISC_REGs' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$9829 [3] = \REG_RF1 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$12689' (0?) in module `\NRISC_REGs' with constant driver `$techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:263$10473_Y [3] = $techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:484:replace_alu$8461 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14618' (?0) in module `\NRISC_ULA' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$14616 [0] = \ULA_ctrl [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14644' (?0) in module `\NRISC_ULA' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$14642 [0] = \ULA_ctrl [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14645' (?0) in module `\NRISC_ULA' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$14642 [1] = \ULA_ctrl [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14632' (?0) in module `\NRISC_ULA' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$14629 [1] = \ULA_ctrl [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14672' (?0) in module `\NRISC_ULA' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$14668 [2] = \ULA_ctrl [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14670' (?0) in module `\NRISC_ULA' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$14668 [0] = \ULA_ctrl [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14659' (?0) in module `\NRISC_ULA' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$14655 [2] = \ULA_ctrl [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14685' (?0) in module `\NRISC_ULA' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$14681 [2] = \ULA_ctrl [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14684' (?0) in module `\NRISC_ULA' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$14681 [1] = \ULA_ctrl [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12796' (?x) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:106$76_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12797' (const_and) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:106$78_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12798' (const_and) in module `\NRISC_ULA' with constant driver `\minsub = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12790' (?x) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:105$65_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12791' (const_and) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:105$67_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12792' (const_and) in module `\NRISC_ULA' with constant driver `\minsom = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$12842' (00) in module `\NRISC_ULA' with constant driver `\minus = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12783' (?x) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:103$55_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12784' (const_and) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:103$57_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12785' (const_and) in module `\NRISC_ULA' with constant driver `\carrymin0 = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$12801' (0) in module `\NRISC_ULA' with constant driver `$not$NRISC_ULA.v:107$84_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12799' (?x) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:107$81_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12800' (const_and) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:107$83_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12802' (const_and) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:107$85_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12738' (?x) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:101$42_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12739' (const_and) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:101$43_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12740' (const_and) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:101$44_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12741' (const_and) in module `\NRISC_ULA' with constant driver `\carryl = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$12803' (00) in module `\NRISC_ULA' with constant driver `$or$NRISC_ULA.v:107$86_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12742' (?x) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:102$48_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12743' (const_and) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:102$49_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12744' (const_and) in module `\NRISC_ULA' with constant driver `$and$NRISC_ULA.v:102$51_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$12745' (const_and) in module `\NRISC_ULA' with constant driver `\carryr = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$12804' (00) in module `\NRISC_ULA' with constant driver `\carry = 1'0'.

7.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6515' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6549'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6511 [3] = $auto$simplemap.cc:168:logic_reduce$6545 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6515' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6514' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6548'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6511 [2] = $auto$simplemap.cc:168:logic_reduce$6545 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6514' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6513' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6547'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6511 [1] = $auto$simplemap.cc:168:logic_reduce$6545 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6513' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6958' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6899'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6957 [0] = $auto$simplemap.cc:127:simplemap_reduce$6898 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6958' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6967' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6899'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6966 [0] = $auto$simplemap.cc:127:simplemap_reduce$6898 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6967' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6835' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6849'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6834 [0] = $auto$simplemap.cc:127:simplemap_reduce$6848 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6835' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6491' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6549'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6487 [3] = $auto$simplemap.cc:168:logic_reduce$6545 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6491' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6490' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6548'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6487 [2] = $auto$simplemap.cc:168:logic_reduce$6545 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6490' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6489' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6547'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6487 [1] = $auto$simplemap.cc:168:logic_reduce$6545 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6489' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6460' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6549'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6456 [3] = $auto$simplemap.cc:168:logic_reduce$6545 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6460' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6459' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6548'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6456 [2] = $auto$simplemap.cc:168:logic_reduce$6545 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6459' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6458' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6547'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6456 [1] = $auto$simplemap.cc:168:logic_reduce$6545 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6458' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6447' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6478'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6444 [1] = $auto$simplemap.cc:250:simplemap_eqne$6475 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6447' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6446' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6501'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6444 [0] = $auto$simplemap.cc:250:simplemap_eqne$6499 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6446' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6746' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6741'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6745 [0] = $auto$simplemap.cc:127:simplemap_reduce$6740 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6746' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:177:logic_reduce$6405' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6597'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$6404 = $auto$simplemap.cc:127:simplemap_reduce$6596
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$6405' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6394' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6527'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6391 [1] = $auto$simplemap.cc:250:simplemap_eqne$6524 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6394' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6380' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6526'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6378 [0] = $auto$simplemap.cc:250:simplemap_eqne$6524 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6380' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6357' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6527'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6354 [1] = $auto$simplemap.cc:250:simplemap_eqne$6524 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6357' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6356' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6526'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6354 [0] = $auto$simplemap.cc:250:simplemap_eqne$6524 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6356' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6344' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6527'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6341 [1] = $auto$simplemap.cc:250:simplemap_eqne$6524 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6344' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6345' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6358'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6341 [2] = $auto$simplemap.cc:250:simplemap_eqne$6354 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6345' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6320' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6527'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6317 [1] = $auto$simplemap.cc:250:simplemap_eqne$6524 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6320' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6319' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6526'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6317 [0] = $auto$simplemap.cc:250:simplemap_eqne$6524 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6319' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6312' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6327'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6310 [1] = $auto$simplemap.cc:127:simplemap_reduce$6325 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6312' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6305' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6527'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6302 [1] = $auto$simplemap.cc:250:simplemap_eqne$6524 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6305' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6297' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6327'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6295 [1] = $auto$simplemap.cc:127:simplemap_reduce$6325 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6297' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6289' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6526'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6287 [0] = $auto$simplemap.cc:250:simplemap_eqne$6524 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6289' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:177:logic_reduce$6283' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6327'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$6281 [1] = $auto$simplemap.cc:127:simplemap_reduce$6325 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$6283' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:177:logic_reduce$6282' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6374'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$6281 [0] = $auto$simplemap.cc:168:logic_reduce$6373
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$6282' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7284' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7247'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7282 [1] = $auto$simplemap.cc:127:simplemap_reduce$7245 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7284' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6252' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6358'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6248 [2] = $auto$simplemap.cc:250:simplemap_eqne$6354 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6252' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6251' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6527'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6248 [1] = $auto$simplemap.cc:250:simplemap_eqne$6524 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6251' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6250' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6526'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6248 [0] = $auto$simplemap.cc:250:simplemap_eqne$6524 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6250' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6237' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6358'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6233 [2] = $auto$simplemap.cc:250:simplemap_eqne$6354 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6237' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6236' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6527'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6233 [1] = $auto$simplemap.cc:250:simplemap_eqne$6524 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6236' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6222' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6358'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6218 [2] = $auto$simplemap.cc:250:simplemap_eqne$6354 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6222' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6220' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6526'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6218 [0] = $auto$simplemap.cc:250:simplemap_eqne$6524 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6220' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6212' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6374'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6211 [0] = $auto$simplemap.cc:168:logic_reduce$6373
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6212' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6207' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6358'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6203 [2] = $auto$simplemap.cc:250:simplemap_eqne$6354 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6207' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6195' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6526'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6193 [0] = $auto$simplemap.cc:250:simplemap_eqne$6524 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6195' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6186' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6527'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6183 [1] = $auto$simplemap.cc:250:simplemap_eqne$6524 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6186' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6169' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6526'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6167 [0] = $auto$simplemap.cc:250:simplemap_eqne$6524 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6169' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6170' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6527'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6167 [1] = $auto$simplemap.cc:250:simplemap_eqne$6524 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6170' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6900' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6968'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6898 [1] = $auto$simplemap.cc:127:simplemap_reduce$6966 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6900' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6811' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6836'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6809 [1] = $auto$simplemap.cc:127:simplemap_reduce$6834 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6811' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6151' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6265'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6147 [3] = $auto$simplemap.cc:127:simplemap_reduce$6263 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6151' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6150' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6264'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6147 [2] = $auto$simplemap.cc:127:simplemap_reduce$6263 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6150' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6149' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6147 [1] = $auto$simplemap.cc:127:simplemap_reduce$6332 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6149' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6148' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6333'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6147 [0] = $auto$simplemap.cc:127:simplemap_reduce$6332 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6148' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6127' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6547'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6125 [1] = $auto$simplemap.cc:168:logic_reduce$6545 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6127' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6119' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6501'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6117 [0] = $auto$simplemap.cc:250:simplemap_eqne$6499 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6119' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6112' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6547'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6110 [1] = $auto$simplemap.cc:168:logic_reduce$6545 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6112' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6105' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6478'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6102 [1] = $auto$simplemap.cc:250:simplemap_eqne$6475 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6105' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6097' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6547'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6095 [1] = $auto$simplemap.cc:168:logic_reduce$6545 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6097' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6090' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6478'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6087 [1] = $auto$simplemap.cc:250:simplemap_eqne$6475 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6090' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6089' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6501'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6087 [0] = $auto$simplemap.cc:250:simplemap_eqne$6499 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6089' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6081' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6546'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6080 [0] = $auto$simplemap.cc:168:logic_reduce$6545 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6081' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6871' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6895'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6870 = $auto$simplemap.cc:127:simplemap_reduce$6894
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6871' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6056' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6076'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6052 [2] = $auto$simplemap.cc:250:simplemap_eqne$6072 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6056' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6054' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6501'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6052 [0] = $auto$simplemap.cc:250:simplemap_eqne$6499 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6054' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6042' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6135'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6039 [1] = $auto$simplemap.cc:250:simplemap_eqne$6132 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6042' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6041' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6270'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6039 [0] = $auto$simplemap.cc:250:simplemap_eqne$6268 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6041' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:177:logic_reduce$6037' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6327'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$6036 = $auto$simplemap.cc:127:simplemap_reduce$6325 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$6037' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6028' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6358'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6026 [0] = $auto$simplemap.cc:250:simplemap_eqne$6354 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6028' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5997' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6270'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5995 [0] = $auto$simplemap.cc:250:simplemap_eqne$6268 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5997' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5999' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6593'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5995 [2] = $auto$simplemap.cc:250:simplemap_eqne$6589 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5999' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5985' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6135'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5982 [1] = $auto$simplemap.cc:250:simplemap_eqne$6132 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5985' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5986' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6593'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5982 [2] = $auto$simplemap.cc:250:simplemap_eqne$6589 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5986' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5959' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6135'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5956 [1] = $auto$simplemap.cc:250:simplemap_eqne$6132 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5959' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5958' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6270'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5956 [0] = $auto$simplemap.cc:250:simplemap_eqne$6268 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5958' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5960' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6593'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5956 [2] = $auto$simplemap.cc:250:simplemap_eqne$6589 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5960' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:177:logic_reduce$5937' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6547'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$5935 [1] = $auto$simplemap.cc:168:logic_reduce$6545 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$5937' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:177:logic_reduce$5936' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6546'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$5935 [0] = $auto$simplemap.cc:168:logic_reduce$6545 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$5936' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5923' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6135'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5920 [1] = $auto$simplemap.cc:250:simplemap_eqne$6132 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5923' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5868' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6135'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5865 [1] = $auto$simplemap.cc:250:simplemap_eqne$6132 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5868' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5867' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6270'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5865 [0] = $auto$simplemap.cc:250:simplemap_eqne$6268 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5867' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5853' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6135'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5850 [1] = $auto$simplemap.cc:250:simplemap_eqne$6132 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5853' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5855' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5870'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5850 [3] = $auto$simplemap.cc:250:simplemap_eqne$5865 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5855' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5835' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6901'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5833 [1] = $auto$simplemap.cc:127:simplemap_reduce$6898 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5835' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5834' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6416'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5833 [0] = $auto$simplemap.cc:127:simplemap_reduce$6415
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5834' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5830' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7283'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5829 = $auto$simplemap.cc:127:simplemap_reduce$7282 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5830' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5839' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6901'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2502 = $auto$simplemap.cc:127:simplemap_reduce$6898 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5839' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5841' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7283'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2504 = $auto$simplemap.cc:127:simplemap_reduce$7282 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5841' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5828' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6747'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2500 = $auto$simplemap.cc:127:simplemap_reduce$6745 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5828' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6146' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7065'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2528 = $auto$simplemap.cc:127:simplemap_reduce$7064
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6146' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6808' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6976'.
    Redirecting output \Y: $techmap$procmux$1039.$reduce_or$<techmap.v>:445$6067_Y = $techmap$procmux$1020.$reduce_or$<techmap.v>:445$6067_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6808' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7027' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7015'.
    Redirecting output \Y: $techmap$procmux$1186.$reduce_or$<techmap.v>:445$6367_Y = $techmap$procmux$1167.$reduce_or$<techmap.v>:445$6367_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7027' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7095' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7081'.
    Redirecting output \Y: $techmap$procmux$1716.$reduce_or$<techmap.v>:445$6067_Y = $techmap$procmux$1690.$reduce_or$<techmap.v>:445$6067_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7095' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7102' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7088'.
    Redirecting output \Y: $techmap$procmux$1729.$reduce_or$<techmap.v>:445$6067_Y = $techmap$procmux$1703.$reduce_or$<techmap.v>:445$6067_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7102' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7146' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7114'.
    Redirecting output \Y: $techmap$procmux$1781.$reduce_or$<techmap.v>:445$6367_Y = $techmap$procmux$1742.$reduce_or$<techmap.v>:445$6367_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7146' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6518' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6552'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6516 [1] = $auto$simplemap.cc:168:logic_reduce$6550 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6518' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6494' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6552'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6492 [1] = $auto$simplemap.cc:168:logic_reduce$6550 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6494' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6463' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6552'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6461 [1] = $auto$simplemap.cc:168:logic_reduce$6550 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6463' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6971' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6903'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6970 [0] = $auto$simplemap.cc:127:simplemap_reduce$6902 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6971' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6362' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6532'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6361 = $auto$simplemap.cc:127:simplemap_reduce$6531
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6362' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6349' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6399'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6348 = $auto$simplemap.cc:127:simplemap_reduce$6398
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6349' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6326' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6532'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6325 [0] = $auto$simplemap.cc:127:simplemap_reduce$6531
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6326' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6311' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6399'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6310 [0] = $auto$simplemap.cc:127:simplemap_reduce$6398
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6311' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6296' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6386'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6295 [0] = $auto$simplemap.cc:127:simplemap_reduce$6385
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6296' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6257' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6532'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6256 [0] = $auto$simplemap.cc:127:simplemap_reduce$6531
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6257' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6243' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6258'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6241 [1] = $auto$simplemap.cc:127:simplemap_reduce$6256 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6243' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6242' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6399'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6241 [0] = $auto$simplemap.cc:127:simplemap_reduce$6398
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6242' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6228' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6258'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6226 [1] = $auto$simplemap.cc:127:simplemap_reduce$6256 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6228' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6227' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6386'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6226 [0] = $auto$simplemap.cc:127:simplemap_reduce$6385
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6227' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6213' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6258'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6211 [1] = $auto$simplemap.cc:127:simplemap_reduce$6256 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6213' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6200' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6386'.
    Redirecting output \Y: $auto$simplemap.cc:256:simplemap_eqne$6197 = $auto$simplemap.cc:127:simplemap_reduce$6385
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6200' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6190' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6399'.
    Redirecting output \Y: $auto$simplemap.cc:256:simplemap_eqne$6187 = $auto$simplemap.cc:127:simplemap_reduce$6398
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6190' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6174' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6532'.
    Redirecting output \Y: $auto$simplemap.cc:256:simplemap_eqne$6171 = $auto$simplemap.cc:127:simplemap_reduce$6531
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6174' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6126' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6512'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6125 [0] = $auto$simplemap.cc:127:simplemap_reduce$6511 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6126' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6129' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6517'.
    Redirecting output \Y: $auto$simplemap.cc:256:simplemap_eqne$6123 = $auto$simplemap.cc:127:simplemap_reduce$6516 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6129' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6111' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6488'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6110 [0] = $auto$simplemap.cc:127:simplemap_reduce$6487 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6111' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6114' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6493'.
    Redirecting output \Y: $auto$simplemap.cc:256:simplemap_eqne$6108 = $auto$simplemap.cc:127:simplemap_reduce$6492 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6114' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6096' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6457'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6095 [0] = $auto$simplemap.cc:127:simplemap_reduce$6456 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6096' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6099' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6462'.
    Redirecting output \Y: $auto$simplemap.cc:256:simplemap_eqne$6093 = $auto$simplemap.cc:127:simplemap_reduce$6461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6099' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6062' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6082'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6060 [1] = $auto$simplemap.cc:127:simplemap_reduce$6080 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6062' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6061' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6512'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6060 [0] = $auto$simplemap.cc:127:simplemap_reduce$6511 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6061' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6033' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6258'.
    Redirecting output \Y: $auto$simplemap.cc:256:simplemap_eqne$6030 = $auto$simplemap.cc:127:simplemap_reduce$6256 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6033' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6003' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6276'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6002 = $auto$simplemap.cc:127:simplemap_reduce$6275
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6003' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5990' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6140'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5989 = $auto$simplemap.cc:127:simplemap_reduce$6139
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5990' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5964' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6047'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5963 = $auto$simplemap.cc:127:simplemap_reduce$6046
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5964' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:177:logic_reduce$5939' is identical to cell `$auto$simplemap.cc:177:logic_reduce$6551'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$5938 = $auto$simplemap.cc:168:logic_reduce$6550 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$5939' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5929' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6140'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5928 [0] = $auto$simplemap.cc:127:simplemap_reduce$6139
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5929' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5874' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6047'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5873 [0] = $auto$simplemap.cc:127:simplemap_reduce$6046
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5874' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5860' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5875'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5858 [1] = $auto$simplemap.cc:127:simplemap_reduce$5873 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5860' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5859' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6140'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5858 [0] = $auto$simplemap.cc:127:simplemap_reduce$6139
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5859' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6267' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6154'.
    Redirecting output \Y: $procmux$1083_CTRL = $auto$simplemap.cc:127:simplemap_reduce$6152 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6267' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6336' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6153'.
    Redirecting output \Y: $procmux$1104_CTRL = $auto$simplemap.cc:127:simplemap_reduce$6152 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6336' from module `\NRISC_InstructionDecoder'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6156' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6999'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$2526 = $techmap$procmux$1150.$reduce_or$<techmap.v>:445$5026_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6156' from module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5565' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5569'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5564 = $auto$simplemap.cc:127:simplemap_reduce$5568
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5565' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5237' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5648'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$2578.$xor$<techmap.v>:263$5020_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$2575.$xor$<techmap.v>:262$5024_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5237' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5234' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5569'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5233 = $auto$simplemap.cc:127:simplemap_reduce$5568
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5234' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5125' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5411'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5124 = $auto$simplemap.cc:127:simplemap_reduce$5410
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5125' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5117' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5411'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5116 = $auto$simplemap.cc:127:simplemap_reduce$5410
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5117' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4995' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5648'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4993 [0] = $techmap$auto$alumacc.cc:470:replace_alu$2575.$xor$<techmap.v>:262$5024_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4995' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4996' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5255'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4993 [1] = $techmap$auto$alumacc.cc:470:replace_alu$2578.$xor$<techmap.v>:262$5019_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4996' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5774' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5569'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5773 = $auto$simplemap.cc:127:simplemap_reduce$5568
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5774' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4960' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5255'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4957 [1] = $techmap$auto$alumacc.cc:470:replace_alu$2578.$xor$<techmap.v>:262$5019_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4960' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4941' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5648'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4939 [0] = $techmap$auto$alumacc.cc:470:replace_alu$2575.$xor$<techmap.v>:262$5024_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4941' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4914' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4932'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4911 [1] = $auto$simplemap.cc:250:simplemap_eqne$4929 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4914' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4903' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4931'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4901 [0] = $auto$simplemap.cc:250:simplemap_eqne$4929 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4903' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4891' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5051'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4888 [1] = $auto$simplemap.cc:250:simplemap_eqne$5047 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4891' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5413' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5119'.
    Redirecting output \Y: $techmap$procmux$825.$reduce_or$<techmap.v>:445$4809_Y = $auto$opt_reduce.cc:132:opt_mux$2530
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5413' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5776' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5571'.
    Redirecting output \Y: $techmap$procmux$844.$reduce_or$<techmap.v>:445$4809_Y = $techmap$procmux$836.$reduce_or$<techmap.v>:445$4809_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5776' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5567' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5571'.
    Redirecting output \Y: $techmap$procmux$852.$reduce_or$<techmap.v>:445$4809_Y = $techmap$procmux$836.$reduce_or$<techmap.v>:445$4809_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5567' from module `\NRISC_PC_ctrl'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5236' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5571'.
    Redirecting output \Y: $techmap$procmux$860.$reduce_or$<techmap.v>:445$4809_Y = $techmap$procmux$836.$reduce_or$<techmap.v>:445$4809_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5236' from module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10217' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$12692'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10213 [2] = $techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10217' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10202' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$12692'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10198 [2] = $techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10202' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10201' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10216'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10198 [1] = $auto$simplemap.cc:250:simplemap_eqne$10213 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10201' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10203' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10218'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10198 [3] = $auto$simplemap.cc:250:simplemap_eqne$10213 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10203' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10187' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$12692'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10183 [2] = $techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10187' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10185' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10215'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10183 [0] = $auto$simplemap.cc:250:simplemap_eqne$10213 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10185' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10188' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10218'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10183 [3] = $auto$simplemap.cc:250:simplemap_eqne$10213 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10188' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10172' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$12692'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10168 [2] = $techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10172' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10173' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10218'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10168 [3] = $auto$simplemap.cc:250:simplemap_eqne$10213 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10173' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10156' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10216'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10153 [1] = $auto$simplemap.cc:250:simplemap_eqne$10213 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10156' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10155' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10215'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10153 [0] = $auto$simplemap.cc:250:simplemap_eqne$10213 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10155' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10158' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10218'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10153 [3] = $auto$simplemap.cc:250:simplemap_eqne$10213 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10158' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10141' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10216'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10138 [1] = $auto$simplemap.cc:250:simplemap_eqne$10213 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10141' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10143' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10218'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10138 [3] = $auto$simplemap.cc:250:simplemap_eqne$10213 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10143' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10125' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10215'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10123 [0] = $auto$simplemap.cc:250:simplemap_eqne$10213 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10125' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10128' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10218'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10123 [3] = $auto$simplemap.cc:250:simplemap_eqne$10213 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10128' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10117' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10177'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10116 [0] = $auto$simplemap.cc:127:simplemap_reduce$10176 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10117' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$12690' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10215'.
    Redirecting output \Y: $techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472_Y [0] = $auto$simplemap.cc:250:simplemap_eqne$10213 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$12690' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10113' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10218'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10108 [3] = $auto$simplemap.cc:250:simplemap_eqne$10213 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10113' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10054' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$12692'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10050 [2] = $techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10054' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10053' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10216'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10050 [1] = $auto$simplemap.cc:250:simplemap_eqne$10213 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10053' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10052' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10215'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10050 [0] = $auto$simplemap.cc:250:simplemap_eqne$10213 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10052' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10039' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$12692'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10035 [2] = $techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10039' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10038' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10216'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10035 [1] = $auto$simplemap.cc:250:simplemap_eqne$10213 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10038' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10024' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$12692'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10020 [2] = $techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10024' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10022' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10215'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10020 [0] = $auto$simplemap.cc:250:simplemap_eqne$10213 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10022' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10014' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10177'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10013 [0] = $auto$simplemap.cc:127:simplemap_reduce$10176 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10014' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$10009' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$12692'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$10005 [2] = $techmap$techmap$auto$memory_map.cc:285:handle_cell$4092.$auto$alumacc.cc:470:replace_alu$8459.$xor$<techmap.v>:262$10472_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$10009' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9993' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10216'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9990 [1] = $auto$simplemap.cc:250:simplemap_eqne$10213 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9993' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9992' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10215'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9990 [0] = $auto$simplemap.cc:250:simplemap_eqne$10213 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9992' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9985' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10000'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9983 [1] = $auto$simplemap.cc:127:simplemap_reduce$9998 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9985' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9978' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$10216'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9975 [1] = $auto$simplemap.cc:250:simplemap_eqne$10213 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9978' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9824' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9839'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9822 [1] = $auto$simplemap.cc:127:simplemap_reduce$9837 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9824' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9809' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9839'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9807 [1] = $auto$simplemap.cc:127:simplemap_reduce$9837 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9809' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9802' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9817'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9799 [1] = $auto$simplemap.cc:250:simplemap_eqne$9814 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9802' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9801' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9831'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9799 [0] = $auto$simplemap.cc:250:simplemap_eqne$9829 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9801' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9773' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9788'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9769 [2] = $auto$simplemap.cc:250:simplemap_eqne$9784 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9773' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9771' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9831'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9769 [0] = $auto$simplemap.cc:250:simplemap_eqne$9829 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9771' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9758' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9788'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9754 [2] = $auto$simplemap.cc:250:simplemap_eqne$9784 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9758' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9757' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9817'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9754 [1] = $auto$simplemap.cc:250:simplemap_eqne$9814 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9757' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9743' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9788'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9739 [2] = $auto$simplemap.cc:250:simplemap_eqne$9784 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9743' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9742' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9817'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9739 [1] = $auto$simplemap.cc:250:simplemap_eqne$9814 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9742' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9741' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9831'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9739 [0] = $auto$simplemap.cc:250:simplemap_eqne$9829 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9741' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9733' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9793'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9732 [0] = $auto$simplemap.cc:127:simplemap_reduce$9792 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9733' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9711' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9831'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9709 [0] = $auto$simplemap.cc:250:simplemap_eqne$9829 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9711' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9714' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9729'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9709 [3] = $auto$simplemap.cc:250:simplemap_eqne$9724 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9714' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9697' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9817'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9694 [1] = $auto$simplemap.cc:250:simplemap_eqne$9814 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9697' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9699' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9729'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9694 [3] = $auto$simplemap.cc:250:simplemap_eqne$9724 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9699' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9682' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9817'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9679 [1] = $auto$simplemap.cc:250:simplemap_eqne$9814 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9682' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9681' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9831'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9679 [0] = $auto$simplemap.cc:250:simplemap_eqne$9829 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9681' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9684' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9729'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9679 [3] = $auto$simplemap.cc:250:simplemap_eqne$9724 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9684' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9673' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9793'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9672 [0] = $auto$simplemap.cc:127:simplemap_reduce$9792 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9673' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9668' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9788'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9664 [2] = $auto$simplemap.cc:250:simplemap_eqne$9784 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9668' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9669' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9729'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9664 [3] = $auto$simplemap.cc:250:simplemap_eqne$9724 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9669' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9653' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9788'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9649 [2] = $auto$simplemap.cc:250:simplemap_eqne$9784 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9653' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9651' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9831'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9649 [0] = $auto$simplemap.cc:250:simplemap_eqne$9829 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9651' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9654' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9729'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9649 [3] = $auto$simplemap.cc:250:simplemap_eqne$9724 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9654' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9638' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9788'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9634 [2] = $auto$simplemap.cc:250:simplemap_eqne$9784 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9638' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9637' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9817'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9634 [1] = $auto$simplemap.cc:250:simplemap_eqne$9814 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9637' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9639' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9729'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9634 [3] = $auto$simplemap.cc:250:simplemap_eqne$9724 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9639' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9623' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9788'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9619 [2] = $auto$simplemap.cc:250:simplemap_eqne$9784 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9623' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9622' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9817'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9619 [1] = $auto$simplemap.cc:250:simplemap_eqne$9814 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9622' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9621' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9831'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9619 [0] = $auto$simplemap.cc:250:simplemap_eqne$9829 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9621' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9624' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9729'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9619 [3] = $auto$simplemap.cc:250:simplemap_eqne$9724 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9624' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9599' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9614'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9597 [1] = $auto$simplemap.cc:127:simplemap_reduce$9612 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9599' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9584' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9614'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9582 [1] = $auto$simplemap.cc:127:simplemap_reduce$9612 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9584' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9577' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9592'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9574 [1] = $auto$simplemap.cc:250:simplemap_eqne$9589 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9577' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9576' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9606'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9574 [0] = $auto$simplemap.cc:250:simplemap_eqne$9604 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9576' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9548' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9563'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9544 [2] = $auto$simplemap.cc:250:simplemap_eqne$9559 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9548' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9546' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9606'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9544 [0] = $auto$simplemap.cc:250:simplemap_eqne$9604 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9546' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9533' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9563'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9529 [2] = $auto$simplemap.cc:250:simplemap_eqne$9559 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9533' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9532' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9592'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9529 [1] = $auto$simplemap.cc:250:simplemap_eqne$9589 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9532' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9518' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9563'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9514 [2] = $auto$simplemap.cc:250:simplemap_eqne$9559 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9518' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9517' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9592'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9514 [1] = $auto$simplemap.cc:250:simplemap_eqne$9589 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9517' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9516' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9606'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9514 [0] = $auto$simplemap.cc:250:simplemap_eqne$9604 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9516' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9508' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9568'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9507 [0] = $auto$simplemap.cc:127:simplemap_reduce$9567 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9508' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9486' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9606'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9484 [0] = $auto$simplemap.cc:250:simplemap_eqne$9604 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9486' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9489' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9504'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9484 [3] = $auto$simplemap.cc:250:simplemap_eqne$9499 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9489' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9472' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9592'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9469 [1] = $auto$simplemap.cc:250:simplemap_eqne$9589 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9472' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9474' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9504'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9469 [3] = $auto$simplemap.cc:250:simplemap_eqne$9499 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9474' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9457' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9592'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9454 [1] = $auto$simplemap.cc:250:simplemap_eqne$9589 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9457' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9456' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9606'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9454 [0] = $auto$simplemap.cc:250:simplemap_eqne$9604 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9456' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9459' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9504'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9454 [3] = $auto$simplemap.cc:250:simplemap_eqne$9499 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9459' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9448' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9568'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9447 [0] = $auto$simplemap.cc:127:simplemap_reduce$9567 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9448' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9443' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9563'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9439 [2] = $auto$simplemap.cc:250:simplemap_eqne$9559 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9443' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9444' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9504'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9439 [3] = $auto$simplemap.cc:250:simplemap_eqne$9499 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9444' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9428' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9563'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9424 [2] = $auto$simplemap.cc:250:simplemap_eqne$9559 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9428' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9426' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9606'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9424 [0] = $auto$simplemap.cc:250:simplemap_eqne$9604 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9426' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9429' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9504'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9424 [3] = $auto$simplemap.cc:250:simplemap_eqne$9499 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9429' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9413' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9563'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9409 [2] = $auto$simplemap.cc:250:simplemap_eqne$9559 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9413' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9412' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9592'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9409 [1] = $auto$simplemap.cc:250:simplemap_eqne$9589 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9412' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9414' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9504'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9409 [3] = $auto$simplemap.cc:250:simplemap_eqne$9499 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9414' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9349' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9563'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9345 [2] = $auto$simplemap.cc:250:simplemap_eqne$9559 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9349' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9348' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9592'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9345 [1] = $auto$simplemap.cc:250:simplemap_eqne$9589 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9348' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9347' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9606'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9345 [0] = $auto$simplemap.cc:250:simplemap_eqne$9604 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9347' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$9350' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$9504'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$9345 [3] = $auto$simplemap.cc:250:simplemap_eqne$9499 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$9350' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10208' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10223'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10206 [1] = $auto$simplemap.cc:127:simplemap_reduce$10221 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10208' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10193' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10223'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10191 [1] = $auto$simplemap.cc:127:simplemap_reduce$10221 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10193' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10178' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10223'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10176 [1] = $auto$simplemap.cc:127:simplemap_reduce$10221 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10178' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10162' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10222'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10161 [0] = $auto$simplemap.cc:127:simplemap_reduce$10221 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10162' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10148' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10163'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10146 [1] = $auto$simplemap.cc:127:simplemap_reduce$10161 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10148' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10147' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10207'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10146 [0] = $auto$simplemap.cc:127:simplemap_reduce$10206 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10147' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10133' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10163'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10131 [1] = $auto$simplemap.cc:127:simplemap_reduce$10161 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10133' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10132' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10192'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10131 [0] = $auto$simplemap.cc:127:simplemap_reduce$10191 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10132' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10118' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10163'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10116 [1] = $auto$simplemap.cc:127:simplemap_reduce$10161 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10118' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10059' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10222'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10058 [0] = $auto$simplemap.cc:127:simplemap_reduce$10221 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10059' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10045' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10060'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10043 [1] = $auto$simplemap.cc:127:simplemap_reduce$10058 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10045' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10044' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10207'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10043 [0] = $auto$simplemap.cc:127:simplemap_reduce$10206 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10044' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10030' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10060'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10028 [1] = $auto$simplemap.cc:127:simplemap_reduce$10058 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10030' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10029' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10192'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10028 [0] = $auto$simplemap.cc:127:simplemap_reduce$10191 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10029' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$10015' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10060'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$10013 [1] = $auto$simplemap.cc:127:simplemap_reduce$10058 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$10015' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9999' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10222'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9998 [0] = $auto$simplemap.cc:127:simplemap_reduce$10221 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9999' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9984' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$10207'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9983 [0] = $auto$simplemap.cc:127:simplemap_reduce$10206 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9984' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9779' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9794'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9777 [1] = $auto$simplemap.cc:127:simplemap_reduce$9792 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9779' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9778' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9838'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9777 [0] = $auto$simplemap.cc:127:simplemap_reduce$9837 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9778' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9764' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9794'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9762 [1] = $auto$simplemap.cc:127:simplemap_reduce$9792 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9764' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9763' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9823'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9762 [0] = $auto$simplemap.cc:127:simplemap_reduce$9822 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9763' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9749' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9794'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9747 [1] = $auto$simplemap.cc:127:simplemap_reduce$9792 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9749' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9748' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9808'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9747 [0] = $auto$simplemap.cc:127:simplemap_reduce$9807 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9748' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9719' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9734'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9717 [1] = $auto$simplemap.cc:127:simplemap_reduce$9732 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9719' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9718' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9838'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9717 [0] = $auto$simplemap.cc:127:simplemap_reduce$9837 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9718' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9704' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9734'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9702 [1] = $auto$simplemap.cc:127:simplemap_reduce$9732 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9704' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9703' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9823'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9702 [0] = $auto$simplemap.cc:127:simplemap_reduce$9822 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9703' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9689' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9734'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9687 [1] = $auto$simplemap.cc:127:simplemap_reduce$9732 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9689' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9688' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9808'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9687 [0] = $auto$simplemap.cc:127:simplemap_reduce$9807 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9688' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9659' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9674'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9657 [1] = $auto$simplemap.cc:127:simplemap_reduce$9672 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9659' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9658' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9838'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9657 [0] = $auto$simplemap.cc:127:simplemap_reduce$9837 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9658' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9644' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9674'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9642 [1] = $auto$simplemap.cc:127:simplemap_reduce$9672 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9644' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9643' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9823'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9642 [0] = $auto$simplemap.cc:127:simplemap_reduce$9822 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9643' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9629' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9674'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9627 [1] = $auto$simplemap.cc:127:simplemap_reduce$9672 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9629' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9628' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9808'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9627 [0] = $auto$simplemap.cc:127:simplemap_reduce$9807 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9628' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9554' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9569'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9552 [1] = $auto$simplemap.cc:127:simplemap_reduce$9567 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9554' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9553' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9613'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9552 [0] = $auto$simplemap.cc:127:simplemap_reduce$9612 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9553' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9539' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9569'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9537 [1] = $auto$simplemap.cc:127:simplemap_reduce$9567 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9539' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9538' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9598'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9537 [0] = $auto$simplemap.cc:127:simplemap_reduce$9597 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9538' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9524' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9569'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9522 [1] = $auto$simplemap.cc:127:simplemap_reduce$9567 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9524' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9523' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9583'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9522 [0] = $auto$simplemap.cc:127:simplemap_reduce$9582 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9523' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9494' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9509'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9492 [1] = $auto$simplemap.cc:127:simplemap_reduce$9507 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9494' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9493' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9613'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9492 [0] = $auto$simplemap.cc:127:simplemap_reduce$9612 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9493' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9479' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9509'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9477 [1] = $auto$simplemap.cc:127:simplemap_reduce$9507 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9479' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9478' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9598'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9477 [0] = $auto$simplemap.cc:127:simplemap_reduce$9597 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9478' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9464' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9509'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9462 [1] = $auto$simplemap.cc:127:simplemap_reduce$9507 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9464' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9463' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9583'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9462 [0] = $auto$simplemap.cc:127:simplemap_reduce$9582 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9463' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9434' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9449'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9432 [1] = $auto$simplemap.cc:127:simplemap_reduce$9447 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9434' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9433' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9613'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9432 [0] = $auto$simplemap.cc:127:simplemap_reduce$9612 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9433' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9419' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9449'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9417 [1] = $auto$simplemap.cc:127:simplemap_reduce$9447 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9419' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9418' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9598'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9417 [0] = $auto$simplemap.cc:127:simplemap_reduce$9597 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9418' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9355' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9449'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9353 [1] = $auto$simplemap.cc:127:simplemap_reduce$9447 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9355' from module `\NRISC_REGs'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$9354' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$9583'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$9353 [0] = $auto$simplemap.cc:127:simplemap_reduce$9582 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$9354' from module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$14658' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$14671'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$14655 [1] = $auto$simplemap.cc:250:simplemap_eqne$14668 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14658' from module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$14657' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$14683'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$14655 [0] = $auto$simplemap.cc:250:simplemap_eqne$14681 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14657' from module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$14631' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$14683'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$14629 [0] = $auto$simplemap.cc:250:simplemap_eqne$14681 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14631' from module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$14633' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$14646'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$14629 [2] = $auto$simplemap.cc:250:simplemap_eqne$14642 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14633' from module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$14619' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$14671'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$14616 [1] = $auto$simplemap.cc:250:simplemap_eqne$14668 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14619' from module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$14620' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$14646'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$14616 [2] = $auto$simplemap.cc:250:simplemap_eqne$14642 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14620' from module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$14565' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$14671'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$14562 [1] = $auto$simplemap.cc:250:simplemap_eqne$14668 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14565' from module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$14564' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$14683'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$14562 [0] = $auto$simplemap.cc:250:simplemap_eqne$14681 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14564' from module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$14566' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$14646'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$14562 [2] = $auto$simplemap.cc:250:simplemap_eqne$14642 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$14566' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13089' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14135'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [30] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [30]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13089' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13088' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14134'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [29] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [29]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13088' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13087' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14133'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [28] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [28]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13087' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13086' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14132'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [27] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [27]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13086' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13085' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14131'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [26] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [26]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13085' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13084' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14130'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [25] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [25]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13084' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13083' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14129'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [24] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [24]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13083' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13082' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14128'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [23] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [23]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13082' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13081' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14127'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [22] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [22]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13081' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13080' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14126'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [21] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [21]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13080' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13079' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14125'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [20] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [20]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13079' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13078' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14124'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [19] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [19]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13078' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13077' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14123'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [18] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [18]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13077' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13076' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14122'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [17] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [17]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13076' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13075' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14121'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [16] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [16]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13075' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13074' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14120'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [15] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [15]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13074' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13073' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14119'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [14] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [14]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13073' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13072' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14118'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [13] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [13]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13072' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13071' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14117'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [12] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [12]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13071' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13070' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14116'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [11] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [11]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13070' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13069' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14115'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [10] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [10]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13069' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13068' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14114'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [9] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [9]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13068' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13067' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14113'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [8] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [8]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13067' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13066' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14112'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [7] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [7]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13066' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13065' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14111'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [6] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [6]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13065' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13064' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14110'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [5] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [5]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13064' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13063' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14109'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [4] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [4]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13063' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13062' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14108'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [3] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [3]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13062' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13061' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14107'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [2] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [2]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13061' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13060' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14106'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [1] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [1]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13060' from module `\NRISC_ULA'.
  Cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13059' is identical to cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14105'.
    Redirecting output \Y: $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [0] = $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [0]
    Removing $_MUX_ cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13059' from module `\NRISC_ULA'.
  Cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14136' is identical to cell `$techmap$shr$NRISC_ULA.v:78$107.$auto$simplemap.cc:277:simplemap_mux$13090'.
    Redirecting output \Y: $techmap$sshr$NRISC_ULA.v:81$108.$1\buffer[31:0] [31] = $techmap$shr$NRISC_ULA.v:78$107.$1\buffer[31:0] [31]
    Removing $_MUX_ cell `$techmap$sshr$NRISC_ULA.v:81$108.$auto$simplemap.cc:277:simplemap_mux$14136' from module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$14637' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$14689'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$14636 = $auto$simplemap.cc:127:simplemap_reduce$14688
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$14637' from module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$14624' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$14676'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$14623 = $auto$simplemap.cc:127:simplemap_reduce$14675
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$14624' from module `\NRISC_ULA'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$14570' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$14663'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$14569 = $auto$simplemap.cc:127:simplemap_reduce$14662
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$14570' from module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 339 cells.

7.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5822'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5823'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5824'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5795'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5811'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5796'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5807'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5797'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$5803'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$5799'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$5800'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5792'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$5801'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$5257'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$5256'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5672'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5671'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5808'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5670'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5669'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$5082'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$5083'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$5240'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5825'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5820'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5358'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5359'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5360'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5361'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5362'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5363'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5364'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5365'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$5654'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$5655'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:136:simplemap_reduce$5343'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:136:simplemap_reduce$5345'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5336'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5337'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$5137'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5333'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$5138'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$5328'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$5329'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5332'.
Finding unused cells or wires in module \NRISC_REGs..
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$12720'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$12717'.
Finding unused cells or wires in module \NRISC_ULA..
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$12795'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$12794'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$12793'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$12789'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$12788'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$12787'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$12786'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$12782'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12781'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12779'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12778'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12776'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12775'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12774'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12773'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12771'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12770'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12769'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12768'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12767'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12766'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12765'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12764'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12762'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12761'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12760'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12759'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12758'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12757'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12756'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12755'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12754'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12753'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12752'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12751'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12750'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12749'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12748'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:177:logic_reduce$12747'.
  removing unused non-port wire \carry.
  removing unused non-port wire \carryl.
  removing unused non-port wire \carrymin0.
  removing unused non-port wire \carryr.
  removing unused non-port wire \minsom.
  removing unused non-port wire \minsub.
  removing unused non-port wire \minus.
  removed 7 unused temporary wires.
Finding unused cells or wires in module \NRISC_UP..

7.19.5. Finished fast OPT passes.

7.20. Executing ABC pass (technology mapping using ABC).

7.20.1. Extracting gate netlist of module `$paramod\somaUla\TAM=32' to `<abc-temp-dir>/input.blif'..
Extracted 189 gates and 254 wires to a netlist network with 65 inputs and 33 outputs.

7.20.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

7.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:              AOI3 cells:       15
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:       27
ABC RESULTS:               NOT cells:       57
ABC RESULTS:              OAI3 cells:       15
ABC RESULTS:                OR cells:        4
ABC RESULTS:              XNOR cells:       32
ABC RESULTS:               XOR cells:       64
ABC RESULTS:        internal signals:      156
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       33
Removing temp directory.

7.20.2. Extracting gate netlist of module `\NRISC_InstructionDecoder' to `<abc-temp-dir>/input.blif'..
Extracted 539 gates and 614 wires to a netlist network with 73 inputs and 55 outputs.

7.20.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

7.20.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      102
ABC RESULTS:              AOI3 cells:       31
ABC RESULTS:              AOI4 cells:       15
ABC RESULTS:               MUX cells:      115
ABC RESULTS:              NAND cells:       29
ABC RESULTS:               NOR cells:       21
ABC RESULTS:               NOT cells:       51
ABC RESULTS:              OAI3 cells:       21
ABC RESULTS:              OAI4 cells:       16
ABC RESULTS:                OR cells:       28
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      486
ABC RESULTS:           input signals:       73
ABC RESULTS:          output signals:       55
Removing temp directory.

7.20.3. Extracting gate netlist of module `\NRISC_PC_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 537 gates and 622 wires to a netlist network with 83 inputs and 77 outputs.

7.20.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

7.20.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       67
ABC RESULTS:              AOI3 cells:        4
ABC RESULTS:              AOI4 cells:       41
ABC RESULTS:               MUX cells:      166
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               NOR cells:       11
ABC RESULTS:               NOT cells:       51
ABC RESULTS:              OAI3 cells:       46
ABC RESULTS:              OAI4 cells:       10
ABC RESULTS:                OR cells:       12
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:      462
ABC RESULTS:           input signals:       83
ABC RESULTS:          output signals:       77
Removing temp directory.

7.20.4. Extracting gate netlist of module `\NRISC_REGs' to `<abc-temp-dir>/input.blif'..
Extracted 3808 gates and 4593 wires to a netlist network with 783 inputs and 768 outputs.

7.20.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

7.20.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:     1120
ABC RESULTS:              AOI3 cells:      133
ABC RESULTS:              AOI4 cells:      384
ABC RESULTS:               MUX cells:      960
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               NOT cells:       74
ABC RESULTS:              OAI3 cells:       13
ABC RESULTS:              OAI4 cells:       64
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:     3042
ABC RESULTS:           input signals:      783
ABC RESULTS:          output signals:      768
Removing temp directory.

7.20.5. Extracting gate netlist of module `\NRISC_ULA' to `<abc-temp-dir>/input.blif'..
Extracted 1166 gates and 1268 wires to a netlist network with 100 inputs and 33 outputs.

7.20.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

7.20.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      180
ABC RESULTS:              AOI3 cells:       65
ABC RESULTS:              AOI4 cells:       30
ABC RESULTS:               MUX cells:      388
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:       19
ABC RESULTS:               NOT cells:      151
ABC RESULTS:              OAI3 cells:       91
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:       52
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:       65
ABC RESULTS:        internal signals:     1135
ABC RESULTS:           input signals:      100
ABC RESULTS:          output signals:       33
Removing temp directory.

7.20.6. Extracting gate netlist of module `\NRISC_UP' to `<abc-temp-dir>/input.blif'..
Extracted 135 gates and 277 wires to a netlist network with 141 inputs and 128 outputs.

7.20.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

7.20.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:               MUX cells:      127
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:      141
ABC RESULTS:          output signals:      128
Removing temp directory.

7.21. Executing OPT pass (performing simple optimizations).

7.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15924' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15790' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15785' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15780' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15795' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15932' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15917' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15775' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15770' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15805' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15800' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15939' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15949' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15963' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15978' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15989' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$16044' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$16066' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15714' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15715' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15706' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15697' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15682' in module `NRISC_InstructionDecoder'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16273' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16255' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16276' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16305' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16289' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16308' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16374' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16293' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16381' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16260' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16242' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16474' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16481' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16224' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16467' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16460' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16453' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16446' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16439' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16184' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16432' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16423' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16416' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16207' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16409' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16402' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16395' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16388' in module `NRISC_PC_ctrl'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19299' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19305' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19313' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19336' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19387' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19386' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19629' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19340' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19377' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19327' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19323' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19373' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19627' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19862' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19865' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19490' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19461' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19594' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19596' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19457' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19451' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19592' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19448' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19445' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19591' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19593' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19442' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19436' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19588' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19434' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19431' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19587' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19589' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19837' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19839' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19544' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19546' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19541' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19380' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19540' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19543' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19537' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19318' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19536' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19538' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19811' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19814' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19492' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19487' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19493' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19485' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19484' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19486' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19481' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19429' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19480' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19482' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19785' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19787' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19698' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19696' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19914' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19917' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19664' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19662' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19888' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19890' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19732' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19730' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19940' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19943' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19633' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19371' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19372' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19366' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19628' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19634' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19597' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19425' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19585' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19422' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19417' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19584' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19586' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19590' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19598' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19533' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19532' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19534' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19549' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19494' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19478' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19413' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19477' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19479' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19483' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19495' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19388' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19383' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19384' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19385' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19374' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19759' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19762' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19734' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19729' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19731' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19735' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19700' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19697' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19702' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19666' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19661' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19663' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19667' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19365' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19367' in module `NRISC_ULA'.
Optimizing away select inverter for $_MUX_ cell `$abc$19277$auto$blifparse.cc:286:parse_blif$19391' in module `NRISC_ULA'.

7.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
  Cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15842' is identical to cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15828'.
    Redirecting output \Y: $abc$15653$n317_1 = $abc$15653$n303_1
    Removing $_AND_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15842' from module `\NRISC_InstructionDecoder'.
  Cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15846' is identical to cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15832'.
    Redirecting output \Y: $abc$15653$n321_1 = $abc$15653$n307
    Removing $_NOT_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15846' from module `\NRISC_InstructionDecoder'.
  Cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15850' is identical to cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15743'.
    Redirecting output \Y: $abc$15653$n325_1 = $abc$15653$n218
    Removing $_AOI3_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15850' from module `\NRISC_InstructionDecoder'.
  Cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15895' is identical to cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15743'.
    Redirecting output \Y: $abc$15653$n370 = $abc$15653$n218
    Removing $_AOI3_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15895' from module `\NRISC_InstructionDecoder'.
  Cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15904' is identical to cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15743'.
    Redirecting output \Y: $abc$15653$n379 = $abc$15653$n218
    Removing $_AOI3_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15904' from module `\NRISC_InstructionDecoder'.
  Cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15946' is identical to cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15743'.
    Redirecting output \Y: $abc$15653$n421_1 = $abc$15653$n218
    Removing $_AOI3_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15946' from module `\NRISC_InstructionDecoder'.
  Cell `$abc$15653$auto$blifparse.cc:286:parse_blif$16029' is identical to cell `$abc$15653$auto$blifparse.cc:286:parse_blif$15680'.
    Redirecting output \Y: $abc$15653$n504 = $abc$15653$n155
    Removing $_AND_ cell `$abc$15653$auto$blifparse.cc:286:parse_blif$16029' from module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
  Cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16430' is identical to cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16175'.
    Redirecting output \Y: $abc$16085$n505_1 = $abc$16085$n250
    Removing $_NOR_ cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16430' from module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
  Cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18357' is identical to cell `$abc$16509$auto$blifparse.cc:286:parse_blif$16511'.
    Redirecting output \Y: $abc$16509$n3399 = $abc$16509$n1553
    Removing $_AND_ cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18357' from module `\NRISC_REGs'.
  Cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18358' is identical to cell `$abc$16509$auto$blifparse.cc:286:parse_blif$16512'.
    Redirecting output \Y: $abc$16509$n3400_1 = $abc$16509$n1554
    Removing $_AND_ cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18358' from module `\NRISC_REGs'.
  Cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18424' is identical to cell `$abc$16509$auto$blifparse.cc:286:parse_blif$17946'.
    Redirecting output \Y: $abc$16509$n3466_1 = $abc$16509$n2988
    Removing $_AND_ cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18424' from module `\NRISC_REGs'.
  Cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18491' is identical to cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18080'.
    Redirecting output \Y: $abc$16509$n3533 = $abc$16509$n3122_1
    Removing $_AND_ cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18491' from module `\NRISC_REGs'.
  Cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18492' is identical to cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18149'.
    Redirecting output \Y: $abc$16509$n3534_1 = $abc$16509$n3191
    Removing $_AND_ cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18492' from module `\NRISC_REGs'.
  Cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18558' is identical to cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18425'.
    Redirecting output \Y: $abc$16509$n3600_1 = $abc$16509$n3467_1
    Removing $_AND_ cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18558' from module `\NRISC_REGs'.
  Cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18689' is identical to cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18081'.
    Redirecting output \Y: $abc$16509$n3731_1 = $abc$16509$n3123
    Removing $_AND_ cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18689' from module `\NRISC_REGs'.
  Cell `$abc$16509$auto$blifparse.cc:286:parse_blif$19145' is identical to cell `$abc$16509$auto$blifparse.cc:286:parse_blif$18013'.
    Redirecting output \Y: $abc$16509$n4187_1 = $abc$16509$n3055
    Removing $_AND_ cell `$abc$16509$auto$blifparse.cc:286:parse_blif$19145' from module `\NRISC_REGs'.
  Cell `$abc$16509$auto$blifparse.cc:286:parse_blif$19211' is identical to cell `$abc$16509$auto$blifparse.cc:286:parse_blif$17947'.
    Redirecting output \Y: $abc$16509$n4253_1 = $abc$16509$n2989_1
    Removing $_AND_ cell `$abc$16509$auto$blifparse.cc:286:parse_blif$19211' from module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 17 cells.

7.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
  removing unused non-port wire \Baux.
  removing unused non-port wire \w.
  removing unused non-port wire \x.
  removing unused non-port wire \y.
  removed 4 unused temporary wires.
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
  removing unused `$_NOT_' cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16373'.
  removing unused `$_NOT_' cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16166'.
  removing unused `$_NOT_' cell `$abc$16085$auto$blifparse.cc:286:parse_blif$16431'.
Finding unused cells or wires in module \NRISC_REGs..
  removing unused non-port wire \REGS[10].
  removing unused non-port wire \REGS[11].
  removing unused non-port wire \REGS[12].
  removing unused non-port wire \REGS[13].
  removing unused non-port wire \REGS[14].
  removing unused non-port wire \REGS[15].
  removing unused non-port wire \REGS[8].
  removing unused non-port wire \REGS[9].
  removed 8 unused temporary wires.
Finding unused cells or wires in module \NRISC_ULA..
  removing unused non-port wire \OUT[1].
  removing unused non-port wire \OUT[2].
  removing unused non-port wire \OUT[3].
  removing unused non-port wire \OUT[4].
  removing unused non-port wire \OUT[5].
  removing unused non-port wire \OUT[6].
  removing unused non-port wire \OUT[7].
  removed 7 unused temporary wires.
Finding unused cells or wires in module \NRISC_UP..

7.21.5. Finished fast OPT passes.

7.22. Executing HIERARCHY pass (managing design hierarchy).

7.22.1. Analyzing design hierarchy..
Top module:  \NRISC_UP
Used module:     \NRISC_InstructionDecoder
Used module:     \NRISC_PC_ctrl
Used module:     \NRISC_REGs
Used module:     \NRISC_ULA
Used module:         $paramod\somaUla\TAM=32

7.22.2. Analyzing design hierarchy..
Top module:  \NRISC_UP
Used module:     \NRISC_InstructionDecoder
Used module:     \NRISC_PC_ctrl
Used module:     \NRISC_REGs
Used module:     \NRISC_ULA
Used module:         $paramod\somaUla\TAM=32
Removed 0 unused modules.

7.23. Printing statistics.

=== $paramod\somaUla\TAM=32 ===

   Number of wires:                190
   Number of wire bits:            344
   Number of public wires:           7
   Number of public wire bits:     161
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                216
     $_AND_                          1
     $_AOI3_                        15
     $_MUX_                          1
     $_NOR_                         27
     $_NOT_                         57
     $_OAI3_                        15
     $_OR_                           4
     $_XNOR_                        32
     $_XOR_                         64

=== NRISC_InstructionDecoder ===

   Number of wires:                414
   Number of wire bits:            503
   Number of public wires:          25
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                479
     $_AND_                        100
     $_AOI3_                        27
     $_AOI4_                        15
     $_DFF_N_                        4
     $_DFF_P_                       51
     $_MUX_                        115
     $_NAND_                        29
     $_NOR_                         21
     $_NOT_                         50
     $_OAI3_                        21
     $_OAI4_                        16
     $_OR_                          28
     $_XNOR_                         1
     $_XOR_                          1

=== NRISC_PC_ctrl ===

   Number of wires:                370
   Number of wire bits:            546
   Number of public wires:          20
   Number of public wire bits:     150
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                471
     $_AND_                         67
     $_AOI3_                         4
     $_AOI4_                        41
     $_DFF_P_                       52
     $_MUX_                        166
     $_NAND_                         7
     $_NOR_                         10
     $_NOT_                         48
     $_OAI3_                        46
     $_OAI4_                        10
     $_OR_                          12
     $_XNOR_                         3
     $_XOR_                          5

=== NRISC_REGs ===

   Number of wires:               2734
   Number of wire bits:           3766
   Number of public wires:          40
   Number of public wire bits:    1072
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3462
     $_AND_                       1111
     $_AOI3_                       133
     $_AOI4_                       384
     $_DFF_P_                      704
     $_MUX_                        960
     $_NAND_                         6
     $_NOR_                         12
     $_NOT_                         74
     $_OAI3_                        13
     $_OAI4_                        64
     $_OR_                           1

=== NRISC_ULA ===

   Number of wires:               1043
   Number of wire bits:           1238
   Number of public wires:          12
   Number of public wire bits:     207
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1065
     $_AND_                        180
     $_AOI3_                        65
     $_AOI4_                        30
     $_MUX_                        388
     $_NAND_                        18
     $_NOR_                         19
     $_NOT_                        151
     $_OAI3_                        91
     $_OAI4_                         2
     $_OR_                          52
     $_XNOR_                         3
     $_XOR_                         65
     $paramod\somaUla\TAM=32         1

=== NRISC_UP ===

   Number of wires:                 50
   Number of wire bits:            470
   Number of public wires:          44
   Number of public wire bits:     464
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                185
     $_AND_                          6
     $_DFF_N_                        1
     $_DFF_P_                       46
     $_MUX_                        127
     $_NOR_                          1
     NRISC_InstructionDecoder        1
     NRISC_PC_ctrl                   1
     NRISC_REGs                      1
     NRISC_ULA                       1

=== design hierarchy ===

   NRISC_UP                          1
     NRISC_InstructionDecoder        1
     NRISC_PC_ctrl                   1
     NRISC_REGs                      1
     NRISC_ULA                       1
       $paramod\somaUla\TAM=32       1

   Number of wires:               4801
   Number of wire bits:           6867
   Number of public wires:         148
   Number of public wire bits:    2133
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5873
     $_AND_                       1465
     $_AOI3_                       244
     $_AOI4_                       470
     $_DFF_N_                        5
     $_DFF_P_                      853
     $_MUX_                       1757
     $_NAND_                        60
     $_NOR_                         90
     $_NOT_                        380
     $_OAI3_                       186
     $_OAI4_                        92
     $_OR_                          97
     $_XNOR_                        39
     $_XOR_                        135

7.24. Executing CHECK pass (checking for obvious problems).
checking module $paramod\somaUla\TAM=32..
checking module NRISC_InstructionDecoder..
checking module NRISC_PC_ctrl..
checking module NRISC_REGs..
checking module NRISC_ULA..
checking module NRISC_UP..
found and reported 0 problems.

8. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=7.98) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=7.98) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=10.32) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `$paramod\somaUla\TAM=32':
Mapping DFF cells in module `\NRISC_InstructionDecoder':
  mapped 4 $_DFF_N_ cells to \DFFNEGX1 cells.
  mapped 51 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\NRISC_PC_ctrl':
  mapped 52 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\NRISC_REGs':
  mapped 704 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\NRISC_ULA':
Mapping DFF cells in module `\NRISC_UP':
  mapped 1 $_DFF_N_ cells to \DFFNEGX1 cells.
  mapped 46 $_DFF_P_ cells to \DFFPOSX1 cells.

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\somaUla\TAM=32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_InstructionDecoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_PC_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_REGs..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_ULA..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NRISC_UP..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\somaUla\TAM=32.
  Optimizing cells in module \NRISC_InstructionDecoder.
  Optimizing cells in module \NRISC_PC_ctrl.
  Optimizing cells in module \NRISC_REGs.
  Optimizing cells in module \NRISC_ULA.
  Optimizing cells in module \NRISC_UP.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\somaUla\TAM=32'.
Finding identical cells in module `\NRISC_InstructionDecoder'.
Finding identical cells in module `\NRISC_PC_ctrl'.
Finding identical cells in module `\NRISC_REGs'.
Finding identical cells in module `\NRISC_ULA'.
Finding identical cells in module `\NRISC_UP'.
Removed a total of 0 cells.

9.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\somaUla\TAM=32..
Finding unused cells or wires in module \NRISC_InstructionDecoder..
Finding unused cells or wires in module \NRISC_PC_ctrl..
Finding unused cells or wires in module \NRISC_REGs..
Finding unused cells or wires in module \NRISC_ULA..
Finding unused cells or wires in module \NRISC_UP..

9.8. Executing OPT_EXPR pass (perform const folding).

9.9. Finished OPT passes. (There is nothing left to do.)

10. Executing ABC pass (technology mapping using ABC).

10.1. Extracting gate netlist of module `$paramod\somaUla\TAM=32' to `<abc-temp-dir>/input.blif'..
Extracted 216 gates and 281 wires to a netlist network with 65 inputs and 33 outputs.

10.1.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       30
ABC RESULTS:             INVX1 cells:       78
ABC RESULTS:            MUX2X1 cells:        1
ABC RESULTS:           NAND2X1 cells:       10
ABC RESULTS:            NOR2X1 cells:       25
ABC RESULTS:           OAI21X1 cells:        1
ABC RESULTS:             OR2X2 cells:       35
ABC RESULTS:           XNOR2X1 cells:       54
ABC RESULTS:            XOR2X1 cells:       35
ABC RESULTS:        internal signals:      183
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       33
Removing temp directory.

10.2. Extracting gate netlist of module `\NRISC_InstructionDecoder' to `<abc-temp-dir>/input.blif'..
Extracted 424 gates and 497 wires to a netlist network with 73 inputs and 55 outputs.

10.2.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.2.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       71
ABC RESULTS:           AOI21X1 cells:       26
ABC RESULTS:           AOI22X1 cells:        6
ABC RESULTS:             INVX1 cells:       36
ABC RESULTS:            MUX2X1 cells:       12
ABC RESULTS:           NAND2X1 cells:       25
ABC RESULTS:           NAND3X1 cells:       25
ABC RESULTS:            NOR2X1 cells:       41
ABC RESULTS:            NOR3X1 cells:       22
ABC RESULTS:           OAI21X1 cells:       15
ABC RESULTS:             OR2X2 cells:       43
ABC RESULTS:            XOR2X1 cells:        7
ABC RESULTS:        internal signals:      369
ABC RESULTS:           input signals:       73
ABC RESULTS:          output signals:       55
Removing temp directory.

10.3. Extracting gate netlist of module `\NRISC_PC_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 419 gates and 502 wires to a netlist network with 83 inputs and 77 outputs.

10.3.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:      103
ABC RESULTS:           AOI21X1 cells:       18
ABC RESULTS:           AOI22X1 cells:       29
ABC RESULTS:             INVX1 cells:       56
ABC RESULTS:            MUX2X1 cells:       10
ABC RESULTS:           NAND2X1 cells:      106
ABC RESULTS:           NAND3X1 cells:       20
ABC RESULTS:            NOR2X1 cells:       41
ABC RESULTS:            NOR3X1 cells:        3
ABC RESULTS:           OAI21X1 cells:       77
ABC RESULTS:             OR2X2 cells:       60
ABC RESULTS:           XNOR2X1 cells:        6
ABC RESULTS:            XOR2X1 cells:        7
ABC RESULTS:        internal signals:      342
ABC RESULTS:           input signals:       83
ABC RESULTS:          output signals:       77
Removing temp directory.

10.4. Extracting gate netlist of module `\NRISC_REGs' to `<abc-temp-dir>/input.blif'..
Extracted 2758 gates and 3541 wires to a netlist network with 783 inputs and 768 outputs.

10.4.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.4.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:     1258
ABC RESULTS:             INVX1 cells:       49
ABC RESULTS:            MUX2X1 cells:      704
ABC RESULTS:           NAND2X1 cells:      704
ABC RESULTS:           NAND3X1 cells:       13
ABC RESULTS:            NOR2X1 cells:       22
ABC RESULTS:            NOR3X1 cells:        1
ABC RESULTS:             OR2X2 cells:     1409
ABC RESULTS:        internal signals:     1990
ABC RESULTS:           input signals:      783
ABC RESULTS:          output signals:      768
Removing temp directory.

10.5. Extracting gate netlist of module `\NRISC_ULA' to `<abc-temp-dir>/input.blif'..
Extracted 1064 gates and 1164 wires to a netlist network with 100 inputs and 33 outputs.

10.5.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.5.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:      656
ABC RESULTS:           AOI21X1 cells:       27
ABC RESULTS:           AOI22X1 cells:        1
ABC RESULTS:             INVX1 cells:       57
ABC RESULTS:            MUX2X1 cells:      105
ABC RESULTS:           NAND2X1 cells:       64
ABC RESULTS:           NAND3X1 cells:       50
ABC RESULTS:            NOR2X1 cells:       63
ABC RESULTS:            NOR3X1 cells:       10
ABC RESULTS:           OAI21X1 cells:       17
ABC RESULTS:             OR2X2 cells:      472
ABC RESULTS:           XNOR2X1 cells:        2
ABC RESULTS:            XOR2X1 cells:       27
ABC RESULTS:        internal signals:     1031
ABC RESULTS:           input signals:      100
ABC RESULTS:          output signals:       33
Removing temp directory.

10.6. Extracting gate netlist of module `\NRISC_UP' to `<abc-temp-dir>/input.blif'..
Extracted 134 gates and 275 wires to a netlist network with 141 inputs and 128 outputs.

10.6.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.6.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        2
ABC RESULTS:             INVX1 cells:       98
ABC RESULTS:            MUX2X1 cells:       63
ABC RESULTS:           NAND2X1 cells:       36
ABC RESULTS:           NAND3X1 cells:        1
ABC RESULTS:           OAI21X1 cells:       67
ABC RESULTS:             OR2X2 cells:        3
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:      141
ABC RESULTS:          output signals:      128
Removing temp directory.

11. Executing FLATTEN pass (flatten design).
Mapping NRISC_UP.REGs using NRISC_REGs.
Mapping NRISC_UP.ULA using NRISC_ULA.
Mapping NRISC_UP.ID using NRISC_InstructionDecoder.
Mapping NRISC_UP.PC using NRISC_PC_ctrl.
Mapping NRISC_UP.ULA.sumsub using $paramod\somaUla\TAM=32.
No more expansions possible.
Deleting now unused module $paramod\somaUla\TAM=32.
Deleting now unused module NRISC_InstructionDecoder.
Deleting now unused module NRISC_PC_ctrl.
Deleting now unused module NRISC_REGs.
Deleting now unused module NRISC_ULA.
Removed 75 unused cells and 6380 unused wires.

12. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port NRISC_UP.CORE_ctrl: Missing option -inpad.
Mapping port NRISC_UP.DDATA_CORE_addr using BUFX2.
Mapping port NRISC_UP.DDATA_CORE_ctrl using BUFX2.
Mapping port NRISC_UP.DDATA_CORE_in using BUFX2.
Mapping port NRISC_UP.DDATA_CORE_load using BUFX2.
Don't map input port NRISC_UP.DDATA_CORE_out: Missing option -inpad.
Mapping port NRISC_UP.DDATA_CORE_write using BUFX2.
Mapping port NRISC_UP.IDATA_CORE_addr using BUFX2.
Mapping port NRISC_UP.IDATA_CORE_clk using BUFX2.
Don't map input port NRISC_UP.IDATA_CORE_out: Missing option -inpad.
Don't map input port NRISC_UP.INTERRUPT_ch: Missing option -inpad.
Don't map input port NRISC_UP.INTERRUPT_flag: Missing option -inpad.
Don't map input port NRISC_UP.clk: Missing option -inpad.
Don't map input port NRISC_UP.rst: Missing option -inpad.

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\NRISC_UP'.
Removed a total of 0 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \NRISC_UP..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \NRISC_UP.
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\NRISC_UP'.
Removed a total of 0 cells.

13.6. Executing OPT_RMDFF pass (remove dff with constant values).

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \NRISC_UP..

13.8. Executing OPT_EXPR pass (perform const folding).

13.9. Finished OPT passes. (There is nothing left to do.)

14. Executing BLIF backend.

15. Printing statistics.

=== NRISC_UP ===

   Number of wires:               6787
   Number of wire bits:           8043
   Number of public wires:        6787
   Number of public wire bits:    8043
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7952
     AND2X2                       2113
     AOI21X1                        66
     AOI22X1                        34
     BUFX2                          54
     DFFNEGX1                        5
     DFFPOSX1                      837
     INVX1                         370
     MUX2X1                        887
     NAND2X1                       942
     NAND3X1                       103
     NOR2X1                        178
     NOR3X1                         33
     OAI21X1                       173
     OR2X2                        2019
     XNOR2X1                        62
     XOR2X1                         76

End of script. Logfile hash: 3eb9a49d5d
CPU: user 6.98s system 0.06s, MEM: 68.23 MB total, 40.53 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)
Time spent: 17% 22x opt_merge (1 sec), 16% 26x opt_expr (1 sec), ...
Cleaning up output syntax
ypostproc.tcl NRISC_UP_mapped.blif NRISC_UP /usr/local/share/qflow/tech/gscl45nm/gscl45nm.sh
Cleaning up blif file syntax
Running blifFanout (iterative)
Each iteration calls:
blifFanout -l 200 -c 50 -I NRISC_UP_nofanout -p /usr/local/share/qflow/tech/gscl45nm/gscl45nm.lib  -b BUFX2 -i A -o Y tmp.blif NRISC_UP.blif

Parsing library "gscl45nm"
End of library at line 6016
Lib Read:  Processed 6017 lines.
Top internal fanout is 704 (load 1434.44) from node _1573_,
driven by INVX1 with strength 64.0522 (fF driven at latency 200)
Top fanout load-to-strength ratio is 22.3949 (latency = 4478.98 ps)
Top input node fanout is 843 (load 6917.48) from node clk.
Warning 1: load of 151.98 is 2.45073 times greater than strongest gate NOR2X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 24: load of 304.679 is 4.70689 times greater than strongest gate OAI21X1
33 gates exceed specified minimum load.
804 buffers were added.
40 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 3766    	Out: 3726    	-40
	"2" gates	In: 4186    	Out: 4224    	+38

Number of gates changed: 844
gates resized: 844
Parsing library "gscl45nm"
End of library at line 6016
Lib Read:  Processed 6017 lines.
Top internal fanout is 79 (load 238.97) from node _1573_,
driven by INVX8 with strength 727.137 (fF driven at latency 200)
Top fanout load-to-strength ratio is 0.767197 (latency = 153.439 ps)
Top input node fanout is 89 (load 136.967) from node clk.
0 gates exceed specified minimum load.
57 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 3726    	Out: 3726    	+0
	"2" gates	In: 5028    	Out: 5028    	+0
	"8" gates	In: 2    	Out: 2    	+0

Number of gates changed: 57
gates resized: 57
Parsing library "gscl45nm"
End of library at line 6016
Lib Read:  Processed 6017 lines.
Top internal fanout is 16 (load 226.952) from node CORE_InstructionIN<15>,
driven by NOR2X1 with strength 62.0142 (fF driven at latency 200)
Top fanout load-to-strength ratio is 0.767197 (latency = 153.439 ps)
Top input node fanout is 16 (load 24.6234) from node INTERRUPT_flag.
0 gates exceed specified minimum load.
0 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 3726    	Out: 3726    	+0
	"2" gates	In: 5085    	Out: 5085    	+0
	"8" gates	In: 2    	Out: 2    	+0

Number of gates changed: 0
gates resized: 0

Generating RTL verilog and SPICE netlist file in directory
	 /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/synthesis
Files:
   Verilog: /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/synthesis/NRISC_UP.rtl.v
   Verilog: /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/synthesis/NRISC_UP.rtlnopwr.v
   Spice:   /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/Topo/synthesis/NRISC_UP.spc

Running blif2Verilog.
Running blif2BSpice.
Running spi2xspice.py
Synthesis script ended on qui jan 18 22:45:32 -02 2018
