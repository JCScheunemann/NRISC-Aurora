Qflow placement logfile created on seg jan 1 22:00:29 -02 2018
Running blif2cel to generate input files for graywolf
blif2cel.tcl --blif /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/NRISC_ULA.blif --lef /usr/local/share/qflow/tech/osu018/osu018_stdcells.lef --cel /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/NRISC_ULA.cel
Opened BLIF file (/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/NRISC_ULA.blif) for reading ...
Opened CEL file (/home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/NRISC_ULA.cel) for writing...
Loaded /usr/local/share/qflow/tech/osu018/osu018_stdcells.lef file for reading...
1st pass of blif file /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/NRISC_ULA.blif. . .
Reading macros and/or technology data from LEF file. . .
LEF file specifies route layer Y pitch as 1
LEF file specifies route layer X pitch as 0.8
Parsing macro AND2X2
Parsing macro AOI21X1
Parsing macro AOI22X1
Parsing macro BUFX2
Parsing macro BUFX4
Parsing macro NOR3X1
Parsing macro INVX1
Parsing macro INVX2
Parsing macro INVX4
Parsing macro NAND2X1
Parsing macro NAND3X1
Parsing macro NOR2X1
Parsing macro OAI21X1
Parsing macro OR2X2
Parsing macro XOR2X1
Parsing macro MUX2X1
Parsing macro XNOR2X1
2nd pass of blif file. . .
3rd pass of blif file. . .
Done!
No NRISC_ULA.cel2 file found for project. . . continuing without pin placement hints
Running GrayWolf placement
graywolf  NRISC_ULA

twflow version:2.1 date:Mon May 25 21:15:08 EDT 1992
Authors: Bill Swartz, Carl Sechen
         Yale University

syntax version:v1.1 date:Mon May 25 21:11:10 EDT 1992
TimberWolf System Syntax Checker
Authors: Carl Sechen, Kai-Win Lee, Bill Swartz,
         Dahe Chen, and Jimmy Lam
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
Read  300 objects so far...
Read  350 objects so far...
Read  400 objects so far...
Read  450 objects so far...
Read  500 objects so far...
Read  550 objects so far...
Read  600 objects so far...
Read  650 objects so far...
Read  700 objects so far...
Read  750 objects so far...
No syntax errors were found

syntax terminated normally with no errors and 0 warning[s]


----------------------------
Total stdcells     :713
Total cell width   :2.24e+05
Total cell height  :7.13e+05
Total cell area    :2.24e+08
Total core area    :2.24e+08
Average cell height:1.00e+03


nocut - replacement for Mincut version:v1.0 date:Mon May 25 21:09:40 EDT 1992
TimberWolf System Floorplan Setup Program
Authors: Carl Sechen, Bill Swartz,
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
Read  300 objects so far...
Read  350 objects so far...
Read  400 objects so far...
Read  450 objects so far...
Read  500 objects so far...
Read  550 objects so far...
Read  600 objects so far...
Read  650 objects so far...
Read  700 objects so far...
Read  750 objects so far...
Splitting NRISC_ULA.cel into NRISC_ULA.scel and NRISC_ULA.mcel...
	done!


nocut - replacement for Mincut terminated normally with no errors and 0 warning[s]


TimberWolfMC version:v2.2 date:Mon May 25 21:18:34 EDT 1992
Authors: Carl Sechen, Bill Swartz, Kai-Win Lee
         Dahe Chen, and Jimmy Lam
         Yale University

config version:v1.0 date:Mon May 25 20:57:18 EDT 1992
Row configuration program
    Yale University


config switches:
	Graphics mode on
	config will inherit window



config terminated normally with no errors and 0 warning[s]


TimberWolfMC terminated normally with no errors and 0 warning[s]



TimberWolfSC switches:
	Graphics mode on
	TimberWolfSC will inherit window

TimberWolfSC version:v6.0 date:Mon May 25 21:19:07 EDT 1992
Row-Based Placement and Global Routing Program
Authors: Carl Sechen, Kai-Win Lee, and Bill Swartz,
         Yale University
  0 
  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15 
 16  17  18  19  20  21  22  23  24  25  26  27  28  29  30 
 31  32  33  34  35  36  37  38  39  40  41  42  43  44  45 
 46  47  48  49  50  51  52  53  54  55  56  57  58  59  60 
 61  62  63  64  65  66  67  68  69  70  71  72  73  74  75 
 76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 
 91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 
106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 
121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 
136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 
151 152 153 154 155 156 157 158 
 block left edge is at -239
 the longest block length is 20080
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:5   Its length is:18800
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  135
 tracks = 126 at attempts =  1000
 tracks = 124 at attempts =  2000
 tracks = 124 at attempts =  3000
 tracks = 124 at attempts =  4000
 tracks = 124 at attempts =  5000
 tracks = 124 at attempts =  6000
 tracks = 124 at attempts =  7000
 tracks = 124 at attempts =  8000
 tracks = 124 at attempts =  9000
 tracks = 124 at attempts = 10000
 tracks = 124 at attempts = 11000
 tracks = 124 at attempts = 12000
 tracks = 124 at attempts = 13000
 tracks = 124 at attempts = 14000
 tracks = 124 at attempts = 15000
 tracks = 124 at attempts = 16000
 tracks = 124 at attempts = 17000
 tracks = 124 at attempts = 18000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 20080
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:5   Its length is:18800
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  145
 tracks = 133 at attempts =  1000
 tracks = 130 at attempts =  2000
 tracks = 128 at attempts =  3000
 tracks = 127 at attempts =  4000
 tracks = 127 at attempts =  5000
 tracks = 126 at attempts =  6000
 tracks = 126 at attempts =  7000
 tracks = 126 at attempts =  8000
 tracks = 126 at attempts =  9000
 tracks = 126 at attempts = 10000
 tracks = 126 at attempts = 11000
 tracks = 126 at attempts = 12000
 tracks = 126 at attempts = 13000
 tracks = 126 at attempts = 14000
 tracks = 126 at attempts = 15000
 tracks = 126 at attempts = 16000
 tracks = 126 at attempts = 17000
 tracks = 126 at attempts = 18000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 20080
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:5   Its length is:18800
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  141
 tracks = 131 at attempts =  1000
 tracks = 128 at attempts =  2000
 tracks = 128 at attempts =  3000
 tracks = 128 at attempts =  4000
 tracks = 128 at attempts =  5000
 tracks = 128 at attempts =  6000
 tracks = 128 at attempts =  7000
 tracks = 128 at attempts =  8000
 tracks = 128 at attempts =  9000
 tracks = 128 at attempts = 10000
 tracks = 128 at attempts = 11000
 tracks = 128 at attempts = 12000
 tracks = 128 at attempts = 13000
 tracks = 128 at attempts = 14000
 tracks = 128 at attempts = 15000
 tracks = 128 at attempts = 16000
 tracks = 128 at attempts = 17000
 tracks = 128 at attempts = 18000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 20080
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:5   Its length is:18800
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  145
 tracks = 144 at attempts =  1000
 tracks = 144 at attempts =  2000
 tracks = 144 at attempts =  3000
 tracks = 144 at attempts =  4000
 tracks = 144 at attempts =  5000
 tracks = 144 at attempts =  6000
 tracks = 144 at attempts =  7000
 tracks = 144 at attempts =  8000
 tracks = 144 at attempts =  9000
 tracks = 144 at attempts = 10000
 tracks = 144 at attempts = 11000
 tracks = 144 at attempts = 12000
 tracks = 144 at attempts = 13000
 tracks = 144 at attempts = 14000
 tracks = 144 at attempts = 15000
 tracks = 144 at attempts = 16000
 tracks = 144 at attempts = 17000
 tracks = 144 at attempts = 18000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 20080
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:5   Its length is:18800
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  144
 tracks = 129 at attempts =  1000
 tracks = 128 at attempts =  2000
 tracks = 127 at attempts =  3000
 tracks = 127 at attempts =  4000
 tracks = 126 at attempts =  5000
 tracks = 126 at attempts =  6000
 tracks = 126 at attempts =  7000
 tracks = 126 at attempts =  8000
 tracks = 126 at attempts =  9000
 tracks = 126 at attempts = 10000
 tracks = 126 at attempts = 11000
 tracks = 126 at attempts = 12000
 tracks = 126 at attempts = 13000
 tracks = 126 at attempts = 14000
 tracks = 126 at attempts = 15000
 tracks = 126 at attempts = 16000
 tracks = 126 at attempts = 17000
 tracks = 126 at attempts = 18000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 20080
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:5   Its length is:18800
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  137
 tracks = 132 at attempts =  1000
 tracks = 129 at attempts =  2000
 tracks = 128 at attempts =  3000
 tracks = 127 at attempts =  4000
 tracks = 127 at attempts =  5000
 tracks = 127 at attempts =  6000
 tracks = 127 at attempts =  7000
 tracks = 127 at attempts =  8000
 tracks = 127 at attempts =  9000
 tracks = 127 at attempts = 10000
 tracks = 127 at attempts = 11000
 tracks = 127 at attempts = 12000
 tracks = 127 at attempts = 13000
 tracks = 127 at attempts = 14000
 tracks = 127 at attempts = 15000
 tracks = 127 at attempts = 16000
 tracks = 127 at attempts = 17000
 tracks = 127 at attempts = 18000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 20080
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:5   Its length is:18800
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  139
 tracks = 130 at attempts =  1000
 tracks = 128 at attempts =  2000
 tracks = 128 at attempts =  3000
 tracks = 127 at attempts =  4000
 tracks = 127 at attempts =  5000
 tracks = 126 at attempts =  6000
 tracks = 126 at attempts =  7000
 tracks = 126 at attempts =  8000
 tracks = 126 at attempts =  9000
 tracks = 126 at attempts = 10000
 tracks = 126 at attempts = 11000
 tracks = 126 at attempts = 12000
 tracks = 126 at attempts = 13000
 tracks = 126 at attempts = 14000
 tracks = 126 at attempts = 15000
 tracks = 126 at attempts = 16000
 tracks = 126 at attempts = 17000
 tracks = 126 at attempts = 18000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 20080
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:5   Its length is:18800
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  146
 tracks = 146 at attempts =  1000
 tracks = 146 at attempts =  2000
 tracks = 146 at attempts =  3000
 tracks = 146 at attempts =  4000
 tracks = 146 at attempts =  5000
 tracks = 146 at attempts =  6000
 tracks = 146 at attempts =  7000
 tracks = 146 at attempts =  8000
 tracks = 146 at attempts =  9000
 tracks = 146 at attempts = 10000
 tracks = 146 at attempts = 11000
 tracks = 146 at attempts = 12000
 tracks = 146 at attempts = 13000
 tracks = 146 at attempts = 14000
 tracks = 146 at attempts = 15000
 tracks = 146 at attempts = 16000
 tracks = 146 at attempts = 17000
 tracks = 146 at attempts = 18000
 removing redundant feed-through pins
 the connectivity of all the nets is verified


***********************************************
*ACTUAL* FINAL NUMBER OF ROUTING TRACKS: 124
***********************************************


TimberWolfSC terminated normally with no errors and 0 warning[s]


twflow terminated normally with no errors and 0 warning[s]

Running getfillcell to determine cell to use for fill.
getfillcell.tcl NRISC_ULA /usr/local/share/qflow/tech/osu018/osu018_stdcells.lef FILL
Using cell FILL for fill
Running place2def.tcl
DEF database: centimicrons
Limits: xbot = -535.0 ybot = -465.0 xtop = 18855.0 ytop = 12065.0
Core values: 40.0 50.0 18840.0 12050.0
Offsets: 40.0 50.0
6 routing layers
126 horizontal tracks from -300.0 to 12300.0 step 100 (M1, M3, ...)
243 vertical tracks from -320.0 to 19120.0 step 80.0 (M2, M4, ...)
Done with place2def.tcl
Running addspacers to generate power stripes and align cell right edge
addspacers.tcl  NRISC_ULA /usr/local/share/qflow/tech/osu018/osu018_stdcells.lef FILL
Reading FILL macros from LEF file.
Reading DEF file NRISC_ULA.def. . .
Number of rows is 12
Longest row has width 188.4 um
Analysis of DEF file:
Number of components = 713
New number of components = 733
Number of rows = 12
Done with addspacers.tcl
blifanno.tcl /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/NRISC_ULA.blif NRISC_ULA.def /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/NRISC_ULA_anno.blif
Running blifanno.tcl
Reading DEF file NRISC_ULA.def. . .
Done with blifanno.tcl

Generating RTL verilog and SPICE netlist file in directory
   /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes
Files:
   Verilog: /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/NRISC_ULA.rtl.v
   Verilog: /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/NRISC_ULA.rtlnopwr.v
   Spice:   /home/jcscheunemann/Work/NRISC-Aurora/Hardware-design/Testes/NRISC_ULA.spc

Running blif2Verilog.
Running blif2BSpice.
Placement script ended on seg jan 1 22:00:42 -02 2018
